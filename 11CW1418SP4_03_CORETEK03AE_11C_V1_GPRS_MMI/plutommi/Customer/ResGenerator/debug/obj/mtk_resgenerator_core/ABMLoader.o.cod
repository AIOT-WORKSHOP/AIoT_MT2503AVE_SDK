GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 1


   1              		.file	"ABMLoader.c"
   4              		.text
   5              	Ltext0:
 439              	LC0:
 440 0000 424D5000 		.ascii "BMP\0"
 441              	LC1:
 442 0004 50424D00 		.ascii "PBM\0"
 443              	LC2:
 444 0008 4A504700 		.ascii "JPG\0"
 445              	LC3:
 446 000c 47494600 		.ascii "GIF\0"
 447              	LC4:
 448 0010 41424D00 		.ascii "ABM\0"
 449              	LC5:
 450 0014 41564900 		.ascii "AVI\0"
 451              	LC6:
 452 0018 33475000 		.ascii "3GP\0"
 453              	LC7:
 454 001c 4D503400 		.ascii "MP4\0"
 455              	LC8:
 456 0020 525600   		.ascii "RV\0"
 457              	LC9:
 458 0023 524D00   		.ascii "RM\0"
 459              	LC10:
 460 0026 524D5642 		.ascii "RMVB\0"
 460      00
 461              	LC11:
 462 002b 504E4700 		.ascii "PNG\0"
 463              	LC12:
 464 002f 50504E00 		.ascii "PPN\0"
 465              	LC13:
 466 0033 4D334400 		.ascii "M3D\0"
 467              	LC14:
 468 0037 434D5000 		.ascii "CMP\0"
 469              	LC15:
 470 003b 56495300 		.ascii "VIS\0"
 471              	LC16:
 472 003f 53564700 		.ascii "SVG\0"
 473              	LC17:
 474 0043 54544600 		.ascii "TTF\0"
 475              	LC18:
 476 0047 53544600 		.ascii "STF\0"
 477              	LC19:
 478 004b 43434300 		.ascii "CCC\0"
 479              	LC20:
 480 004f 4B545800 		.ascii "KTX\0"
 481 0053 8DB60000 		.align 32
 481      00008DBC 
 481      27000000 
 481      00
 482              	_image_resource_info:
 483 0060 00000000 		.long	LC0
 484 0064 01       		.byte	1
 485 0065 000000   		.space 3
 486 0068 04000000 		.long	LC1
 487 006c 04       		.byte	4
 488 006d 000000   		.space 3
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 2


 489 0070 08000000 		.long	LC2
 490 0074 09       		.byte	9
 491 0075 000000   		.space 3
 492 0078 0C000000 		.long	LC3
 493 007c 03       		.byte	3
 494 007d 000000   		.space 3
 495 0080 10000000 		.long	LC4
 496 0084 28       		.byte	40
 497 0085 000000   		.space 3
 498 0088 14000000 		.long	LC5
 499 008c 0C       		.byte	12
 500 008d 000000   		.space 3
 501 0090 18000000 		.long	LC6
 502 0094 0E       		.byte	14
 503 0095 000000   		.space 3
 504 0098 1C000000 		.long	LC7
 505 009c 10       		.byte	16
 506 009d 000000   		.space 3
 507 00a0 20000000 		.long	LC8
 508 00a4 4A       		.byte	74
 509 00a5 000000   		.space 3
 510 00a8 23000000 		.long	LC9
 511 00ac 4C       		.byte	76
 512 00ad 000000   		.space 3
 513 00b0 26000000 		.long	LC10
 514 00b4 4E       		.byte	78
 515 00b5 000000   		.space 3
 516 00b8 2B000000 		.long	LC11
 517 00bc 13       		.byte	19
 518 00bd 000000   		.space 3
 519 00c0 2F000000 		.long	LC12
 520 00c4 48       		.byte	72
 521 00c5 000000   		.space 3
 522 00c8 33000000 		.long	LC13
 523 00cc 19       		.byte	25
 524 00cd 000000   		.space 3
 525 00d0 37000000 		.long	LC14
 526 00d4 1D       		.byte	29
 527 00d5 000000   		.space 3
 528 00d8 3B000000 		.long	LC15
 529 00dc 31       		.byte	49
 530 00dd 000000   		.space 3
 531 00e0 3F000000 		.long	LC16
 532 00e4 1B       		.byte	27
 533 00e5 000000   		.space 3
 534 00e8 43000000 		.long	LC17
 535 00ec 49       		.byte	73
 536 00ed 000000   		.space 3
 537 00f0 47000000 		.long	LC18
 538 00f4 49       		.byte	73
 539 00f5 000000   		.space 3
 540 00f8 4B000000 		.long	LC19
 541 00fc 49       		.byte	73
 542 00fd 000000   		.space 3
 543 0100 4F000000 		.long	LC20
 544 0104 43       		.byte	67
 545 0105 000000   		.space 3
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 3


 638              		.align 2
 639              	_log2_table:
 640 0108 0200     		.word	2
 641 010a 0400     		.word	4
 642 010c 0800     		.word	8
 643 010e 1000     		.word	16
 644 0110 2000     		.word	32
 645 0112 4000     		.word	64
 646 0114 8000     		.word	128
 647 0116 0001     		.word	256
 648 0118 0002     		.word	512
 649 011a 0004     		.word	1024
 650 011c 0008     		.word	2048
 651 011e 0010     		.word	4096
 652 0120 0020     		.word	8192
 653 0122 0040     		.word	16384
 654 0124 0080     		.word	-32768
 659              	_COLOR_REDUCE_24_TO_16:
   1:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
   2:../../MMI/Resource/ABMLoader.c **** *  Copyright Statement:
   3:../../MMI/Resource/ABMLoader.c **** *  --------------------
   4:../../MMI/Resource/ABMLoader.c **** *  This software is protected by Copyright and the information contained
   5:../../MMI/Resource/ABMLoader.c **** *  herein is confidential. The software may not be copied and the information
   6:../../MMI/Resource/ABMLoader.c **** *  contained herein may not be used or disclosed except with the written
   7:../../MMI/Resource/ABMLoader.c **** *  permission of MediaTek Inc. (C) 2005
   8:../../MMI/Resource/ABMLoader.c **** *
   9:../../MMI/Resource/ABMLoader.c **** *  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
  10:../../MMI/Resource/ABMLoader.c **** *  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
  11:../../MMI/Resource/ABMLoader.c **** *  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
  12:../../MMI/Resource/ABMLoader.c **** *  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
  13:../../MMI/Resource/ABMLoader.c **** *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
  14:../../MMI/Resource/ABMLoader.c **** *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
  15:../../MMI/Resource/ABMLoader.c **** *  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
  16:../../MMI/Resource/ABMLoader.c **** *  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
  17:../../MMI/Resource/ABMLoader.c **** *  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
  18:../../MMI/Resource/ABMLoader.c **** *  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
  19:../../MMI/Resource/ABMLoader.c **** *  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
  20:../../MMI/Resource/ABMLoader.c **** *  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
  21:../../MMI/Resource/ABMLoader.c **** *
  22:../../MMI/Resource/ABMLoader.c **** *  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
  23:../../MMI/Resource/ABMLoader.c **** *  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
  24:../../MMI/Resource/ABMLoader.c **** *  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
  25:../../MMI/Resource/ABMLoader.c **** *  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
  26:../../MMI/Resource/ABMLoader.c **** *  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
  27:../../MMI/Resource/ABMLoader.c **** *
  28:../../MMI/Resource/ABMLoader.c **** *  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
  29:../../MMI/Resource/ABMLoader.c **** *  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
  30:../../MMI/Resource/ABMLoader.c **** *  LAWS PRINCIPLES.	ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
  31:../../MMI/Resource/ABMLoader.c **** *  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
  32:../../MMI/Resource/ABMLoader.c **** *  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
  33:../../MMI/Resource/ABMLoader.c **** *
  34:../../MMI/Resource/ABMLoader.c **** *****************************************************************************/
  35:../../MMI/Resource/ABMLoader.c **** 
  36:../../MMI/Resource/ABMLoader.c **** /*******************************************************************************
  37:../../MMI/Resource/ABMLoader.c ****  * Filename:
  38:../../MMI/Resource/ABMLoader.c ****  * ---------
  39:../../MMI/Resource/ABMLoader.c ****  *  ABMLoader.c
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 4


  40:../../MMI/Resource/ABMLoader.c ****  *
  41:../../MMI/Resource/ABMLoader.c ****  * Project:
  42:../../MMI/Resource/ABMLoader.c ****  * --------
  43:../../MMI/Resource/ABMLoader.c ****  *  PlutoMMI
  44:../../MMI/Resource/ABMLoader.c ****  *
  45:../../MMI/Resource/ABMLoader.c ****  * Description:
  46:../../MMI/Resource/ABMLoader.c ****  * ------------
  47:../../MMI/Resource/ABMLoader.c ****  *  Alpha BitMap (ABM) encoder
  48:../../MMI/Resource/ABMLoader.c ****  *
  49:../../MMI/Resource/ABMLoader.c ****  *  1. The search algorithm of the color index table is binary search.
  50:../../MMI/Resource/ABMLoader.c ****  *  2. The ABM encoder only support 8, 24, and 32-bit bitmap input.
  51:../../MMI/Resource/ABMLoader.c ****  *  3. ABM only supports up to 65536 colors.
  52:../../MMI/Resource/ABMLoader.c ****  *  4. The ABM palette color format is:
  53:../../MMI/Resource/ABMLoader.c ****  *     a. 16-bit for 16-bit MAIN BASE LAYER (MOST CASE)
  54:../../MMI/Resource/ABMLoader.c ****  *     b. 24-bit for 24-bit and 32-bit MAIN BASE LAYER
  55:../../MMI/Resource/ABMLoader.c ****  * 
  56:../../MMI/Resource/ABMLoader.c ****  * Author:
  57:../../MMI/Resource/ABMLoader.c ****  * -------
  58:../../MMI/Resource/ABMLoader.c ****  * -------
  59:../../MMI/Resource/ABMLoader.c ****  *
  60:../../MMI/Resource/ABMLoader.c ****  *============================================================================
  61:../../MMI/Resource/ABMLoader.c ****  *			   HISTORY
  62:../../MMI/Resource/ABMLoader.c ****  * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
  63:../../MMI/Resource/ABMLoader.c ****  *------------------------------------------------------------------------------
  64:../../MMI/Resource/ABMLoader.c ****  * removed!
  65:../../MMI/Resource/ABMLoader.c ****  *
  66:../../MMI/Resource/ABMLoader.c ****  * removed!
  67:../../MMI/Resource/ABMLoader.c ****  * removed!
  68:../../MMI/Resource/ABMLoader.c ****  * removed!
  69:../../MMI/Resource/ABMLoader.c ****  *
  70:../../MMI/Resource/ABMLoader.c ****  * removed!
  71:../../MMI/Resource/ABMLoader.c ****  * removed!
  72:../../MMI/Resource/ABMLoader.c ****  * removed!
  73:../../MMI/Resource/ABMLoader.c ****  *
  74:../../MMI/Resource/ABMLoader.c ****  * removed!
  75:../../MMI/Resource/ABMLoader.c ****  * removed!
  76:../../MMI/Resource/ABMLoader.c ****  * removed!
  77:../../MMI/Resource/ABMLoader.c ****  *
  78:../../MMI/Resource/ABMLoader.c ****  * removed!
  79:../../MMI/Resource/ABMLoader.c ****  * removed!
  80:../../MMI/Resource/ABMLoader.c ****  * removed!
  81:../../MMI/Resource/ABMLoader.c ****  *
  82:../../MMI/Resource/ABMLoader.c ****  * removed!
  83:../../MMI/Resource/ABMLoader.c ****  * removed!
  84:../../MMI/Resource/ABMLoader.c ****  * removed!
  85:../../MMI/Resource/ABMLoader.c ****  *
  86:../../MMI/Resource/ABMLoader.c ****  * removed!
  87:../../MMI/Resource/ABMLoader.c ****  * removed!
  88:../../MMI/Resource/ABMLoader.c ****  * removed!
  89:../../MMI/Resource/ABMLoader.c ****  *
  90:../../MMI/Resource/ABMLoader.c ****  * removed!
  91:../../MMI/Resource/ABMLoader.c ****  * removed!
  92:../../MMI/Resource/ABMLoader.c ****  * removed!
  93:../../MMI/Resource/ABMLoader.c ****  *
  94:../../MMI/Resource/ABMLoader.c ****  * removed!
  95:../../MMI/Resource/ABMLoader.c ****  * removed!
  96:../../MMI/Resource/ABMLoader.c ****  * removed!
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 5


  97:../../MMI/Resource/ABMLoader.c ****  *
  98:../../MMI/Resource/ABMLoader.c ****  * removed!
  99:../../MMI/Resource/ABMLoader.c ****  * removed!
 100:../../MMI/Resource/ABMLoader.c ****  * removed!
 101:../../MMI/Resource/ABMLoader.c ****  *
 102:../../MMI/Resource/ABMLoader.c ****  * removed!
 103:../../MMI/Resource/ABMLoader.c ****  * removed!
 104:../../MMI/Resource/ABMLoader.c ****  * removed!
 105:../../MMI/Resource/ABMLoader.c ****  *
 106:../../MMI/Resource/ABMLoader.c ****  * removed!
 107:../../MMI/Resource/ABMLoader.c ****  * removed!
 108:../../MMI/Resource/ABMLoader.c ****  * removed!
 109:../../MMI/Resource/ABMLoader.c ****  *
 110:../../MMI/Resource/ABMLoader.c ****  * removed!
 111:../../MMI/Resource/ABMLoader.c ****  * removed!
 112:../../MMI/Resource/ABMLoader.c ****  * removed!
 113:../../MMI/Resource/ABMLoader.c ****  *
 114:../../MMI/Resource/ABMLoader.c ****  * removed!
 115:../../MMI/Resource/ABMLoader.c ****  * removed!
 116:../../MMI/Resource/ABMLoader.c ****  * removed!
 117:../../MMI/Resource/ABMLoader.c ****  *
 118:../../MMI/Resource/ABMLoader.c ****  * removed!
 119:../../MMI/Resource/ABMLoader.c ****  * removed!
 120:../../MMI/Resource/ABMLoader.c ****  * removed!
 121:../../MMI/Resource/ABMLoader.c ****  *
 122:../../MMI/Resource/ABMLoader.c ****  * removed!
 123:../../MMI/Resource/ABMLoader.c ****  * removed!
 124:../../MMI/Resource/ABMLoader.c ****  * removed!
 125:../../MMI/Resource/ABMLoader.c ****  *
 126:../../MMI/Resource/ABMLoader.c ****  * removed!
 127:../../MMI/Resource/ABMLoader.c ****  * removed!
 128:../../MMI/Resource/ABMLoader.c ****  * removed!
 129:../../MMI/Resource/ABMLoader.c ****  *
 130:../../MMI/Resource/ABMLoader.c ****  * removed!
 131:../../MMI/Resource/ABMLoader.c ****  * removed!
 132:../../MMI/Resource/ABMLoader.c ****  * removed!
 133:../../MMI/Resource/ABMLoader.c ****  *
 134:../../MMI/Resource/ABMLoader.c ****  * removed!
 135:../../MMI/Resource/ABMLoader.c ****  * removed!
 136:../../MMI/Resource/ABMLoader.c ****  * removed!
 137:../../MMI/Resource/ABMLoader.c ****  *
 138:../../MMI/Resource/ABMLoader.c ****  * removed!
 139:../../MMI/Resource/ABMLoader.c ****  * removed!
 140:../../MMI/Resource/ABMLoader.c ****  * removed!
 141:../../MMI/Resource/ABMLoader.c ****  *
 142:../../MMI/Resource/ABMLoader.c ****  * removed!
 143:../../MMI/Resource/ABMLoader.c ****  * removed!
 144:../../MMI/Resource/ABMLoader.c ****  * removed!
 145:../../MMI/Resource/ABMLoader.c ****  *
 146:../../MMI/Resource/ABMLoader.c ****  * removed!
 147:../../MMI/Resource/ABMLoader.c ****  * removed!
 148:../../MMI/Resource/ABMLoader.c ****  * removed!
 149:../../MMI/Resource/ABMLoader.c ****  *
 150:../../MMI/Resource/ABMLoader.c ****  * removed!
 151:../../MMI/Resource/ABMLoader.c ****  * removed!
 152:../../MMI/Resource/ABMLoader.c ****  * removed!
 153:../../MMI/Resource/ABMLoader.c ****  *
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 6


 154:../../MMI/Resource/ABMLoader.c ****  * removed!
 155:../../MMI/Resource/ABMLoader.c ****  * removed!
 156:../../MMI/Resource/ABMLoader.c ****  * removed!
 157:../../MMI/Resource/ABMLoader.c ****  *
 158:../../MMI/Resource/ABMLoader.c ****  * removed!
 159:../../MMI/Resource/ABMLoader.c ****  * removed!
 160:../../MMI/Resource/ABMLoader.c ****  * removed!
 161:../../MMI/Resource/ABMLoader.c ****  *
 162:../../MMI/Resource/ABMLoader.c ****  * removed!
 163:../../MMI/Resource/ABMLoader.c ****  * removed!
 164:../../MMI/Resource/ABMLoader.c ****  * removed!
 165:../../MMI/Resource/ABMLoader.c ****  *
 166:../../MMI/Resource/ABMLoader.c ****  * removed!
 167:../../MMI/Resource/ABMLoader.c ****  * removed!
 168:../../MMI/Resource/ABMLoader.c ****  * removed!
 169:../../MMI/Resource/ABMLoader.c ****  *
 170:../../MMI/Resource/ABMLoader.c ****  * removed!
 171:../../MMI/Resource/ABMLoader.c ****  * removed!
 172:../../MMI/Resource/ABMLoader.c ****  * removed!
 173:../../MMI/Resource/ABMLoader.c ****  *
 174:../../MMI/Resource/ABMLoader.c ****  * removed!
 175:../../MMI/Resource/ABMLoader.c ****  * removed!
 176:../../MMI/Resource/ABMLoader.c ****  * removed!
 177:../../MMI/Resource/ABMLoader.c ****  *
 178:../../MMI/Resource/ABMLoader.c ****  * removed!
 179:../../MMI/Resource/ABMLoader.c ****  * removed!
 180:../../MMI/Resource/ABMLoader.c ****  * removed!
 181:../../MMI/Resource/ABMLoader.c ****  *
 182:../../MMI/Resource/ABMLoader.c ****  * removed!
 183:../../MMI/Resource/ABMLoader.c ****  * removed!
 184:../../MMI/Resource/ABMLoader.c ****  * removed!
 185:../../MMI/Resource/ABMLoader.c ****  *
 186:../../MMI/Resource/ABMLoader.c ****  * removed!
 187:../../MMI/Resource/ABMLoader.c ****  * removed!
 188:../../MMI/Resource/ABMLoader.c ****  * removed!
 189:../../MMI/Resource/ABMLoader.c ****  *
 190:../../MMI/Resource/ABMLoader.c ****  * removed!
 191:../../MMI/Resource/ABMLoader.c ****  * removed!
 192:../../MMI/Resource/ABMLoader.c ****  * removed!
 193:../../MMI/Resource/ABMLoader.c ****  *
 194:../../MMI/Resource/ABMLoader.c ****  * removed!
 195:../../MMI/Resource/ABMLoader.c ****  * removed!
 196:../../MMI/Resource/ABMLoader.c ****  * removed!
 197:../../MMI/Resource/ABMLoader.c ****  *
 198:../../MMI/Resource/ABMLoader.c ****  * removed!
 199:../../MMI/Resource/ABMLoader.c ****  * removed!
 200:../../MMI/Resource/ABMLoader.c ****  * removed!
 201:../../MMI/Resource/ABMLoader.c ****  *
 202:../../MMI/Resource/ABMLoader.c ****  * removed!
 203:../../MMI/Resource/ABMLoader.c ****  * removed!
 204:../../MMI/Resource/ABMLoader.c ****  * removed!
 205:../../MMI/Resource/ABMLoader.c ****  *
 206:../../MMI/Resource/ABMLoader.c ****  * removed!
 207:../../MMI/Resource/ABMLoader.c ****  * removed!
 208:../../MMI/Resource/ABMLoader.c ****  * removed!
 209:../../MMI/Resource/ABMLoader.c ****  *
 210:../../MMI/Resource/ABMLoader.c ****  * removed!
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 7


 211:../../MMI/Resource/ABMLoader.c ****  * removed!
 212:../../MMI/Resource/ABMLoader.c ****  * removed!
 213:../../MMI/Resource/ABMLoader.c ****  *
 214:../../MMI/Resource/ABMLoader.c ****  * removed!
 215:../../MMI/Resource/ABMLoader.c ****  * removed!
 216:../../MMI/Resource/ABMLoader.c ****  * removed!
 217:../../MMI/Resource/ABMLoader.c ****  *
 218:../../MMI/Resource/ABMLoader.c ****  * removed!
 219:../../MMI/Resource/ABMLoader.c ****  * removed!
 220:../../MMI/Resource/ABMLoader.c ****  * removed!
 221:../../MMI/Resource/ABMLoader.c ****  *
 222:../../MMI/Resource/ABMLoader.c ****  * removed!
 223:../../MMI/Resource/ABMLoader.c ****  * removed!
 224:../../MMI/Resource/ABMLoader.c ****  * removed!
 225:../../MMI/Resource/ABMLoader.c ****  *
 226:../../MMI/Resource/ABMLoader.c ****  * removed!
 227:../../MMI/Resource/ABMLoader.c ****  * removed!
 228:../../MMI/Resource/ABMLoader.c ****  * removed!
 229:../../MMI/Resource/ABMLoader.c ****  *
 230:../../MMI/Resource/ABMLoader.c ****  * removed!
 231:../../MMI/Resource/ABMLoader.c ****  * removed!
 232:../../MMI/Resource/ABMLoader.c ****  * removed!
 233:../../MMI/Resource/ABMLoader.c ****  *
 234:../../MMI/Resource/ABMLoader.c ****  * removed!
 235:../../MMI/Resource/ABMLoader.c ****  * removed!
 236:../../MMI/Resource/ABMLoader.c ****  * removed!
 237:../../MMI/Resource/ABMLoader.c ****  *
 238:../../MMI/Resource/ABMLoader.c ****  * removed!
 239:../../MMI/Resource/ABMLoader.c ****  * removed!
 240:../../MMI/Resource/ABMLoader.c ****  * removed!
 241:../../MMI/Resource/ABMLoader.c ****  *
 242:../../MMI/Resource/ABMLoader.c ****  * removed!
 243:../../MMI/Resource/ABMLoader.c ****  * removed!
 244:../../MMI/Resource/ABMLoader.c ****  * removed!
 245:../../MMI/Resource/ABMLoader.c ****  *
 246:../../MMI/Resource/ABMLoader.c ****  * removed!
 247:../../MMI/Resource/ABMLoader.c ****  * removed!
 248:../../MMI/Resource/ABMLoader.c ****  * removed!
 249:../../MMI/Resource/ABMLoader.c ****  *
 250:../../MMI/Resource/ABMLoader.c ****  * removed!
 251:../../MMI/Resource/ABMLoader.c ****  * removed!
 252:../../MMI/Resource/ABMLoader.c ****  * removed!
 253:../../MMI/Resource/ABMLoader.c ****  *
 254:../../MMI/Resource/ABMLoader.c ****  * removed!
 255:../../MMI/Resource/ABMLoader.c ****  * removed!
 256:../../MMI/Resource/ABMLoader.c ****  * removed!
 257:../../MMI/Resource/ABMLoader.c ****  *
 258:../../MMI/Resource/ABMLoader.c ****  * removed!
 259:../../MMI/Resource/ABMLoader.c ****  * removed!
 260:../../MMI/Resource/ABMLoader.c ****  * removed!
 261:../../MMI/Resource/ABMLoader.c ****  *
 262:../../MMI/Resource/ABMLoader.c ****  * removed!
 263:../../MMI/Resource/ABMLoader.c ****  * removed!
 264:../../MMI/Resource/ABMLoader.c ****  * removed!
 265:../../MMI/Resource/ABMLoader.c ****  *
 266:../../MMI/Resource/ABMLoader.c ****  * removed!
 267:../../MMI/Resource/ABMLoader.c ****  * removed!
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 8


 268:../../MMI/Resource/ABMLoader.c ****  * removed!
 269:../../MMI/Resource/ABMLoader.c ****  *
 270:../../MMI/Resource/ABMLoader.c ****  * removed!
 271:../../MMI/Resource/ABMLoader.c ****  * removed!
 272:../../MMI/Resource/ABMLoader.c ****  * removed!
 273:../../MMI/Resource/ABMLoader.c ****  *
 274:../../MMI/Resource/ABMLoader.c ****  * removed!
 275:../../MMI/Resource/ABMLoader.c ****  * removed!
 276:../../MMI/Resource/ABMLoader.c ****  * removed!
 277:../../MMI/Resource/ABMLoader.c ****  *
 278:../../MMI/Resource/ABMLoader.c ****  * removed!
 279:../../MMI/Resource/ABMLoader.c ****  * removed!
 280:../../MMI/Resource/ABMLoader.c ****  * removed!
 281:../../MMI/Resource/ABMLoader.c ****  *
 282:../../MMI/Resource/ABMLoader.c ****  * removed!
 283:../../MMI/Resource/ABMLoader.c ****  * removed!
 284:../../MMI/Resource/ABMLoader.c ****  * removed!
 285:../../MMI/Resource/ABMLoader.c ****  *
 286:../../MMI/Resource/ABMLoader.c ****  * removed!
 287:../../MMI/Resource/ABMLoader.c ****  * removed!
 288:../../MMI/Resource/ABMLoader.c ****  * removed!
 289:../../MMI/Resource/ABMLoader.c ****  *
 290:../../MMI/Resource/ABMLoader.c ****  * removed!
 291:../../MMI/Resource/ABMLoader.c ****  * removed!
 292:../../MMI/Resource/ABMLoader.c ****  * removed!
 293:../../MMI/Resource/ABMLoader.c ****  *
 294:../../MMI/Resource/ABMLoader.c ****  * removed!
 295:../../MMI/Resource/ABMLoader.c ****  * removed!
 296:../../MMI/Resource/ABMLoader.c ****  * removed!
 297:../../MMI/Resource/ABMLoader.c ****  *
 298:../../MMI/Resource/ABMLoader.c ****  * removed!
 299:../../MMI/Resource/ABMLoader.c ****  * removed!
 300:../../MMI/Resource/ABMLoader.c ****  * removed!
 301:../../MMI/Resource/ABMLoader.c ****  *
 302:../../MMI/Resource/ABMLoader.c ****  * removed!
 303:../../MMI/Resource/ABMLoader.c ****  * removed!
 304:../../MMI/Resource/ABMLoader.c ****  * removed!
 305:../../MMI/Resource/ABMLoader.c ****  *
 306:../../MMI/Resource/ABMLoader.c ****  * removed!
 307:../../MMI/Resource/ABMLoader.c ****  * removed!
 308:../../MMI/Resource/ABMLoader.c ****  * removed!
 309:../../MMI/Resource/ABMLoader.c ****  *
 310:../../MMI/Resource/ABMLoader.c ****  * removed!
 311:../../MMI/Resource/ABMLoader.c ****  * removed!
 312:../../MMI/Resource/ABMLoader.c ****  * removed!
 313:../../MMI/Resource/ABMLoader.c ****  *
 314:../../MMI/Resource/ABMLoader.c ****  * removed!
 315:../../MMI/Resource/ABMLoader.c ****  * removed!
 316:../../MMI/Resource/ABMLoader.c ****  * removed!
 317:../../MMI/Resource/ABMLoader.c ****  *
 318:../../MMI/Resource/ABMLoader.c ****  * removed!
 319:../../MMI/Resource/ABMLoader.c ****  * removed!
 320:../../MMI/Resource/ABMLoader.c ****  * removed!
 321:../../MMI/Resource/ABMLoader.c ****  *
 322:../../MMI/Resource/ABMLoader.c ****  *------------------------------------------------------------------------------
 323:../../MMI/Resource/ABMLoader.c ****  * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 324:../../MMI/Resource/ABMLoader.c ****  *============================================================================
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 9


 325:../../MMI/Resource/ABMLoader.c ****  ****************************************************************************/
 326:../../MMI/Resource/ABMLoader.c **** 
 327:../../MMI/Resource/ABMLoader.c **** /*
 328:../../MMI/Resource/ABMLoader.c ****  * THIS FILE IS USED FOR RESOURCE GENERATOR AND MTE ONLY.
 329:../../MMI/Resource/ABMLoader.c ****  */
 330:../../MMI/Resource/ABMLoader.c **** #if !defined(__MTK_TARGET__) || defined(__RESOURCE_GEN_)
 331:../../MMI/Resource/ABMLoader.c **** 
 332:../../MMI/Resource/ABMLoader.c **** /***************************************************************************** 
 333:../../MMI/Resource/ABMLoader.c ****  * Include
 334:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 335:../../MMI/Resource/ABMLoader.c **** #include <stdio.h>
 336:../../MMI/Resource/ABMLoader.c **** #include "MMI_features.h"
 337:../../MMI/Resource/ABMLoader.c **** #include "ABMLoader.h"
 338:../../MMI/Resource/ABMLoader.c **** #include "gui_resource_type.h"
 339:../../MMI/Resource/ABMLoader.c **** 
 340:../../MMI/Resource/ABMLoader.c **** #include "gdi_include.h"
 341:../../MMI/Resource/ABMLoader.c **** #include "gdi_image_alpha_bmp_v2_internal.h"
 342:../../MMI/Resource/ABMLoader.c **** #include "WriteResUtil.h" // for ResgenImageOutStream
 343:../../MMI/Resource/ABMLoader.c **** 
 344:../../MMI/Resource/ABMLoader.c **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 345:../../MMI/Resource/ABMLoader.c **** #include "ImageGetDimension.h"
 346:../../MMI/Resource/ABMLoader.c **** #endif /* __MMI_RESOURCE_ENFB_SUPPORT__ */
 347:../../MMI/Resource/ABMLoader.c **** 
 348:../../MMI/Resource/ABMLoader.c **** /*RHR*/
 349:../../MMI/Resource/ABMLoader.c **** #include "MMIDataType.h"
 350:../../MMI/Resource/ABMLoader.c **** 
 351:../../MMI/Resource/ABMLoader.c **** #ifdef __RESOURCE_GEN_
 352:../../MMI/Resource/ABMLoader.c ****     #include "ResgenLogCAPI.h"   // Resgen Log APIs
 353:../../MMI/Resource/ABMLoader.c ****     #include "OfflineResPopCAPI.h"
 354:../../MMI/Resource/ABMLoader.c **** #endif //__RESOURCE_GEN_
 355:../../MMI/Resource/ABMLoader.c **** /***************************************************************************** 
 356:../../MMI/Resource/ABMLoader.c ****  * extern variable
 357:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 358:../../MMI/Resource/ABMLoader.c **** extern int toolFlag;
 359:../../MMI/Resource/ABMLoader.c **** extern FILE *dest_file;
 360:../../MMI/Resource/ABMLoader.c **** 
 361:../../MMI/Resource/ABMLoader.c **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 362:../../MMI/Resource/ABMLoader.c **** extern FILE *enfb_img_data_file;
 363:../../MMI/Resource/ABMLoader.c **** extern U32 enfb_offset;
 364:../../MMI/Resource/ABMLoader.c **** extern U32 enfb_size;
 365:../../MMI/Resource/ABMLoader.c **** extern MMI_BOOL ENFBAssociatedIDAdded;
 366:../../MMI/Resource/ABMLoader.c **** #endif
 367:../../MMI/Resource/ABMLoader.c **** 
 368:../../MMI/Resource/ABMLoader.c **** /***************************************************************************** 
 369:../../MMI/Resource/ABMLoader.c ****  * Define
 370:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 371:../../MMI/Resource/ABMLoader.c **** #ifdef __RESOURCE_GEN_ 
 372:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_TAG       "ABMLOADER"
 373:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_D(format, args...) RES_LOG_D((ABMLDR_TAG), (format) , ##args)
 374:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_V(format, args...) RES_LOG_V((ABMLDR_TAG), (format) , ##args)
 375:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_W(format, args...) RES_LOG_W((ABMLDR_TAG), (format) , ##args)
 376:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_E(format, args...) RES_LOG_E((ABMLDR_TAG), (format) , ##args)
 377:../../MMI/Resource/ABMLoader.c **** #else
 378:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_D(format, ...) printf((format), ##__VA_ARGS__)
 379:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_V(format, ...) printf((format), ##__VA_ARGS__)
 380:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_W(format, ...) printf((format), ##__VA_ARGS__)
 381:../../MMI/Resource/ABMLoader.c ****     #define ABMLDR_LOG_E(format, ...) printf((format), ##__VA_ARGS__)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 10


 382:../../MMI/Resource/ABMLoader.c **** #endif  //__RESOURCE_GEN_
 383:../../MMI/Resource/ABMLoader.c **** 
 384:../../MMI/Resource/ABMLoader.c **** /* check 16-bit RGB color format */
 385:../../MMI/Resource/ABMLoader.c **** #define RGB_16_BIT_TYPE         DRV_RGB_TO_HW(0, 255, 0)
 386:../../MMI/Resource/ABMLoader.c **** #define COLOR_FORMAT_RGB3553    0xE007  /* 6205B, 6218 */
 387:../../MMI/Resource/ABMLoader.c **** #define COLOR_FORMAT_RGB565     0x07E0  /* other than 6205B and 6218 */
 388:../../MMI/Resource/ABMLoader.c **** 
 389:../../MMI/Resource/ABMLoader.c **** 
 390:../../MMI/Resource/ABMLoader.c **** /*
 391:../../MMI/Resource/ABMLoader.c ****  * color primitives
 392:../../MMI/Resource/ABMLoader.c ****  */
 393:../../MMI/Resource/ABMLoader.c **** #define GET_32(bp)  ((U32)((bp)[0] | ((bp)[1] << 8) | ((bp)[2] << 16) | ((bp)[3] << 24)))
 394:../../MMI/Resource/ABMLoader.c **** #define GET_24(bp)  ((U32)((bp)[0] | ((bp)[1] << 8)) | ((bp)[2] << 16))
 395:../../MMI/Resource/ABMLoader.c **** #define GET_16(bp)  ((U32)((bp)[0] | ((bp)[1] << 8)))
 396:../../MMI/Resource/ABMLoader.c ****     
 397:../../MMI/Resource/ABMLoader.c **** #define PUT_16(mem, c)  *((U16*)(mem)) = (c)
 398:../../MMI/Resource/ABMLoader.c **** #define PUT_24(mem, c)             \
 399:../../MMI/Resource/ABMLoader.c ****     do                             \
 400:../../MMI/Resource/ABMLoader.c ****     {                              \
 401:../../MMI/Resource/ABMLoader.c ****         U8 *mem_8 = (U8*)(mem);    \
 402:../../MMI/Resource/ABMLoader.c ****         mem_8[0] = (c);            \
 403:../../MMI/Resource/ABMLoader.c ****         mem_8[1] = (c) >> 8;       \
 404:../../MMI/Resource/ABMLoader.c ****         mem_8[2] = (c) >> 16;      \
 405:../../MMI/Resource/ABMLoader.c ****     } while (0)
 406:../../MMI/Resource/ABMLoader.c ****     
 407:../../MMI/Resource/ABMLoader.c **** #define ARGB(a, r, g, b)            (((a) << 24) | ((r) << 16) | ((g) << 8) | (b))
 408:../../MMI/Resource/ABMLoader.c **** #define RGB(r, g, b)                (((r) << 16) | ((g) << 8) | (b))
 409:../../MMI/Resource/ABMLoader.c ****     
 410:../../MMI/Resource/ABMLoader.c **** /* RGB888 */
 411:../../MMI/Resource/ABMLoader.c **** #define R_OF_RGB888(c)              (((c) <<  8) >> 24)
 412:../../MMI/Resource/ABMLoader.c **** #define G_OF_RGB888(c)              (((c) << 16) >> 24)
 413:../../MMI/Resource/ABMLoader.c **** #define B_OF_RGB888(c)              (((c) << 24) >> 24)
 414:../../MMI/Resource/ABMLoader.c ****     
 415:../../MMI/Resource/ABMLoader.c **** /* ARGB8888 */
 416:../../MMI/Resource/ABMLoader.c **** #define A_OF_ARGB8888(c)            ((c) >> 24)
 417:../../MMI/Resource/ABMLoader.c **** #define R_OF_ARGB8888(c)            R_OF_RGB888(c)
 418:../../MMI/Resource/ABMLoader.c **** #define G_OF_ARGB8888(c)            G_OF_RGB888(c)
 419:../../MMI/Resource/ABMLoader.c **** #define B_OF_ARGB8888(c)            B_OF_RGB888(c)
 420:../../MMI/Resource/ABMLoader.c ****     
 421:../../MMI/Resource/ABMLoader.c **** /* RGB565 */
 422:../../MMI/Resource/ABMLoader.c **** #define R_OF_RGB565(c)              (((c) << 16) >> 27)
 423:../../MMI/Resource/ABMLoader.c **** #define G_OF_RGB565(c)              (((c) << 21) >> 26)
 424:../../MMI/Resource/ABMLoader.c **** #define B_OF_RGB565(c)              (((c) << 27) >> 27)
 425:../../MMI/Resource/ABMLoader.c ****     
 426:../../MMI/Resource/ABMLoader.c **** /* RGB3553 */
 427:../../MMI/Resource/ABMLoader.c **** #define R_OF_RGB3553(c)             (((c) << 24) >> 27)
 428:../../MMI/Resource/ABMLoader.c **** #define G_OF_RGB3553(c)             ((((c) & 0x7) << 3) | (((c) >> 13) & 0x7))
 429:../../MMI/Resource/ABMLoader.c **** #define B_OF_RGB3553(c)             (((c) << 19) >> 27)
 430:../../MMI/Resource/ABMLoader.c ****  
 431:../../MMI/Resource/ABMLoader.c **** /* RGB16 */
 432:../../MMI/Resource/ABMLoader.c **** #define R_OF_RGB16(c)               ((RGB_16_BIT_TYPE == COLOR_FORMAT_RGB565) ? R_OF_RGB565(c) : R_
 433:../../MMI/Resource/ABMLoader.c **** #define G_OF_RGB16(c)               ((RGB_16_BIT_TYPE == COLOR_FORMAT_RGB565) ? G_OF_RGB565(c) : G_
 434:../../MMI/Resource/ABMLoader.c **** #define B_OF_RGB16(c)               ((RGB_16_BIT_TYPE == COLOR_FORMAT_RGB565) ? B_OF_RGB565(c) : B_
 435:../../MMI/Resource/ABMLoader.c **** 
 436:../../MMI/Resource/ABMLoader.c **** #define RGB565(r, g, b)             (((r) << 11) | ((g) << 5) | (b))
 437:../../MMI/Resource/ABMLoader.c **** #define RGB3553(r, g, b)            (((r) << 3) | ((b) << 8) | ((g) >> 3) | (((g) & 0x7) << 13))
 438:../../MMI/Resource/ABMLoader.c ****     
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 11


 439:../../MMI/Resource/ABMLoader.c **** #define ARGB8888_TO_RGB565(c)       RGB565(R_OF_ARGB8888(c) >> 3, G_OF_ARGB8888(c) >> 2, B_OF_ARGB8
 440:../../MMI/Resource/ABMLoader.c **** #define ARGB8888_TO_RGB3553(c)      RGB3553(R_OF_ARGB8888(c) >> 3, G_OF_ARGB8888(c) >> 2, B_OF_ARGB
 441:../../MMI/Resource/ABMLoader.c **** 
 442:../../MMI/Resource/ABMLoader.c **** #define ARGB8888_TO_RGB16(c)        ((RGB_16_BIT_TYPE == COLOR_FORMAT_RGB565) ? ARGB8888_TO_RGB565(
 443:../../MMI/Resource/ABMLoader.c **** 
 444:../../MMI/Resource/ABMLoader.c **** 
 445:../../MMI/Resource/ABMLoader.c **** /*
 446:../../MMI/Resource/ABMLoader.c ****  * ABM bitstream writer
 447:../../MMI/Resource/ABMLoader.c ****  */
 448:../../MMI/Resource/ABMLoader.c **** /* initialize bitstream variables */
 449:../../MMI/Resource/ABMLoader.c **** #define BW_INIT(mem_ptr)                \
 450:../../MMI/Resource/ABMLoader.c ****     {                                   \
 451:../../MMI/Resource/ABMLoader.c ****         U32 bits_buf;                   \
 452:../../MMI/Resource/ABMLoader.c ****         U16 *bits_mem_ptr;              \
 453:../../MMI/Resource/ABMLoader.c ****         U32 bits_left;                  \
 454:../../MMI/Resource/ABMLoader.c ****                                         \
 455:../../MMI/Resource/ABMLoader.c ****         bits_mem_ptr = mem_ptr;         \
 456:../../MMI/Resource/ABMLoader.c ****         bits_buf = 0;                   \
 457:../../MMI/Resource/ABMLoader.c ****         bits_left = 0;
 458:../../MMI/Resource/ABMLoader.c **** 
 459:../../MMI/Resource/ABMLoader.c **** /* flush bitstream buffer */
 460:../../MMI/Resource/ABMLoader.c **** #define BW_END()                        \
 461:../../MMI/Resource/ABMLoader.c ****         if (bits_left > 0)              \
 462:../../MMI/Resource/ABMLoader.c ****         {                               \
 463:../../MMI/Resource/ABMLoader.c ****             *bits_mem_ptr++ = bits_buf; \
 464:../../MMI/Resource/ABMLoader.c ****         }                               \
 465:../../MMI/Resource/ABMLoader.c ****     }
 466:../../MMI/Resource/ABMLoader.c **** 
 467:../../MMI/Resource/ABMLoader.c **** /* write bpp bits of data into the bitstream */
 468:../../MMI/Resource/ABMLoader.c **** #define BW_WRITE(data, bpp)                                     \
 469:../../MMI/Resource/ABMLoader.c ****     bits_buf |= ((data) & ((1 << (bpp)) - 1)) << bits_left;     \
 470:../../MMI/Resource/ABMLoader.c ****     bits_left += bpp;                                           \
 471:../../MMI/Resource/ABMLoader.c ****     if (bits_left >= 16)                                        \
 472:../../MMI/Resource/ABMLoader.c ****     {                                                           \
 473:../../MMI/Resource/ABMLoader.c ****         *bits_mem_ptr++ = bits_buf;                             \
 474:../../MMI/Resource/ABMLoader.c ****         bits_buf >>= 16;                                        \
 475:../../MMI/Resource/ABMLoader.c ****         bits_left -= 16;                                        \
 476:../../MMI/Resource/ABMLoader.c ****     }
 477:../../MMI/Resource/ABMLoader.c **** 
 478:../../MMI/Resource/ABMLoader.c **** 
 479:../../MMI/Resource/ABMLoader.c **** /* PBM header size */
 480:../../MMI/Resource/ABMLoader.c **** #define PBM_HEADER_SIZE                 13
 481:../../MMI/Resource/ABMLoader.c **** 
 482:../../MMI/Resource/ABMLoader.c **** 
 483:../../MMI/Resource/ABMLoader.c **** /*
 484:../../MMI/Resource/ABMLoader.c ****  * windows bitmap
 485:../../MMI/Resource/ABMLoader.c ****  */
 486:../../MMI/Resource/ABMLoader.c **** #define BITMAPFILEHEADER_SIZE           14
 487:../../MMI/Resource/ABMLoader.c **** #define BITMAPINFO_HEADER_SIZE          40
 488:../../MMI/Resource/ABMLoader.c **** 
 489:../../MMI/Resource/ABMLoader.c **** 
 490:../../MMI/Resource/ABMLoader.c **** /*
 491:../../MMI/Resource/ABMLoader.c ****  * ABM encoder
 492:../../MMI/Resource/ABMLoader.c ****  */
 493:../../MMI/Resource/ABMLoader.c **** #define ABM_MAX_COLOR_NUM               384000                   /* ABM supports up to 800*480 colo
 494:../../MMI/Resource/ABMLoader.c **** #define ABM_HEADER_SIZE                 12
 495:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 12


 496:../../MMI/Resource/ABMLoader.c **** #if defined(MAIN_MEDIA_LAYER_BITS_PER_PIXEL) && (MAIN_MEDIA_LAYER_BITS_PER_PIXEL == 24) && defined(
 497:../../MMI/Resource/ABMLoader.c ****     #define ABM_PALETTE_BPP                24
 498:../../MMI/Resource/ABMLoader.c **** #else
 499:../../MMI/Resource/ABMLoader.c ****     #define ABM_PALETTE_BPP                16
 500:../../MMI/Resource/ABMLoader.c **** #endif
 501:../../MMI/Resource/ABMLoader.c **** 
 502:../../MMI/Resource/ABMLoader.c **** 
 503:../../MMI/Resource/ABMLoader.c **** 
 504:../../MMI/Resource/ABMLoader.c **** #define TRANSPARENT_COLOR_24            RGB(10, 11, 12)         /* transparent color of 24-bit bitm
 505:../../MMI/Resource/ABMLoader.c **** #define TRANSPARENT_COLOR_32            ARGB(255, 10, 11, 12)   /* transparent color of 32-bit bitm
 506:../../MMI/Resource/ABMLoader.c **** 
 507:../../MMI/Resource/ABMLoader.c **** 
 508:../../MMI/Resource/ABMLoader.c **** /***************************************************************************** 
 509:../../MMI/Resource/ABMLoader.c ****  * Typedef
 510:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 511:../../MMI/Resource/ABMLoader.c **** typedef U32 mycolor;
 512:../../MMI/Resource/ABMLoader.c **** 
 513:../../MMI/Resource/ABMLoader.c **** /* abm encoder structure*/
 514:../../MMI/Resource/ABMLoader.c **** typedef struct
 515:../../MMI/Resource/ABMLoader.c **** {
 516:../../MMI/Resource/ABMLoader.c ****     S32     bmp_width;                  /* bitmap width */
 517:../../MMI/Resource/ABMLoader.c ****     S32     bmp_height;                 /* bitmap height */
 518:../../MMI/Resource/ABMLoader.c ****     S32     bmp_bpp;                    /* bitmap bits per pixel */
 519:../../MMI/Resource/ABMLoader.c ****     S32     bmp_palette_num;            /* number of colors in the palette */  
 520:../../MMI/Resource/ABMLoader.c ****     mycolor bmp_palette[256];           /* bitmap palette (8-bit bpp max) */    
 521:../../MMI/Resource/ABMLoader.c ****     U8      *bmp_pixel_start_p;         /* pointer to bitmap data */
 522:../../MMI/Resource/ABMLoader.c ****     U32     line_padding_bytes;         /* line padding bytes */
 523:../../MMI/Resource/ABMLoader.c ****     
 524:../../MMI/Resource/ABMLoader.c ****     S32     x1, y1, x2, y2;             /* image bounding box */
 525:../../MMI/Resource/ABMLoader.c **** 
 526:../../MMI/Resource/ABMLoader.c ****     S32     src_key_color_enable;       /* for PBM source key color */
 527:../../MMI/Resource/ABMLoader.c ****     S32     is_windows_bmp;             /* windows BMP 32-bit is always XRGB8888, not expected ARGB
 528:../../MMI/Resource/ABMLoader.c ****     S32     is_fully_opaque;
 529:../../MMI/Resource/ABMLoader.c **** } abm_enc_struct;
 530:../../MMI/Resource/ABMLoader.c **** 
 531:../../MMI/Resource/ABMLoader.c **** /* color index table */
 532:../../MMI/Resource/ABMLoader.c **** typedef struct
 533:../../MMI/Resource/ABMLoader.c **** {
 534:../../MMI/Resource/ABMLoader.c ****     mycolor color_table[ABM_MAX_COLOR_NUM]; /* color index table */
 535:../../MMI/Resource/ABMLoader.c ****     S32     color_num;                      /* number of colors in the table */
 536:../../MMI/Resource/ABMLoader.c ****     
 537:../../MMI/Resource/ABMLoader.c ****     S32     last_search_idx;                /* last search index */
 538:../../MMI/Resource/ABMLoader.c **** } color_index_table_struct;
 539:../../MMI/Resource/ABMLoader.c **** 
 540:../../MMI/Resource/ABMLoader.c **** /* Bit-Stream data structure */
 541:../../MMI/Resource/ABMLoader.c **** typedef struct
 542:../../MMI/Resource/ABMLoader.c **** {
 543:../../MMI/Resource/ABMLoader.c ****     U8 *mem_ptr;
 544:../../MMI/Resource/ABMLoader.c ****     U32 buf;
 545:../../MMI/Resource/ABMLoader.c ****     U32 buf_bits;
 546:../../MMI/Resource/ABMLoader.c **** } ab2_bs_struct;
 547:../../MMI/Resource/ABMLoader.c **** 
 548:../../MMI/Resource/ABMLoader.c **** 
 549:../../MMI/Resource/ABMLoader.c **** /***************************************************************************** 
 550:../../MMI/Resource/ABMLoader.c ****  * Static Declaration
 551:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 552:../../MMI/Resource/ABMLoader.c **** /* file buffer to keep the whole bitmap file */
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 13


 553:../../MMI/Resource/ABMLoader.c **** /* color index table */
 554:../../MMI/Resource/ABMLoader.c **** /* abm encoder context */
 555:../../MMI/Resource/ABMLoader.c **** 
 556:../../MMI/Resource/ABMLoader.c **** /* table to calculate ceiling(log2(x)) */
 557:../../MMI/Resource/ABMLoader.c **** static const U16 log2_table[15] = {2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 1638
 558:../../MMI/Resource/ABMLoader.c **** 
 559:../../MMI/Resource/ABMLoader.c **** typedef struct
 560:../../MMI/Resource/ABMLoader.c **** {
 561:../../MMI/Resource/ABMLoader.c ****     abm_enc_struct abm_enc;
 562:../../MMI/Resource/ABMLoader.c ****     color_index_table_struct color_idx_tab;
 563:../../MMI/Resource/ABMLoader.c ****     U32 abm_palette_bpp;
 564:../../MMI/Resource/ABMLoader.c **** } ABM_Context;
 565:../../MMI/Resource/ABMLoader.c **** 
 566:../../MMI/Resource/ABMLoader.c **** /***************************************************************************** 
 567:../../MMI/Resource/ABMLoader.c ****  * static Function
 568:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 569:../../MMI/Resource/ABMLoader.c **** static S32  search_color(mycolor search_color, ABM_Context * abm_context);
 570:../../MMI/Resource/ABMLoader.c **** static void insert_color_at(mycolor c, S32 insert_idx, ABM_Context * abm_context);
 571:../../MMI/Resource/ABMLoader.c **** static U32 add_color_if_new(mycolor c, ABM_Context * abm_context);
 572:../../MMI/Resource/ABMLoader.c **** static U32  get_normal_color_num(ABM_Context * abm_context);
 573:../../MMI/Resource/ABMLoader.c **** 
 574:../../MMI/Resource/ABMLoader.c **** static U32  get_file_size(FILE *fp);
 575:../../MMI/Resource/ABMLoader.c **** static S32  parse_bitmap(U8* bmp_data_p, U32 input_bmp_file_size, ABM_Context * abm_context);
 576:../../MMI/Resource/ABMLoader.c **** 
 577:../../MMI/Resource/ABMLoader.c **** static void update_image_bounding_box(S32 x, S32 y, ABM_Context * abm_context);
 578:../../MMI/Resource/ABMLoader.c **** static void limit_image_bounding_box(ABM_Context * abm_context);
 579:../../MMI/Resource/ABMLoader.c **** 
 580:../../MMI/Resource/ABMLoader.c **** static U32  log2_ceiling(U32 x);
 581:../../MMI/Resource/ABMLoader.c **** 
 582:../../MMI/Resource/ABMLoader.c **** static U32 abmenc_build_color_index_table(ABM_Context * abm_context);
 583:../../MMI/Resource/ABMLoader.c **** static U32  abmenc_encode(U8* out_mem_p, ABM_Context * abm_context);
 584:../../MMI/Resource/ABMLoader.c **** 
 585:../../MMI/Resource/ABMLoader.c **** /* 
 586:../../MMI/Resource/ABMLoader.c ****  * color reduction algorithms
 587:../../MMI/Resource/ABMLoader.c ****  */
 588:../../MMI/Resource/ABMLoader.c **** static U32 COLOR_REDUCE_24_TO_16(U32 c)
 589:../../MMI/Resource/ABMLoader.c **** {
 661              	LM1:
 662 0126 55       		pushl	%ebp
 663 0127 89E5     		movl	%esp, %ebp
 664 0129 83EC04   		subl	$4, %esp
 590:../../MMI/Resource/ABMLoader.c ****     if(A_OF_ARGB8888(c) == 0xFF || A_OF_ARGB8888(c) == 0x00)
 666              	LM2:
 667 012c 8B4508   		movl	8(%ebp), %eax
 668 012f C1E818   		shrl	$24, %eax
 669 0132 3DFF0000 		cmpl	$255, %eax
 669      00
 670 0137 740A     		je	L33
 671 0139 8B4508   		movl	8(%ebp), %eax
 672 013c C1E818   		shrl	$24, %eax
 673 013f 85C0     		testl	%eax, %eax
 674 0141 750F     		jne	L32
 675              	L33:
 591:../../MMI/Resource/ABMLoader.c ****     {
 592:../../MMI/Resource/ABMLoader.c ****         return c &= 0xFFF8FCF8;
 677              	LM3:
 678 0143 816508F8 		andl	$-459528, 8(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 14


 678      FCF8FF
 679 014a 8B4508   		movl	8(%ebp), %eax
 680 014d 8945FC   		movl	%eax, -4(%ebp)
 681 0150 EB0D     		jmp	L31
 682              	L32:
 593:../../MMI/Resource/ABMLoader.c ****     }
 594:../../MMI/Resource/ABMLoader.c ****     else
 595:../../MMI/Resource/ABMLoader.c ****     {
 596:../../MMI/Resource/ABMLoader.c ****         #if defined(__LOW_COST_SUPPORT_COMMON__) && defined(__COSMOS_MMI_PACKAGE__) && defined(GDI_
 597:../../MMI/Resource/ABMLoader.c ****             return c &= 0xFCF8FCF8;
 598:../../MMI/Resource/ABMLoader.c ****         #else
 599:../../MMI/Resource/ABMLoader.c ****             return c &= 0xFFF8FCF8;
 684              	LM4:
 685 0152 816508F8 		andl	$-459528, 8(%ebp)
 685      FCF8FF
 686 0159 8B4508   		movl	8(%ebp), %eax
 687 015c 8945FC   		movl	%eax, -4(%ebp)
 600:../../MMI/Resource/ABMLoader.c ****         #endif
 601:../../MMI/Resource/ABMLoader.c ****     }
 602:../../MMI/Resource/ABMLoader.c **** }
 689              	LM5:
 690              	L31:
 691 015f 8B45FC   		movl	-4(%ebp), %eax
 692 0162 C9       		leave
 693 0163 C3       		ret
 694              	Lscope0:
 699              	_COLOR_REDUCE_24_TO_18:
 603:../../MMI/Resource/ABMLoader.c **** 
 604:../../MMI/Resource/ABMLoader.c **** static U32 COLOR_REDUCE_24_TO_18(U32 c)
 605:../../MMI/Resource/ABMLoader.c **** {
 701              	LM6:
 702 0164 55       		pushl	%ebp
 703 0165 89E5     		movl	%esp, %ebp
 606:../../MMI/Resource/ABMLoader.c ****     return ((c) & 0xFFFCFCFC);  /* clear R[1:0], G[1:0], B[1:0] */
 705              	LM7:
 706 0167 8B4508   		movl	8(%ebp), %eax
 707 016a 25FCFCFC 		andl	$-197380, %eax
 707      FF
 607:../../MMI/Resource/ABMLoader.c **** }
 709              	LM8:
 710 016f 5D       		popl	%ebp
 711 0170 C3       		ret
 712              	Lscope1:
 718              	_COLOR_REDUCE:
 608:../../MMI/Resource/ABMLoader.c **** 
 609:../../MMI/Resource/ABMLoader.c **** static U32 COLOR_REDUCE(U32 c, ABM_Context * abm_context)
 610:../../MMI/Resource/ABMLoader.c **** {
 720              	LM9:
 721 0171 55       		pushl	%ebp
 722 0172 89E5     		movl	%esp, %ebp
 723 0174 83EC08   		subl	$8, %esp
 611:../../MMI/Resource/ABMLoader.c ****     return ((abm_context->abm_palette_bpp == 16) ? COLOR_REDUCE_24_TO_16(c) : (c));
 725              	LM10:
 726 0177 8B450C   		movl	12(%ebp), %eax
 727 017a 83B83C74 		cmpl	$16, 1537084(%eax)
 727      170010
 728 0181 7510     		jne	L37
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 15


 729 0183 8B4508   		movl	8(%ebp), %eax
 730 0186 890424   		movl	%eax, (%esp)
 731 0189 E898FFFF 		call	_COLOR_REDUCE_24_TO_16
 731      FF
 732 018e 8945FC   		movl	%eax, -4(%ebp)
 733 0191 EB06     		jmp	L38
 734              	L37:
 735 0193 8B4508   		movl	8(%ebp), %eax
 736 0196 8945FC   		movl	%eax, -4(%ebp)
 737              	L38:
 738 0199 8B45FC   		movl	-4(%ebp), %eax
 612:../../MMI/Resource/ABMLoader.c **** }
 740              	LM11:
 741 019c C9       		leave
 742 019d C3       		ret
 743              	Lscope2:
 749              	_search_color:
 613:../../MMI/Resource/ABMLoader.c **** 
 614:../../MMI/Resource/ABMLoader.c **** 
 615:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 616:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 617:../../MMI/Resource/ABMLoader.c ****  *  search_color
 618:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 619:../../MMI/Resource/ABMLoader.c ****  *  search a color in the color table (binary search)
 620:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 621:../../MMI/Resource/ABMLoader.c ****  *  search_color       [IN] color to search
 622:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 623:../../MMI/Resource/ABMLoader.c ****  *  color index in the color table if found, otherwise ABMENC_COLOR_NOT_FOUND (-1)
 624:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 625:../../MMI/Resource/ABMLoader.c **** static S32 search_color(mycolor search_color, ABM_Context * abm_context)
 626:../../MMI/Resource/ABMLoader.c **** {
 751              	LM12:
 752 019e 55       		pushl	%ebp
 753 019f 89E5     		movl	%esp, %ebp
 754 01a1 83EC14   		subl	$20, %esp
 627:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 628:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 629:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 630:../../MMI/Resource/ABMLoader.c ****     S32     start_idx, end_idx, center_idx;
 631:../../MMI/Resource/ABMLoader.c ****     mycolor c;   
 632:../../MMI/Resource/ABMLoader.c **** 
 633:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 634:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 635:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 636:../../MMI/Resource/ABMLoader.c ****     start_idx = 0;
 756              	LM13:
 757              	LBB2:
 758 01a4 C745FC00 		movl	$0, -4(%ebp)
 758      000000
 637:../../MMI/Resource/ABMLoader.c ****     end_idx = abm_context->color_idx_tab.color_num - 1;
 760              	LM14:
 761 01ab 8B450C   		movl	12(%ebp), %eax
 762 01ae 8B803474 		movl	1537076(%eax), %eax
 762      1700
 763 01b4 48       		decl	%eax
 764 01b5 8945F8   		movl	%eax, -8(%ebp)
 638:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 16


 639:../../MMI/Resource/ABMLoader.c ****     while (start_idx <= end_idx) 
 766              	LM15:
 767              	L40:
 768 01b8 8B45FC   		movl	-4(%ebp), %eax
 769 01bb 3B45F8   		cmpl	-8(%ebp), %eax
 770 01be 7E02     		jle	L42
 771 01c0 EB52     		jmp	L41
 772              	L42:
 640:../../MMI/Resource/ABMLoader.c ****     {
 641:../../MMI/Resource/ABMLoader.c ****         center_idx = (start_idx + end_idx) / 2;
 774              	LM16:
 775 01c2 8B45F8   		movl	-8(%ebp), %eax
 776 01c5 8B55FC   		movl	-4(%ebp), %edx
 777 01c8 01C2     		addl	%eax, %edx
 778 01ca 89D0     		movl	%edx, %eax
 779 01cc C1F81F   		sarl	$31, %eax
 780 01cf C1E81F   		shrl	$31, %eax
 781 01d2 8D0410   		leal	(%eax,%edx), %eax
 782 01d5 D1F8     		sarl	%eax
 783 01d7 8945F4   		movl	%eax, -12(%ebp)
 642:../../MMI/Resource/ABMLoader.c ****         c = abm_context->color_idx_tab.color_table[center_idx];
 785              	LM17:
 786 01da 8B550C   		movl	12(%ebp), %edx
 787 01dd 8B45F4   		movl	-12(%ebp), %eax
 788 01e0 8B848234 		movl	1076(%edx,%eax,4), %eax
 788      040000
 789 01e7 8945F0   		movl	%eax, -16(%ebp)
 643:../../MMI/Resource/ABMLoader.c **** 
 644:../../MMI/Resource/ABMLoader.c ****         if (search_color < c)
 791              	LM18:
 792 01ea 8B4508   		movl	8(%ebp), %eax
 793 01ed 3B45F0   		cmpl	-16(%ebp), %eax
 794 01f0 7309     		jae	L43
 645:../../MMI/Resource/ABMLoader.c ****         {
 646:../../MMI/Resource/ABMLoader.c ****             start_idx = center_idx + 1;
 796              	LM19:
 797 01f2 8B45F4   		movl	-12(%ebp), %eax
 798 01f5 40       		incl	%eax
 799 01f6 8945FC   		movl	%eax, -4(%ebp)
 800 01f9 EBBD     		jmp	L40
 801              	L43:
 647:../../MMI/Resource/ABMLoader.c ****         }
 648:../../MMI/Resource/ABMLoader.c ****         else if (search_color > c)
 803              	LM20:
 804 01fb 8B4508   		movl	8(%ebp), %eax
 805 01fe 3B45F0   		cmpl	-16(%ebp), %eax
 806 0201 7609     		jbe	L45
 649:../../MMI/Resource/ABMLoader.c ****         {
 650:../../MMI/Resource/ABMLoader.c ****             end_idx = center_idx - 1;
 808              	LM21:
 809 0203 8B45F4   		movl	-12(%ebp), %eax
 810 0206 48       		decl	%eax
 811 0207 8945F8   		movl	%eax, -8(%ebp)
 812 020a EBAC     		jmp	L40
 813              	L45:
 651:../../MMI/Resource/ABMLoader.c ****         }
 652:../../MMI/Resource/ABMLoader.c ****         else
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 17


 653:../../MMI/Resource/ABMLoader.c ****         {
 654:../../MMI/Resource/ABMLoader.c ****             return center_idx;
 815              	LM22:
 816 020c 8B45F4   		movl	-12(%ebp), %eax
 817 020f 8945EC   		movl	%eax, -20(%ebp)
 818 0212 EB13     		jmp	L39
 819              	L41:
 655:../../MMI/Resource/ABMLoader.c ****         }
 656:../../MMI/Resource/ABMLoader.c ****     } 
 657:../../MMI/Resource/ABMLoader.c **** 
 658:../../MMI/Resource/ABMLoader.c ****     /* keep the search index to speed up the search-and-insert operation, add_color_if_new() */
 659:../../MMI/Resource/ABMLoader.c ****     abm_context->color_idx_tab.last_search_idx = start_idx;
 821              	LM23:
 822 0214 8B550C   		movl	12(%ebp), %edx
 823 0217 8B45FC   		movl	-4(%ebp), %eax
 824 021a 89823874 		movl	%eax, 1537080(%edx)
 824      1700
 660:../../MMI/Resource/ABMLoader.c **** 
 661:../../MMI/Resource/ABMLoader.c ****     return ABMENC_COLOR_NOT_FOUND;
 826              	LM24:
 827 0220 C745ECFF 		movl	$-1, -20(%ebp)
 827      FFFFFF
 662:../../MMI/Resource/ABMLoader.c **** }
 829              	LM25:
 830              	L39:
 831              	LBE2:
 832 0227 8B45EC   		movl	-20(%ebp), %eax
 833 022a C9       		leave
 834 022b C3       		ret
 841              	Lscope3:
 848              	_insert_color_at:
 663:../../MMI/Resource/ABMLoader.c **** 
 664:../../MMI/Resource/ABMLoader.c **** 
 665:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 666:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 667:../../MMI/Resource/ABMLoader.c ****  *  insert_color_at
 668:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 669:../../MMI/Resource/ABMLoader.c ****  *  insert a color at a specified index in the color table
 670:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 671:../../MMI/Resource/ABMLoader.c ****  *  c                [IN] color to add  
 672:../../MMI/Resource/ABMLoader.c ****  *  insert_idx       [IN] insertion index of the table
 673:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 674:../../MMI/Resource/ABMLoader.c ****  *  void
 675:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 676:../../MMI/Resource/ABMLoader.c **** static void insert_color_at(mycolor c, S32 insert_idx, ABM_Context * abm_context)
 677:../../MMI/Resource/ABMLoader.c **** {
 850              	LM26:
 851 022c 55       		pushl	%ebp
 852 022d 89E5     		movl	%esp, %ebp
 853 022f 53       		pushl	%ebx
 854 0230 83EC04   		subl	$4, %esp
 678:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 679:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 680:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 681:../../MMI/Resource/ABMLoader.c ****     S32     i;
 682:../../MMI/Resource/ABMLoader.c **** 
 683:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 18


 684:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 685:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 686:../../MMI/Resource/ABMLoader.c ****     if (insert_idx >= ABM_MAX_COLOR_NUM)
 856              	LM27:
 857              	LBB3:
 858 0233 817D0CFF 		cmpl	$383999, 12(%ebp)
 858      DB0500
 859 023a 7E02     		jle	L48
 687:../../MMI/Resource/ABMLoader.c ****     {
 688:../../MMI/Resource/ABMLoader.c ****         return;
 861              	LM28:
 862 023c EB51     		jmp	L47
 863              	L48:
 689:../../MMI/Resource/ABMLoader.c ****     }    
 690:../../MMI/Resource/ABMLoader.c ****     
 691:../../MMI/Resource/ABMLoader.c ****     /* insert at insert_idx */
 692:../../MMI/Resource/ABMLoader.c ****     for (i = abm_context->color_idx_tab.color_num - 1; i >= insert_idx; i--)
 865              	LM29:
 866 023e 8B4510   		movl	16(%ebp), %eax
 867 0241 8B803474 		movl	1537076(%eax), %eax
 867      1700
 868 0247 48       		decl	%eax
 869 0248 8945F8   		movl	%eax, -8(%ebp)
 870              	L49:
 871 024b 8B45F8   		movl	-8(%ebp), %eax
 872 024e 3B450C   		cmpl	12(%ebp), %eax
 873 0251 7D02     		jge	L52
 874 0253 EB21     		jmp	L50
 875              	L52:
 693:../../MMI/Resource/ABMLoader.c ****     {
 694:../../MMI/Resource/ABMLoader.c ****         abm_context->color_idx_tab.color_table[i + 1] = abm_context->color_idx_tab.color_table[i];
 877              	LM30:
 878 0255 8B5D10   		movl	16(%ebp), %ebx
 879 0258 8B4DF8   		movl	-8(%ebp), %ecx
 880 025b 8B5510   		movl	16(%ebp), %edx
 881 025e 8B45F8   		movl	-8(%ebp), %eax
 882 0261 8B848234 		movl	1076(%edx,%eax,4), %eax
 882      040000
 883 0268 89848B38 		movl	%eax, 1080(%ebx,%ecx,4)
 883      040000
 885              	LM31:
 886 026f 8D45F8   		leal	-8(%ebp), %eax
 887 0272 FF08     		decl	(%eax)
 888 0274 EBD5     		jmp	L49
 889              	L50:
 695:../../MMI/Resource/ABMLoader.c ****     }
 696:../../MMI/Resource/ABMLoader.c **** 
 697:../../MMI/Resource/ABMLoader.c ****     abm_context->color_idx_tab.color_table[insert_idx] = c;
 891              	LM32:
 892 0276 8B4D10   		movl	16(%ebp), %ecx
 893 0279 8B550C   		movl	12(%ebp), %edx
 894 027c 8B4508   		movl	8(%ebp), %eax
 895 027f 89849134 		movl	%eax, 1076(%ecx,%edx,4)
 895      040000
 698:../../MMI/Resource/ABMLoader.c ****     abm_context->color_idx_tab.color_num++;    
 897              	LM33:
 898 0286 8B4510   		movl	16(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 19


 899 0289 FF803474 		incl	1537076(%eax)
 899      1700
 699:../../MMI/Resource/ABMLoader.c **** }
 901              	LM34:
 902              	L47:
 903 028f 83C404   		addl	$4, %esp
 904 0292 5B       		popl	%ebx
 905 0293 5D       		popl	%ebp
 906 0294 C3       		ret
 907              	LBE3:
 911              	Lscope4:
 917              	_add_color_if_new:
 700:../../MMI/Resource/ABMLoader.c **** 
 701:../../MMI/Resource/ABMLoader.c **** 
 702:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 703:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 704:../../MMI/Resource/ABMLoader.c ****  *  add_color_if_new
 705:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 706:../../MMI/Resource/ABMLoader.c ****  *  add a color if the color does not exist in the table
 707:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 708:../../MMI/Resource/ABMLoader.c ****  *  c       [IN] color to add
 709:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 710:../../MMI/Resource/ABMLoader.c ****  *  return ABM_ENC_OK if succeed
 711:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 712:../../MMI/Resource/ABMLoader.c **** static U32 add_color_if_new(mycolor c, ABM_Context * abm_context)
 713:../../MMI/Resource/ABMLoader.c **** {
 919              	LM35:
 920 0295 55       		pushl	%ebp
 921 0296 89E5     		movl	%esp, %ebp
 922 0298 83EC18   		subl	$24, %esp
 714:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 715:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 716:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 717:../../MMI/Resource/ABMLoader.c ****     S32     insert_idx;
 718:../../MMI/Resource/ABMLoader.c **** 
 719:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 720:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 721:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 722:../../MMI/Resource/ABMLoader.c ****     insert_idx = search_color(c, abm_context);
 924              	LM36:
 925              	LBB4:
 926 029b 8B450C   		movl	12(%ebp), %eax
 927 029e 89442404 		movl	%eax, 4(%esp)
 928 02a2 8B4508   		movl	8(%ebp), %eax
 929 02a5 890424   		movl	%eax, (%esp)
 930 02a8 E8F1FEFF 		call	_search_color
 930      FF
 931 02ad 8945FC   		movl	%eax, -4(%ebp)
 723:../../MMI/Resource/ABMLoader.c **** 
 724:../../MMI/Resource/ABMLoader.c ****     if (insert_idx == ABMENC_COLOR_NOT_FOUND)
 933              	LM37:
 934 02b0 837DFCFF 		cmpl	$-1, -4(%ebp)
 935 02b4 750E     		jne	L54
 725:../../MMI/Resource/ABMLoader.c ****     {
 726:../../MMI/Resource/ABMLoader.c ****         insert_idx = abm_context->color_idx_tab.last_search_idx;
 937              	LM38:
 938 02b6 8B450C   		movl	12(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 20


 939 02b9 8B803874 		movl	1537080(%eax), %eax
 939      1700
 940 02bf 8945FC   		movl	%eax, -4(%ebp)
 941 02c2 EB09     		jmp	L55
 942              	L54:
 727:../../MMI/Resource/ABMLoader.c ****     }
 728:../../MMI/Resource/ABMLoader.c ****     else
 729:../../MMI/Resource/ABMLoader.c ****     {   /* found in the table, return */
 730:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_OK;
 944              	LM39:
 945 02c4 C745F803 		movl	$3, -8(%ebp)
 945      000000
 946 02cb EB38     		jmp	L53
 947              	L55:
 731:../../MMI/Resource/ABMLoader.c ****     }
 732:../../MMI/Resource/ABMLoader.c **** 
 733:../../MMI/Resource/ABMLoader.c ****     if (abm_context->color_idx_tab.color_num >= ABM_MAX_COLOR_NUM)
 949              	LM40:
 950 02cd 8B450C   		movl	12(%ebp), %eax
 951 02d0 81B83474 		cmpl	$383999, 1537076(%eax)
 951      1700FFDB 
 951      0500
 952 02da 7E09     		jle	L56
 734:../../MMI/Resource/ABMLoader.c ****     {
 735:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 954              	LM41:
 955 02dc C745F8FE 		movl	$-2, -8(%ebp)
 955      FFFFFF
 956 02e3 EB20     		jmp	L53
 957              	L56:
 736:../../MMI/Resource/ABMLoader.c ****     }
 737:../../MMI/Resource/ABMLoader.c ****     else
 738:../../MMI/Resource/ABMLoader.c ****     {
 739:../../MMI/Resource/ABMLoader.c ****         insert_color_at(c, insert_idx, abm_context);
 959              	LM42:
 960 02e5 8B450C   		movl	12(%ebp), %eax
 961 02e8 89442408 		movl	%eax, 8(%esp)
 962 02ec 8B45FC   		movl	-4(%ebp), %eax
 963 02ef 89442404 		movl	%eax, 4(%esp)
 964 02f3 8B4508   		movl	8(%ebp), %eax
 965 02f6 890424   		movl	%eax, (%esp)
 966 02f9 E82EFFFF 		call	_insert_color_at
 966      FF
 740:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_OK;
 968              	LM43:
 969 02fe C745F803 		movl	$3, -8(%ebp)
 969      000000
 741:../../MMI/Resource/ABMLoader.c ****     }
 742:../../MMI/Resource/ABMLoader.c **** }
 971              	LM44:
 972              	L53:
 973              	LBE4:
 974 0305 8B45F8   		movl	-8(%ebp), %eax
 975 0308 C9       		leave
 976 0309 C3       		ret
 980              	Lscope5:
 985              	_get_normal_color_num:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 21


 743:../../MMI/Resource/ABMLoader.c **** 
 744:../../MMI/Resource/ABMLoader.c **** 
 745:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 746:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 747:../../MMI/Resource/ABMLoader.c ****  *  get_normal_color_num
 748:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 749:../../MMI/Resource/ABMLoader.c ****  *  get the number of NORMAL colors
 750:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 751:../../MMI/Resource/ABMLoader.c ****  *  void
 752:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 753:../../MMI/Resource/ABMLoader.c ****  *  number of OPAQUE colors (alpha = 255) in the color index table
 754:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 755:../../MMI/Resource/ABMLoader.c **** static U32 get_normal_color_num(ABM_Context * abm_context)
 756:../../MMI/Resource/ABMLoader.c **** {
 987              	LM45:
 988 030a 55       		pushl	%ebp
 989 030b 89E5     		movl	%esp, %ebp
 990 030d 83EC04   		subl	$4, %esp
 757:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 758:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 759:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 760:../../MMI/Resource/ABMLoader.c ****     S32     i;
 761:../../MMI/Resource/ABMLoader.c ****     
 762:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 763:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 764:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 765:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < abm_context->color_idx_tab.color_num; i++)
 992              	LM46:
 993              	LBB5:
 994 0310 C745FC00 		movl	$0, -4(%ebp)
 994      000000
 995              	L59:
 996 0317 8B5508   		movl	8(%ebp), %edx
 997 031a 8B45FC   		movl	-4(%ebp), %eax
 998 031d 3B823474 		cmpl	1537076(%edx), %eax
 998      1700
 999 0323 7C02     		jl	L62
 1000 0325 EB20     		jmp	L60
 1001              	L62:
 766:../../MMI/Resource/ABMLoader.c ****     {
 767:../../MMI/Resource/ABMLoader.c ****         if (A_OF_ARGB8888(abm_context->color_idx_tab.color_table[i]) != 255)
 1003              	LM47:
 1004 0327 8B5508   		movl	8(%ebp), %edx
 1005 032a 8B45FC   		movl	-4(%ebp), %eax
 1006 032d 8B848234 		movl	1076(%edx,%eax,4), %eax
 1006      040000
 1007 0334 C1E818   		shrl	$24, %eax
 1008 0337 3DFF0000 		cmpl	$255, %eax
 1008      00
 1009 033c 7402     		je	L61
 768:../../MMI/Resource/ABMLoader.c ****         {
 769:../../MMI/Resource/ABMLoader.c ****             break;
 1011              	LM48:
 1012 033e EB07     		jmp	L60
 1014              	LM49:
 1015              	L61:
 1016 0340 8D45FC   		leal	-4(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 22


 1017 0343 FF00     		incl	(%eax)
 1018 0345 EBD0     		jmp	L59
 1019              	L60:
 770:../../MMI/Resource/ABMLoader.c ****         }
 771:../../MMI/Resource/ABMLoader.c ****     }
 772:../../MMI/Resource/ABMLoader.c **** 
 773:../../MMI/Resource/ABMLoader.c ****     return i;
 1021              	LM50:
 1022 0347 8B45FC   		movl	-4(%ebp), %eax
 774:../../MMI/Resource/ABMLoader.c **** }
 1024              	LM51:
 1025 034a C9       		leave
 1026 034b C3       		ret
 1027              	LBE5:
 1031              	Lscope6:
 1036              	_get_file_size:
 775:../../MMI/Resource/ABMLoader.c **** 
 776:../../MMI/Resource/ABMLoader.c **** 
 777:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 778:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 779:../../MMI/Resource/ABMLoader.c ****  *  get_file_size
 780:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 781:../../MMI/Resource/ABMLoader.c ****  *  return the file size in bytes
 782:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 783:../../MMI/Resource/ABMLoader.c ****  *  fp       [IN]   file pointer
 784:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 785:../../MMI/Resource/ABMLoader.c ****  *  file size in bytes
 786:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 787:../../MMI/Resource/ABMLoader.c **** static U32 get_file_size(FILE *fp)
 788:../../MMI/Resource/ABMLoader.c **** {
 1038              	LM52:
 1039 034c 55       		pushl	%ebp
 1040 034d 89E5     		movl	%esp, %ebp
 1041 034f 83EC18   		subl	$24, %esp
 789:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 790:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 791:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 792:../../MMI/Resource/ABMLoader.c ****     U32     fpos, file_size;
 793:../../MMI/Resource/ABMLoader.c **** 
 794:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 795:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 796:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 797:../../MMI/Resource/ABMLoader.c ****     /* save the current file position */
 798:../../MMI/Resource/ABMLoader.c ****     fpos = ftell(fp);
 1043              	LM53:
 1044              	LBB6:
 1045 0352 8B4508   		movl	8(%ebp), %eax
 1046 0355 890424   		movl	%eax, (%esp)
 1047 0358 E8000000 		call	_ftell
 1047      00
 1048 035d 8945FC   		movl	%eax, -4(%ebp)
 799:../../MMI/Resource/ABMLoader.c **** 
 800:../../MMI/Resource/ABMLoader.c ****     /* seek to the EOF */    
 801:../../MMI/Resource/ABMLoader.c ****     fseek(fp, 0, SEEK_END);
 1050              	LM54:
 1051 0360 C7442408 		movl	$2, 8(%esp)
 1051      02000000 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 23


 1052 0368 C7442404 		movl	$0, 4(%esp)
 1052      00000000 
 1053 0370 8B4508   		movl	8(%ebp), %eax
 1054 0373 890424   		movl	%eax, (%esp)
 1055 0376 E8000000 		call	_fseek
 1055      00
 802:../../MMI/Resource/ABMLoader.c **** 
 803:../../MMI/Resource/ABMLoader.c ****     /* get file size */
 804:../../MMI/Resource/ABMLoader.c ****     file_size = ftell(fp);
 1057              	LM55:
 1058 037b 8B4508   		movl	8(%ebp), %eax
 1059 037e 890424   		movl	%eax, (%esp)
 1060 0381 E8000000 		call	_ftell
 1060      00
 1061 0386 8945F8   		movl	%eax, -8(%ebp)
 805:../../MMI/Resource/ABMLoader.c **** 
 806:../../MMI/Resource/ABMLoader.c ****     /* restore the old file position */
 807:../../MMI/Resource/ABMLoader.c ****     fseek(fp, fpos, SEEK_SET);
 1063              	LM56:
 1064 0389 C7442408 		movl	$0, 8(%esp)
 1064      00000000 
 1065 0391 8B45FC   		movl	-4(%ebp), %eax
 1066 0394 89442404 		movl	%eax, 4(%esp)
 1067 0398 8B4508   		movl	8(%ebp), %eax
 1068 039b 890424   		movl	%eax, (%esp)
 1069 039e E8000000 		call	_fseek
 1069      00
 808:../../MMI/Resource/ABMLoader.c **** 
 809:../../MMI/Resource/ABMLoader.c ****     return file_size;
 1071              	LM57:
 1072 03a3 8B45F8   		movl	-8(%ebp), %eax
 810:../../MMI/Resource/ABMLoader.c **** }
 1074              	LM58:
 1075 03a6 C9       		leave
 1076 03a7 C3       		ret
 1077              	LBE6:
 1082              	Lscope7:
 1089              	_parse_bitmap:
 811:../../MMI/Resource/ABMLoader.c **** 
 812:../../MMI/Resource/ABMLoader.c **** 
 813:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 814:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 815:../../MMI/Resource/ABMLoader.c ****  *  parse_bitmap
 816:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 817:../../MMI/Resource/ABMLoader.c ****  *  parse and verify the bitmap header (BITMAPFILEHEADER and BITMAPINFO)
 818:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 819:../../MMI/Resource/ABMLoader.c ****  *  bitmap_p       [IN]
 820:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 821:../../MMI/Resource/ABMLoader.c ****  *  void
 822:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
 823:../../MMI/Resource/ABMLoader.c **** static S32 parse_bitmap(U8* bmp_data_p, U32 input_bmp_file_size, ABM_Context * abm_context)
 824:../../MMI/Resource/ABMLoader.c **** {
 1091              	LM59:
 1092 03a8 55       		pushl	%ebp
 1093 03a9 89E5     		movl	%esp, %ebp
 1094 03ab 53       		pushl	%ebx
 1095 03ac 83EC28   		subl	$40, %esp
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 24


 825:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 826:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 827:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 828:../../MMI/Resource/ABMLoader.c ****     U32     bmp_w, bmp_h, bmp_bpp;
 829:../../MMI/Resource/ABMLoader.c ****     S32     i;
 830:../../MMI/Resource/ABMLoader.c ****     U32     bi_size;
 831:../../MMI/Resource/ABMLoader.c ****     U32     compression;
 832:../../MMI/Resource/ABMLoader.c ****     U32     line_size;
 833:../../MMI/Resource/ABMLoader.c **** 
 834:../../MMI/Resource/ABMLoader.c ****     U8      *pal_color_p;
 835:../../MMI/Resource/ABMLoader.c **** 
 836:../../MMI/Resource/ABMLoader.c ****     mycolor pal_first_color;
 837:../../MMI/Resource/ABMLoader.c **** 
 838:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 839:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 840:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 841:../../MMI/Resource/ABMLoader.c ****     /* check the "BM" magic number */
 842:../../MMI/Resource/ABMLoader.c ****     if ((bmp_data_p[0] != 'B') || (bmp_data_p[1] != 'M'))
 1097              	LM60:
 1098              	LBB7:
 1099 03af 8B4508   		movl	8(%ebp), %eax
 1100 03b2 803842   		cmpb	$66, (%eax)
 1101 03b5 750B     		jne	L67
 1102 03b7 8B4508   		movl	8(%ebp), %eax
 1103 03ba 40       		incl	%eax
 1104 03bb 80384D   		cmpb	$77, (%eax)
 1105 03be 7502     		jne	L67
 1106 03c0 EB0C     		jmp	L66
 1107              	L67:
 843:../../MMI/Resource/ABMLoader.c ****     {
 844:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1109              	LM61:
 1110 03c2 C745D4FE 		movl	$-2, -44(%ebp)
 1110      FFFFFF
 1111 03c9 E9D20300 		jmp	L65
 1111      00
 1112              	L66:
 845:../../MMI/Resource/ABMLoader.c ****     }
 846:../../MMI/Resource/ABMLoader.c **** 
 847:../../MMI/Resource/ABMLoader.c ****     /* verify the bitmap file size */
 848:../../MMI/Resource/ABMLoader.c ****     if (GET_32(bmp_data_p + 2) != input_bmp_file_size)
 1114              	LM62:
 1115 03ce 8B4508   		movl	8(%ebp), %eax
 1116 03d1 83C002   		addl	$2, %eax
 1117 03d4 0FB610   		movzbl	(%eax), %edx
 1118 03d7 8B4508   		movl	8(%ebp), %eax
 1119 03da 83C003   		addl	$3, %eax
 1120 03dd 0FB600   		movzbl	(%eax), %eax
 1121 03e0 C1E008   		sall	$8, %eax
 1122 03e3 09C2     		orl	%eax, %edx
 1123 03e5 8B4508   		movl	8(%ebp), %eax
 1124 03e8 83C004   		addl	$4, %eax
 1125 03eb 0FB600   		movzbl	(%eax), %eax
 1126 03ee C1E010   		sall	$16, %eax
 1127 03f1 09C2     		orl	%eax, %edx
 1128 03f3 8B4508   		movl	8(%ebp), %eax
 1129 03f6 83C005   		addl	$5, %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 25


 1130 03f9 0FB600   		movzbl	(%eax), %eax
 1131 03fc C1E018   		sall	$24, %eax
 1132 03ff 09D0     		orl	%edx, %eax
 1133 0401 3B450C   		cmpl	12(%ebp), %eax
 1134 0404 740C     		je	L68
 849:../../MMI/Resource/ABMLoader.c ****     {
 850:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1136              	LM63:
 1137 0406 C745D4FE 		movl	$-2, -44(%ebp)
 1137      FFFFFF
 1138 040d E98E0300 		jmp	L65
 1138      00
 1139              	L68:
 851:../../MMI/Resource/ABMLoader.c ****     }
 852:../../MMI/Resource/ABMLoader.c **** 
 853:../../MMI/Resource/ABMLoader.c ****     /* verify the BITMAPINFO HEADER size field */
 854:../../MMI/Resource/ABMLoader.c ****     bi_size = GET_32(bmp_data_p + 14);
 1141              	LM64:
 1142 0412 8B4508   		movl	8(%ebp), %eax
 1143 0415 83C00E   		addl	$14, %eax
 1144 0418 0FB610   		movzbl	(%eax), %edx
 1145 041b 8B4508   		movl	8(%ebp), %eax
 1146 041e 83C00F   		addl	$15, %eax
 1147 0421 0FB600   		movzbl	(%eax), %eax
 1148 0424 C1E008   		sall	$8, %eax
 1149 0427 09C2     		orl	%eax, %edx
 1150 0429 8B4508   		movl	8(%ebp), %eax
 1151 042c 83C010   		addl	$16, %eax
 1152 042f 0FB600   		movzbl	(%eax), %eax
 1153 0432 C1E010   		sall	$16, %eax
 1154 0435 09C2     		orl	%eax, %edx
 1155 0437 8B4508   		movl	8(%ebp), %eax
 1156 043a 83C011   		addl	$17, %eax
 1157 043d 0FB600   		movzbl	(%eax), %eax
 1158 0440 C1E018   		sall	$24, %eax
 1159 0443 09D0     		orl	%edx, %eax
 1160 0445 8945E8   		movl	%eax, -24(%ebp)
 855:../../MMI/Resource/ABMLoader.c ****     if (bi_size < BITMAPINFO_HEADER_SIZE)
 1162              	LM65:
 1163 0448 837DE827 		cmpl	$39, -24(%ebp)
 1164 044c 770C     		ja	L69
 856:../../MMI/Resource/ABMLoader.c ****     {
 857:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1166              	LM66:
 1167 044e C745D4FE 		movl	$-2, -44(%ebp)
 1167      FFFFFF
 1168 0455 E9460300 		jmp	L65
 1168      00
 1169              	L69:
 858:../../MMI/Resource/ABMLoader.c ****     }
 859:../../MMI/Resource/ABMLoader.c **** 
 860:../../MMI/Resource/ABMLoader.c ****     /* get bitmap width, height, and bits per pixel */
 861:../../MMI/Resource/ABMLoader.c ****     bmp_w = GET_32(bmp_data_p + 18);
 1171              	LM67:
 1172 045a 8B4508   		movl	8(%ebp), %eax
 1173 045d 83C012   		addl	$18, %eax
 1174 0460 0FB610   		movzbl	(%eax), %edx
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 26


 1175 0463 8B4508   		movl	8(%ebp), %eax
 1176 0466 83C013   		addl	$19, %eax
 1177 0469 0FB600   		movzbl	(%eax), %eax
 1178 046c C1E008   		sall	$8, %eax
 1179 046f 09C2     		orl	%eax, %edx
 1180 0471 8B4508   		movl	8(%ebp), %eax
 1181 0474 83C014   		addl	$20, %eax
 1182 0477 0FB600   		movzbl	(%eax), %eax
 1183 047a C1E010   		sall	$16, %eax
 1184 047d 09C2     		orl	%eax, %edx
 1185 047f 8B4508   		movl	8(%ebp), %eax
 1186 0482 83C015   		addl	$21, %eax
 1187 0485 0FB600   		movzbl	(%eax), %eax
 1188 0488 C1E018   		sall	$24, %eax
 1189 048b 09D0     		orl	%edx, %eax
 1190 048d 8945F8   		movl	%eax, -8(%ebp)
 862:../../MMI/Resource/ABMLoader.c ****     bmp_h = GET_32(bmp_data_p + 22);
 1192              	LM68:
 1193 0490 8B4508   		movl	8(%ebp), %eax
 1194 0493 83C016   		addl	$22, %eax
 1195 0496 0FB610   		movzbl	(%eax), %edx
 1196 0499 8B4508   		movl	8(%ebp), %eax
 1197 049c 83C017   		addl	$23, %eax
 1198 049f 0FB600   		movzbl	(%eax), %eax
 1199 04a2 C1E008   		sall	$8, %eax
 1200 04a5 09C2     		orl	%eax, %edx
 1201 04a7 8B4508   		movl	8(%ebp), %eax
 1202 04aa 83C018   		addl	$24, %eax
 1203 04ad 0FB600   		movzbl	(%eax), %eax
 1204 04b0 C1E010   		sall	$16, %eax
 1205 04b3 09C2     		orl	%eax, %edx
 1206 04b5 8B4508   		movl	8(%ebp), %eax
 1207 04b8 83C019   		addl	$25, %eax
 1208 04bb 0FB600   		movzbl	(%eax), %eax
 1209 04be C1E018   		sall	$24, %eax
 1210 04c1 09D0     		orl	%edx, %eax
 1211 04c3 8945F4   		movl	%eax, -12(%ebp)
 863:../../MMI/Resource/ABMLoader.c ****     bmp_bpp = GET_16(bmp_data_p + 28);
 1213              	LM69:
 1214 04c6 8B4508   		movl	8(%ebp), %eax
 1215 04c9 83C01C   		addl	$28, %eax
 1216 04cc 0FB610   		movzbl	(%eax), %edx
 1217 04cf 8B4508   		movl	8(%ebp), %eax
 1218 04d2 83C01D   		addl	$29, %eax
 1219 04d5 0FB600   		movzbl	(%eax), %eax
 1220 04d8 C1E008   		sall	$8, %eax
 1221 04db 09D0     		orl	%edx, %eax
 1222 04dd 8945F0   		movl	%eax, -16(%ebp)
 864:../../MMI/Resource/ABMLoader.c **** 
 865:../../MMI/Resource/ABMLoader.c ****     /* only support 8, 24, and 32 bpp */
 866:../../MMI/Resource/ABMLoader.c ****     if ((bmp_bpp != 4) && (bmp_bpp != 8) && (bmp_bpp != 24) && (bmp_bpp != 32))
 1224              	LM70:
 1225 04e0 837DF004 		cmpl	$4, -16(%ebp)
 1226 04e4 741E     		je	L70
 1227 04e6 837DF008 		cmpl	$8, -16(%ebp)
 1228 04ea 7418     		je	L70
 1229 04ec 837DF018 		cmpl	$24, -16(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 27


 1230 04f0 7412     		je	L70
 1231 04f2 837DF020 		cmpl	$32, -16(%ebp)
 1232 04f6 740C     		je	L70
 867:../../MMI/Resource/ABMLoader.c ****     {
 868:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1234              	LM71:
 1235 04f8 C745D4FE 		movl	$-2, -44(%ebp)
 1235      FFFFFF
 1236 04ff E99C0200 		jmp	L65
 1236      00
 1237              	L70:
 869:../../MMI/Resource/ABMLoader.c ****     }
 870:../../MMI/Resource/ABMLoader.c **** 
 871:../../MMI/Resource/ABMLoader.c ****     /* only support bottom-up bitmap */
 872:../../MMI/Resource/ABMLoader.c ****     if (((S32)bmp_h <= 0) || ((S32)bmp_w <= 0))
 1239              	LM72:
 1240 0504 837DF400 		cmpl	$0, -12(%ebp)
 1241 0508 7E08     		jle	L72
 1242 050a 837DF800 		cmpl	$0, -8(%ebp)
 1243 050e 7E02     		jle	L72
 1244 0510 EB0C     		jmp	L71
 1245              	L72:
 873:../../MMI/Resource/ABMLoader.c ****     {
 874:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1247              	LM73:
 1248 0512 C745D4FE 		movl	$-2, -44(%ebp)
 1248      FFFFFF
 1249 0519 E9820200 		jmp	L65
 1249      00
 1250              	L71:
 875:../../MMI/Resource/ABMLoader.c ****     }
 876:../../MMI/Resource/ABMLoader.c **** 
 877:../../MMI/Resource/ABMLoader.c ****     /* limit image dimension to 1024x1024 */
 878:../../MMI/Resource/ABMLoader.c ****     if (((S32)bmp_h > 1024) || ((S32)bmp_w > 2048))
 1252              	LM74:
 1253 051e 817DF400 		cmpl	$1024, -12(%ebp)
 1253      040000
 1254 0525 7F0B     		jg	L74
 1255 0527 817DF800 		cmpl	$2048, -8(%ebp)
 1255      080000
 1256 052e 7F02     		jg	L74
 1257 0530 EB0C     		jmp	L73
 1258              	L74:
 879:../../MMI/Resource/ABMLoader.c ****     {
 880:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1260              	LM75:
 1261 0532 C745D4FE 		movl	$-2, -44(%ebp)
 1261      FFFFFF
 1262 0539 E9620200 		jmp	L65
 1262      00
 1263              	L73:
 881:../../MMI/Resource/ABMLoader.c ****     }
 882:../../MMI/Resource/ABMLoader.c **** 
 883:../../MMI/Resource/ABMLoader.c ****     /* must be uncompressed (BI_RGB = 0 and BI_BITFIELDS = 3) */
 884:../../MMI/Resource/ABMLoader.c ****     compression = GET_32(bmp_data_p + 30);
 1265              	LM76:
 1266 053e 8B4508   		movl	8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 28


 1267 0541 83C01E   		addl	$30, %eax
 1268 0544 0FB610   		movzbl	(%eax), %edx
 1269 0547 8B4508   		movl	8(%ebp), %eax
 1270 054a 83C01F   		addl	$31, %eax
 1271 054d 0FB600   		movzbl	(%eax), %eax
 1272 0550 C1E008   		sall	$8, %eax
 1273 0553 09C2     		orl	%eax, %edx
 1274 0555 8B4508   		movl	8(%ebp), %eax
 1275 0558 83C020   		addl	$32, %eax
 1276 055b 0FB600   		movzbl	(%eax), %eax
 1277 055e C1E010   		sall	$16, %eax
 1278 0561 09C2     		orl	%eax, %edx
 1279 0563 8B4508   		movl	8(%ebp), %eax
 1280 0566 83C021   		addl	$33, %eax
 1281 0569 0FB600   		movzbl	(%eax), %eax
 1282 056c C1E018   		sall	$24, %eax
 1283 056f 09D0     		orl	%edx, %eax
 1284 0571 8945E4   		movl	%eax, -28(%ebp)
 885:../../MMI/Resource/ABMLoader.c ****     if ((compression != 0) && (compression != 3))
 1286              	LM77:
 1287 0574 837DE400 		cmpl	$0, -28(%ebp)
 1288 0578 7412     		je	L75
 1289 057a 837DE403 		cmpl	$3, -28(%ebp)
 1290 057e 740C     		je	L75
 886:../../MMI/Resource/ABMLoader.c ****     {
 887:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1292              	LM78:
 1293 0580 C745D4FE 		movl	$-2, -44(%ebp)
 1293      FFFFFF
 1294 0587 E9140200 		jmp	L65
 1294      00
 1295              	L75:
 888:../../MMI/Resource/ABMLoader.c ****     }
 889:../../MMI/Resource/ABMLoader.c **** 
 890:../../MMI/Resource/ABMLoader.c ****     /* get the palette color num */
 891:../../MMI/Resource/ABMLoader.c ****     if (bmp_bpp <= 8)
 1297              	LM79:
 1298 058c 837DF008 		cmpl	$8, -16(%ebp)
 1299 0590 774E     		ja	L76
 892:../../MMI/Resource/ABMLoader.c ****     {
 893:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.bmp_palette_num = GET_32(bmp_data_p + 46);
 1301              	LM80:
 1302 0592 8B4D10   		movl	16(%ebp), %ecx
 1303 0595 8B4508   		movl	8(%ebp), %eax
 1304 0598 83C02E   		addl	$46, %eax
 1305 059b 0FB610   		movzbl	(%eax), %edx
 1306 059e 8B4508   		movl	8(%ebp), %eax
 1307 05a1 83C02F   		addl	$47, %eax
 1308 05a4 0FB600   		movzbl	(%eax), %eax
 1309 05a7 C1E008   		sall	$8, %eax
 1310 05aa 09C2     		orl	%eax, %edx
 1311 05ac 8B4508   		movl	8(%ebp), %eax
 1312 05af 83C030   		addl	$48, %eax
 1313 05b2 0FB600   		movzbl	(%eax), %eax
 1314 05b5 C1E010   		sall	$16, %eax
 1315 05b8 09C2     		orl	%eax, %edx
 1316 05ba 8B4508   		movl	8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 29


 1317 05bd 83C031   		addl	$49, %eax
 1318 05c0 0FB600   		movzbl	(%eax), %eax
 1319 05c3 C1E018   		sall	$24, %eax
 1320 05c6 09D0     		orl	%edx, %eax
 1321 05c8 89410C   		movl	%eax, 12(%ecx)
 894:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_enc.bmp_palette_num == 0)
 1323              	LM81:
 1324 05cb 8B4510   		movl	16(%ebp), %eax
 1325 05ce 83780C00 		cmpl	$0, 12(%eax)
 1326 05d2 7516     		jne	L78
 895:../../MMI/Resource/ABMLoader.c ****         {
 896:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.bmp_palette_num = 256;
 1328              	LM82:
 1329 05d4 8B4510   		movl	16(%ebp), %eax
 1330 05d7 C7400C00 		movl	$256, 12(%eax)
 1330      010000
 1331 05de EB0A     		jmp	L78
 1332              	L76:
 897:../../MMI/Resource/ABMLoader.c ****         }
 898:../../MMI/Resource/ABMLoader.c ****     }
 899:../../MMI/Resource/ABMLoader.c ****     else
 900:../../MMI/Resource/ABMLoader.c ****     {
 901:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.bmp_palette_num = 0;
 1334              	LM83:
 1335 05e0 8B4510   		movl	16(%ebp), %eax
 1336 05e3 C7400C00 		movl	$0, 12(%eax)
 1336      000000
 1337              	L78:
 902:../../MMI/Resource/ABMLoader.c ****     }
 903:../../MMI/Resource/ABMLoader.c **** 
 904:../../MMI/Resource/ABMLoader.c ****     /* make sure palette color number is 256 maximally */
 905:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.bmp_palette_num > 256)
 1339              	LM84:
 1340 05ea 8B4510   		movl	16(%ebp), %eax
 1341 05ed 81780C00 		cmpl	$256, 12(%eax)
 1341      010000
 1342 05f4 7E0C     		jle	L79
 906:../../MMI/Resource/ABMLoader.c ****     {
 907:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_INPUT_BITMAP_ERROR;
 1344              	LM85:
 1345 05f6 C745D4FE 		movl	$-2, -44(%ebp)
 1345      FFFFFF
 1346 05fd E99E0100 		jmp	L65
 1346      00
 1347              	L79:
 908:../../MMI/Resource/ABMLoader.c ****     }
 909:../../MMI/Resource/ABMLoader.c **** 
 910:../../MMI/Resource/ABMLoader.c ****     /* line size in bytes */
 911:../../MMI/Resource/ABMLoader.c ****     if(bmp_bpp == 4)
 1349              	LM86:
 1350 0602 837DF004 		cmpl	$4, -16(%ebp)
 1351 0606 751C     		jne	L80
 912:../../MMI/Resource/ABMLoader.c ****     {
 913:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.line_padding_bytes = ((bmp_w + 7) / 8 * 8 - bmp_w)/2;
 1353              	LM87:
 1354 0608 8B5510   		movl	16(%ebp), %edx
 1355 060b 8B45F8   		movl	-8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 30


 1356 060e 83C007   		addl	$7, %eax
 1357 0611 C1E803   		shrl	$3, %eax
 1358 0614 C1E003   		sall	$3, %eax
 1359 0617 2B45F8   		subl	-8(%ebp), %eax
 1360 061a D1E8     		shrl	%eax
 1361 061c 89821404 		movl	%eax, 1044(%edx)
 1361      0000
 1362 0622 EB25     		jmp	L81
 1363              	L80:
 914:../../MMI/Resource/ABMLoader.c ****     }
 915:../../MMI/Resource/ABMLoader.c ****     else
 916:../../MMI/Resource/ABMLoader.c ****     {
 917:../../MMI/Resource/ABMLoader.c ****         line_size = bmp_bpp * bmp_w / 8;
 1365              	LM88:
 1366 0624 8B45F0   		movl	-16(%ebp), %eax
 1367 0627 0FAF45F8 		imull	-8(%ebp), %eax
 1368 062b C1E803   		shrl	$3, %eax
 1369 062e 8945E0   		movl	%eax, -32(%ebp)
 918:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.line_padding_bytes = (line_size + 3) / 4 * 4 - line_size;
 1371              	LM89:
 1372 0631 8B5510   		movl	16(%ebp), %edx
 1373 0634 8B45E0   		movl	-32(%ebp), %eax
 1374 0637 83C003   		addl	$3, %eax
 1375 063a C1E802   		shrl	$2, %eax
 1376 063d C1E002   		sall	$2, %eax
 1377 0640 2B45E0   		subl	-32(%ebp), %eax
 1378 0643 89821404 		movl	%eax, 1044(%edx)
 1378      0000
 1379              	L81:
 919:../../MMI/Resource/ABMLoader.c ****     }
 920:../../MMI/Resource/ABMLoader.c ****     
 921:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.bmp_width = bmp_w;
 1381              	LM90:
 1382 0649 8B5510   		movl	16(%ebp), %edx
 1383 064c 8B45F8   		movl	-8(%ebp), %eax
 1384 064f 8902     		movl	%eax, (%edx)
 922:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.bmp_height = bmp_h;
 1386              	LM91:
 1387 0651 8B5510   		movl	16(%ebp), %edx
 1388 0654 8B45F4   		movl	-12(%ebp), %eax
 1389 0657 894204   		movl	%eax, 4(%edx)
 923:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.bmp_bpp = bmp_bpp;
 1391              	LM92:
 1392 065a 8B5510   		movl	16(%ebp), %edx
 1393 065d 8B45F0   		movl	-16(%ebp), %eax
 1394 0660 894208   		movl	%eax, 8(%edx)
 924:../../MMI/Resource/ABMLoader.c **** 
 925:../../MMI/Resource/ABMLoader.c ****     /* get palette */
 926:../../MMI/Resource/ABMLoader.c ****     pal_color_p = bmp_data_p + BITMAPFILEHEADER_SIZE + bi_size;
 1396              	LM93:
 1397 0663 8B45E8   		movl	-24(%ebp), %eax
 1398 0666 034508   		addl	8(%ebp), %eax
 1399 0669 83C00E   		addl	$14, %eax
 1400 066c 8945DC   		movl	%eax, -36(%ebp)
 927:../../MMI/Resource/ABMLoader.c ****     pal_first_color = GET_32(pal_color_p);
 1402              	LM94:
 1403 066f 8B45DC   		movl	-36(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 31


 1404 0672 0FB610   		movzbl	(%eax), %edx
 1405 0675 8B45DC   		movl	-36(%ebp), %eax
 1406 0678 40       		incl	%eax
 1407 0679 0FB600   		movzbl	(%eax), %eax
 1408 067c C1E008   		sall	$8, %eax
 1409 067f 09C2     		orl	%eax, %edx
 1410 0681 8B45DC   		movl	-36(%ebp), %eax
 1411 0684 83C002   		addl	$2, %eax
 1412 0687 0FB600   		movzbl	(%eax), %eax
 1413 068a C1E010   		sall	$16, %eax
 1414 068d 09C2     		orl	%eax, %edx
 1415 068f 8B45DC   		movl	-36(%ebp), %eax
 1416 0692 83C003   		addl	$3, %eax
 1417 0695 0FB600   		movzbl	(%eax), %eax
 1418 0698 C1E018   		sall	$24, %eax
 1419 069b 09D0     		orl	%edx, %eax
 1420 069d 8945D8   		movl	%eax, -40(%ebp)
 928:../../MMI/Resource/ABMLoader.c **** 
 929:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < abm_context->abm_enc.bmp_palette_num; i++)
 1422              	LM95:
 1423 06a0 C745EC00 		movl	$0, -20(%ebp)
 1423      000000
 1424              	L82:
 1425 06a7 8B5510   		movl	16(%ebp), %edx
 1426 06aa 8B45EC   		movl	-20(%ebp), %eax
 1427 06ad 3B420C   		cmpl	12(%edx), %eax
 1428 06b0 7C05     		jl	L85
 1429 06b2 E9A30000 		jmp	L83
 1429      00
 1430              	L85:
 930:../../MMI/Resource/ABMLoader.c ****     {
 931:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.bmp_palette[i] = GET_32(pal_color_p + i * 4);
 1432              	LM96:
 1433 06b7 8B4D10   		movl	16(%ebp), %ecx
 1434 06ba 8B5DEC   		movl	-20(%ebp), %ebx
 1435 06bd 8B45EC   		movl	-20(%ebp), %eax
 1436 06c0 8D148500 		leal	0(,%eax,4), %edx
 1436      000000
 1437 06c7 8B45DC   		movl	-36(%ebp), %eax
 1438 06ca 0FB61410 		movzbl	(%eax,%edx), %edx
 1439 06ce 8B45EC   		movl	-20(%ebp), %eax
 1440 06d1 C1E002   		sall	$2, %eax
 1441 06d4 0345DC   		addl	-36(%ebp), %eax
 1442 06d7 40       		incl	%eax
 1443 06d8 0FB600   		movzbl	(%eax), %eax
 1444 06db C1E008   		sall	$8, %eax
 1445 06de 09C2     		orl	%eax, %edx
 1446 06e0 8B45EC   		movl	-20(%ebp), %eax
 1447 06e3 C1E002   		sall	$2, %eax
 1448 06e6 0345DC   		addl	-36(%ebp), %eax
 1449 06e9 83C002   		addl	$2, %eax
 1450 06ec 0FB600   		movzbl	(%eax), %eax
 1451 06ef C1E010   		sall	$16, %eax
 1452 06f2 09C2     		orl	%eax, %edx
 1453 06f4 8B45EC   		movl	-20(%ebp), %eax
 1454 06f7 C1E002   		sall	$2, %eax
 1455 06fa 0345DC   		addl	-36(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 32


 1456 06fd 83C003   		addl	$3, %eax
 1457 0700 0FB600   		movzbl	(%eax), %eax
 1458 0703 C1E018   		sall	$24, %eax
 1459 0706 09D0     		orl	%edx, %eax
 1460 0708 89449910 		movl	%eax, 16(%ecx,%ebx,4)
 932:../../MMI/Resource/ABMLoader.c **** 
 933:../../MMI/Resource/ABMLoader.c ****         /* A of ARGB quad is reserved as 0, convert it to opacity 255 */
 934:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_enc.src_key_color_enable && (abm_context->abm_enc.bmp_palette[i] == pa
 1462              	LM97:
 1463 070c 8B4510   		movl	16(%ebp), %eax
 1464 070f 83B82804 		cmpl	$0, 1064(%eax)
 1464      000000
 1465 0716 741F     		je	L86
 1466 0718 8B4510   		movl	16(%ebp), %eax
 1467 071b 8B55EC   		movl	-20(%ebp), %edx
 1468 071e 8B449010 		movl	16(%eax,%edx,4), %eax
 1469 0722 3B45D8   		cmpl	-40(%ebp), %eax
 1470 0725 7510     		jne	L86
 935:../../MMI/Resource/ABMLoader.c ****         {   
 936:../../MMI/Resource/ABMLoader.c ****             /* 
 937:../../MMI/Resource/ABMLoader.c ****              * The transparency color is the first color in the palette.
 938:../../MMI/Resource/ABMLoader.c ****              * Any equivalent color is also the transpareny color.
 939:../../MMI/Resource/ABMLoader.c ****              *
 940:../../MMI/Resource/ABMLoader.c ****              * ONLY VALID FOR PBM AND BMP FILES.
 941:../../MMI/Resource/ABMLoader.c ****              */
 942:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.bmp_palette[i] = 0;    /* force alpha value 0 */
 1472              	LM98:
 1473 0727 8B5510   		movl	16(%ebp), %edx
 1474 072a 8B45EC   		movl	-20(%ebp), %eax
 1475 072d C7448210 		movl	$0, 16(%edx,%eax,4)
 1475      00000000 
 1476 0735 EB19     		jmp	L84
 1477              	L86:
 943:../../MMI/Resource/ABMLoader.c ****         }
 944:../../MMI/Resource/ABMLoader.c ****         else
 945:../../MMI/Resource/ABMLoader.c ****         {
 946:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.bmp_palette[i] |= 0xFF000000; /* opaque color, alpha value 255 */
 1479              	LM99:
 1480 0737 8B5D10   		movl	16(%ebp), %ebx
 1481 073a 8B4DEC   		movl	-20(%ebp), %ecx
 1482 073d 8B5510   		movl	16(%ebp), %edx
 1483 0740 8B45EC   		movl	-20(%ebp), %eax
 1484 0743 8B448210 		movl	16(%edx,%eax,4), %eax
 1485 0747 0D000000 		orl	$-16777216, %eax
 1485      FF
 1486 074c 89448B10 		movl	%eax, 16(%ebx,%ecx,4)
 1488              	LM100:
 1489              	L84:
 1490 0750 8D45EC   		leal	-20(%ebp), %eax
 1491 0753 FF00     		incl	(%eax)
 1492 0755 E94DFFFF 		jmp	L82
 1492      FF
 1493              	L83:
 947:../../MMI/Resource/ABMLoader.c ****         }
 948:../../MMI/Resource/ABMLoader.c ****     }
 949:../../MMI/Resource/ABMLoader.c **** 
 950:../../MMI/Resource/ABMLoader.c ****     /* bitmap pixel start offset */
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 33


 951:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.bmp_pixel_start_p = bmp_data_p + GET_32(bmp_data_p + 10);
 1495              	LM101:
 1496 075a 8B4D10   		movl	16(%ebp), %ecx
 1497 075d 8B4508   		movl	8(%ebp), %eax
 1498 0760 83C00A   		addl	$10, %eax
 1499 0763 0FB610   		movzbl	(%eax), %edx
 1500 0766 8B4508   		movl	8(%ebp), %eax
 1501 0769 83C00B   		addl	$11, %eax
 1502 076c 0FB600   		movzbl	(%eax), %eax
 1503 076f C1E008   		sall	$8, %eax
 1504 0772 09C2     		orl	%eax, %edx
 1505 0774 8B4508   		movl	8(%ebp), %eax
 1506 0777 83C00C   		addl	$12, %eax
 1507 077a 0FB600   		movzbl	(%eax), %eax
 1508 077d C1E010   		sall	$16, %eax
 1509 0780 09C2     		orl	%eax, %edx
 1510 0782 8B4508   		movl	8(%ebp), %eax
 1511 0785 83C00D   		addl	$13, %eax
 1512 0788 0FB600   		movzbl	(%eax), %eax
 1513 078b C1E018   		sall	$24, %eax
 1514 078e 09D0     		orl	%edx, %eax
 1515 0790 034508   		addl	8(%ebp), %eax
 1516 0793 89811004 		movl	%eax, 1040(%ecx)
 1516      0000
 952:../../MMI/Resource/ABMLoader.c **** 
 953:../../MMI/Resource/ABMLoader.c ****     return ABM_ENC_OK;
 1518              	LM102:
 1519 0799 C745D403 		movl	$3, -44(%ebp)
 1519      000000
 954:../../MMI/Resource/ABMLoader.c **** }
 1521              	LM103:
 1522              	L65:
 1523              	LBE7:
 1524 07a0 8B45D4   		movl	-44(%ebp), %eax
 1525 07a3 83C428   		addl	$40, %esp
 1526 07a6 5B       		popl	%ebx
 1527 07a7 5D       		popl	%ebp
 1528 07a8 C3       		ret
 1540              	Lscope8:
 1542              	LC21:
 1543 07a9 726200   		.ascii "rb\0"
 1544              	LC22:
 1545 07ac 5B41424D 		.ascii "[ABM enc] open file err: %s\0"
 1545      20656E63 
 1545      5D206F70 
 1545      656E2066 
 1545      696C6520 
 1546              	LC23:
 1547 07c8 41424D4C 		.ascii "ABMLOADER\0"
 1547      4F414445 
 1547      5200
 1548 07d2 8DB42600 		.align 32
 1548      0000008D 
 1548      BC270000 
 1548      0000
 1549              	LC24:
 1550 07e0 5B41424D 		.ascii "[ABM enc] over buffer size: %s\0"
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 34


 1550      20656E63 
 1550      5D206F76 
 1550      65722062 
 1550      75666665 
 1551              	LC25:
 1552 07ff 5B41424D 		.ascii "[ABM enc] read buffer err: %s\0"
 1552      20656E63 
 1552      5D207265 
 1552      61642062 
 1552      75666665 
 1553              	LC26:
 1554 081d 5B41424D 		.ascii "[ABM enc] parse BMP err, %s\0"
 1554      20656E63 
 1554      5D207061 
 1554      72736520 
 1554      424D5020 
 1560              	_load_bmp_file:
 955:../../MMI/Resource/ABMLoader.c **** 
 956:../../MMI/Resource/ABMLoader.c **** 
 957:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
 958:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
 959:../../MMI/Resource/ABMLoader.c ****  *  load_bmp_file
 960:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
 961:../../MMI/Resource/ABMLoader.c ****  *  check the givn bitmap file and read into buffer
 962:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
 963:../../MMI/Resource/ABMLoader.c ****  *  buf             [IN]    pointer to buffer
 964:../../MMI/Resource/ABMLoader.c ****  *  filename        [IN]    the file name to check
 965:../../MMI/Resource/ABMLoader.c ****  * RETURNS
 966:../../MMI/Resource/ABMLoader.c ****  *  return 0 if error. otherwise return the size of the file.
 967:../../MMI/Resource/ABMLoader.c ****   *****************************************************************************/
 968:../../MMI/Resource/ABMLoader.c **** static U32 load_bmp_file(U8 *buf, const U8 *filename, ABM_Context * abm_context)
 969:../../MMI/Resource/ABMLoader.c **** {
 1562              	LM104:
 1563 0839 55       		pushl	%ebp
 1564 083a 89E5     		movl	%esp, %ebp
 1565 083c 83EC28   		subl	$40, %esp
 970:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 971:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
 972:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 973:../../MMI/Resource/ABMLoader.c ****     FILE *fp = NULL;
 1567              	LM105:
 1568              	LBB8:
 1569 083f C745FC00 		movl	$0, -4(%ebp)
 1569      000000
 974:../../MMI/Resource/ABMLoader.c ****     S32 file_size = 0;
 1571              	LM106:
 1572 0846 C745F800 		movl	$0, -8(%ebp)
 1572      000000
 975:../../MMI/Resource/ABMLoader.c **** 
 976:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 977:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
 978:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
 979:../../MMI/Resource/ABMLoader.c **** 
 980:../../MMI/Resource/ABMLoader.c ****     /* open and check the input bitmap file */
 981:../../MMI/Resource/ABMLoader.c ****     fp = fopen(filename, "rb");
 1574              	LM107:
 1575 084d C7442404 		movl	$LC21, 4(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 35


 1575      A9070000 
 1576 0855 8B450C   		movl	12(%ebp), %eax
 1577 0858 890424   		movl	%eax, (%esp)
 1578 085b E8000000 		call	_fopen
 1578      00
 1579 0860 8945FC   		movl	%eax, -4(%ebp)
 982:../../MMI/Resource/ABMLoader.c ****     if (fp == NULL)
 1581              	LM108:
 1582 0863 837DFC00 		cmpl	$0, -4(%ebp)
 1583 0867 752F     		jne	L89
 983:../../MMI/Resource/ABMLoader.c ****     {
 984:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_E("[ABM enc] open file err: %s", filename);
 1585              	LM109:
 1586 0869 8B450C   		movl	12(%ebp), %eax
 1587 086c 8944240C 		movl	%eax, 12(%esp)
 1588 0870 C7442408 		movl	$LC22, 8(%esp)
 1588      AC070000 
 1589 0878 C7442404 		movl	$LC23, 4(%esp)
 1589      C8070000 
 1590 0880 C7042403 		movl	$3, (%esp)
 1590      000000
 1591 0887 E8000000 		call	_reslog_adaptor_log
 1591      00
 985:../../MMI/Resource/ABMLoader.c ****         return 0;
 1593              	LM110:
 1594 088c C745F400 		movl	$0, -12(%ebp)
 1594      000000
 1595 0893 E9140100 		jmp	L88
 1595      00
 1596              	L89:
 986:../../MMI/Resource/ABMLoader.c ****     }
 987:../../MMI/Resource/ABMLoader.c **** 
 988:../../MMI/Resource/ABMLoader.c ****     /* get the file size of the input BMP file */
 989:../../MMI/Resource/ABMLoader.c ****     file_size = get_file_size(fp);
 1598              	LM111:
 1599 0898 8B45FC   		movl	-4(%ebp), %eax
 1600 089b 890424   		movl	%eax, (%esp)
 1601 089e E8A9FAFF 		call	_get_file_size
 1601      FF
 1602 08a3 8945F8   		movl	%eax, -8(%ebp)
 990:../../MMI/Resource/ABMLoader.c **** 
 991:../../MMI/Resource/ABMLoader.c ****     /* make sure the file buffer size is enough */
 992:../../MMI/Resource/ABMLoader.c ****     if (file_size > ABMENC_BMP_FILE_BUFFER_SIZE)
 1604              	LM112:
 1605 08a6 817DF800 		cmpl	$16777216, -8(%ebp)
 1605      000001
 1606 08ad 7E3A     		jle	L90
 993:../../MMI/Resource/ABMLoader.c ****     {
 994:../../MMI/Resource/ABMLoader.c ****         fclose(fp);
 1608              	LM113:
 1609 08af 8B45FC   		movl	-4(%ebp), %eax
 1610 08b2 890424   		movl	%eax, (%esp)
 1611 08b5 E8000000 		call	_fclose
 1611      00
 995:../../MMI/Resource/ABMLoader.c **** 
 996:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_E("[ABM enc] over buffer size: %s", filename);
 1613              	LM114:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 36


 1614 08ba 8B450C   		movl	12(%ebp), %eax
 1615 08bd 8944240C 		movl	%eax, 12(%esp)
 1616 08c1 C7442408 		movl	$LC24, 8(%esp)
 1616      E0070000 
 1617 08c9 C7442404 		movl	$LC23, 4(%esp)
 1617      C8070000 
 1618 08d1 C7042403 		movl	$3, (%esp)
 1618      000000
 1619 08d8 E8000000 		call	_reslog_adaptor_log
 1619      00
 997:../../MMI/Resource/ABMLoader.c ****         return 0;
 1621              	LM115:
 1622 08dd C745F400 		movl	$0, -12(%ebp)
 1622      000000
 1623 08e4 E9C30000 		jmp	L88
 1623      00
 1624              	L90:
 998:../../MMI/Resource/ABMLoader.c ****     }
 999:../../MMI/Resource/ABMLoader.c **** 
1000:../../MMI/Resource/ABMLoader.c ****     /* read the whole file into the memory */
1001:../../MMI/Resource/ABMLoader.c ****     if (fread(buf, file_size, 1, fp) != 1)
 1626              	LM116:
 1627 08e9 8B45FC   		movl	-4(%ebp), %eax
 1628 08ec 8944240C 		movl	%eax, 12(%esp)
 1629 08f0 C7442408 		movl	$1, 8(%esp)
 1629      01000000 
 1630 08f8 8B45F8   		movl	-8(%ebp), %eax
 1631 08fb 89442404 		movl	%eax, 4(%esp)
 1632 08ff 8B4508   		movl	8(%ebp), %eax
 1633 0902 890424   		movl	%eax, (%esp)
 1634 0905 E8000000 		call	_fread
 1634      00
 1635 090a 83F801   		cmpl	$1, %eax
 1636 090d 7437     		je	L91
1002:../../MMI/Resource/ABMLoader.c ****     {
1003:../../MMI/Resource/ABMLoader.c ****         fclose(fp);
 1638              	LM117:
 1639 090f 8B45FC   		movl	-4(%ebp), %eax
 1640 0912 890424   		movl	%eax, (%esp)
 1641 0915 E8000000 		call	_fclose
 1641      00
1004:../../MMI/Resource/ABMLoader.c ****         
1005:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_E("[ABM enc] read buffer err: %s", filename);
 1643              	LM118:
 1644 091a 8B450C   		movl	12(%ebp), %eax
 1645 091d 8944240C 		movl	%eax, 12(%esp)
 1646 0921 C7442408 		movl	$LC25, 8(%esp)
 1646      FF070000 
 1647 0929 C7442404 		movl	$LC23, 4(%esp)
 1647      C8070000 
 1648 0931 C7042403 		movl	$3, (%esp)
 1648      000000
 1649 0938 E8000000 		call	_reslog_adaptor_log
 1649      00
1006:../../MMI/Resource/ABMLoader.c ****         return 0;
 1651              	LM119:
 1652 093d C745F400 		movl	$0, -12(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 37


 1652      000000
 1653 0944 EB66     		jmp	L88
 1654              	L91:
1007:../../MMI/Resource/ABMLoader.c ****     }
1008:../../MMI/Resource/ABMLoader.c **** 
1009:../../MMI/Resource/ABMLoader.c ****     /* parse bitmap header */
1010:../../MMI/Resource/ABMLoader.c ****     if (parse_bitmap(buf, file_size, abm_context) == ABM_ENC_INPUT_BITMAP_ERROR)
 1656              	LM120:
 1657 0946 8B4510   		movl	16(%ebp), %eax
 1658 0949 89442408 		movl	%eax, 8(%esp)
 1659 094d 8B45F8   		movl	-8(%ebp), %eax
 1660 0950 89442404 		movl	%eax, 4(%esp)
 1661 0954 8B4508   		movl	8(%ebp), %eax
 1662 0957 890424   		movl	%eax, (%esp)
 1663 095a E849FAFF 		call	_parse_bitmap
 1663      FF
 1664 095f 83F8FE   		cmpl	$-2, %eax
 1665 0962 7537     		jne	L92
1011:../../MMI/Resource/ABMLoader.c ****     {
1012:../../MMI/Resource/ABMLoader.c ****         fclose(fp);
 1667              	LM121:
 1668 0964 8B45FC   		movl	-4(%ebp), %eax
 1669 0967 890424   		movl	%eax, (%esp)
 1670 096a E8000000 		call	_fclose
 1670      00
1013:../../MMI/Resource/ABMLoader.c **** 
1014:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_E("[ABM enc] parse BMP err, %s", filename);
 1672              	LM122:
 1673 096f 8B450C   		movl	12(%ebp), %eax
 1674 0972 8944240C 		movl	%eax, 12(%esp)
 1675 0976 C7442408 		movl	$LC26, 8(%esp)
 1675      1D080000 
 1676 097e C7442404 		movl	$LC23, 4(%esp)
 1676      C8070000 
 1677 0986 C7042403 		movl	$3, (%esp)
 1677      000000
 1678 098d E8000000 		call	_reslog_adaptor_log
 1678      00
1015:../../MMI/Resource/ABMLoader.c ****         return 0;
 1680              	LM123:
 1681 0992 C745F400 		movl	$0, -12(%ebp)
 1681      000000
 1682 0999 EB11     		jmp	L88
 1683              	L92:
1016:../../MMI/Resource/ABMLoader.c ****     }
1017:../../MMI/Resource/ABMLoader.c **** 
1018:../../MMI/Resource/ABMLoader.c ****     fclose(fp);
 1685              	LM124:
 1686 099b 8B45FC   		movl	-4(%ebp), %eax
 1687 099e 890424   		movl	%eax, (%esp)
 1688 09a1 E8000000 		call	_fclose
 1688      00
1019:../../MMI/Resource/ABMLoader.c ****     
1020:../../MMI/Resource/ABMLoader.c ****     return file_size;
 1690              	LM125:
 1691 09a6 8B45F8   		movl	-8(%ebp), %eax
 1692 09a9 8945F4   		movl	%eax, -12(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 38


1021:../../MMI/Resource/ABMLoader.c **** }
 1694              	LM126:
 1695              	L88:
 1696              	LBE8:
 1697 09ac 8B45F4   		movl	-12(%ebp), %eax
 1698 09af C9       		leave
 1699 09b0 C3       		ret
 1704              	Lscope9:
 1711              	_update_image_bounding_box:
1022:../../MMI/Resource/ABMLoader.c **** 
1023:../../MMI/Resource/ABMLoader.c **** 
1024:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1025:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1026:../../MMI/Resource/ABMLoader.c ****  *  update_image_bounding_box
1027:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1028:../../MMI/Resource/ABMLoader.c ****  *  update image bounding box (piggy-back in the first pass)
1029:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1030:../../MMI/Resource/ABMLoader.c ****  *  x       [IN] x coordinate of non-transparent color
1031:../../MMI/Resource/ABMLoader.c ****  *  y       [IN] y coordinate of non-transparent color
1032:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1033:../../MMI/Resource/ABMLoader.c ****  *  void
1034:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1035:../../MMI/Resource/ABMLoader.c **** static void update_image_bounding_box(S32 x, S32 y, ABM_Context * abm_context)
1036:../../MMI/Resource/ABMLoader.c **** {
 1713              	LM127:
 1714 09b1 55       		pushl	%ebp
 1715 09b2 89E5     		movl	%esp, %ebp
 1716 09b4 83EC10   		subl	$16, %esp
1037:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1038:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1039:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1040:../../MMI/Resource/ABMLoader.c ****     S32 x1, x2, y1, y2;
1041:../../MMI/Resource/ABMLoader.c **** 
1042:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1043:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1044:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1045:../../MMI/Resource/ABMLoader.c ****     x1 = abm_context->abm_enc.x1;
 1718              	LM128:
 1719              	LBB9:
 1720 09b7 8B4510   		movl	16(%ebp), %eax
 1721 09ba 8B801804 		movl	1048(%eax), %eax
 1721      0000
 1722 09c0 8945FC   		movl	%eax, -4(%ebp)
1046:../../MMI/Resource/ABMLoader.c ****     y1 = abm_context->abm_enc.y1;
 1724              	LM129:
 1725 09c3 8B4510   		movl	16(%ebp), %eax
 1726 09c6 8B801C04 		movl	1052(%eax), %eax
 1726      0000
 1727 09cc 8945F4   		movl	%eax, -12(%ebp)
1047:../../MMI/Resource/ABMLoader.c ****     x2 = abm_context->abm_enc.x2;
 1729              	LM130:
 1730 09cf 8B4510   		movl	16(%ebp), %eax
 1731 09d2 8B802004 		movl	1056(%eax), %eax
 1731      0000
 1732 09d8 8945F8   		movl	%eax, -8(%ebp)
1048:../../MMI/Resource/ABMLoader.c ****     y2 = abm_context->abm_enc.y2;
 1734              	LM131:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 39


 1735 09db 8B4510   		movl	16(%ebp), %eax
 1736 09de 8B802404 		movl	1060(%eax), %eax
 1736      0000
 1737 09e4 8945F0   		movl	%eax, -16(%ebp)
1049:../../MMI/Resource/ABMLoader.c **** 
1050:../../MMI/Resource/ABMLoader.c ****     /* x1 = min(x of non-transparent color) */
1051:../../MMI/Resource/ABMLoader.c ****     if (x < x1)
 1739              	LM132:
 1740 09e7 8B4508   		movl	8(%ebp), %eax
 1741 09ea 3B45FC   		cmpl	-4(%ebp), %eax
 1742 09ed 7D06     		jge	L94
1052:../../MMI/Resource/ABMLoader.c ****     {
1053:../../MMI/Resource/ABMLoader.c ****         x1 = x;
 1744              	LM133:
 1745 09ef 8B4508   		movl	8(%ebp), %eax
 1746 09f2 8945FC   		movl	%eax, -4(%ebp)
 1747              	L94:
1054:../../MMI/Resource/ABMLoader.c ****     }
1055:../../MMI/Resource/ABMLoader.c **** 
1056:../../MMI/Resource/ABMLoader.c ****     /* y1 = min(y of non-transparent color) */
1057:../../MMI/Resource/ABMLoader.c ****     if (y < y1)
 1749              	LM134:
 1750 09f5 8B450C   		movl	12(%ebp), %eax
 1751 09f8 3B45F4   		cmpl	-12(%ebp), %eax
 1752 09fb 7D06     		jge	L95
1058:../../MMI/Resource/ABMLoader.c ****     {
1059:../../MMI/Resource/ABMLoader.c ****         y1 = y;
 1754              	LM135:
 1755 09fd 8B450C   		movl	12(%ebp), %eax
 1756 0a00 8945F4   		movl	%eax, -12(%ebp)
 1757              	L95:
1060:../../MMI/Resource/ABMLoader.c ****     }
1061:../../MMI/Resource/ABMLoader.c **** 
1062:../../MMI/Resource/ABMLoader.c ****     /* x2 = max(x of non-transparent color) */
1063:../../MMI/Resource/ABMLoader.c ****     if (x > x2)
 1759              	LM136:
 1760 0a03 8B4508   		movl	8(%ebp), %eax
 1761 0a06 3B45F8   		cmpl	-8(%ebp), %eax
 1762 0a09 7E06     		jle	L96
1064:../../MMI/Resource/ABMLoader.c ****     {
1065:../../MMI/Resource/ABMLoader.c ****         x2 = x;
 1764              	LM137:
 1765 0a0b 8B4508   		movl	8(%ebp), %eax
 1766 0a0e 8945F8   		movl	%eax, -8(%ebp)
 1767              	L96:
1066:../../MMI/Resource/ABMLoader.c ****     }
1067:../../MMI/Resource/ABMLoader.c **** 
1068:../../MMI/Resource/ABMLoader.c ****     /* y2 = max(y of non-transparent color) */
1069:../../MMI/Resource/ABMLoader.c ****     if (y > y2)
 1769              	LM138:
 1770 0a11 8B450C   		movl	12(%ebp), %eax
 1771 0a14 3B45F0   		cmpl	-16(%ebp), %eax
 1772 0a17 7E06     		jle	L97
1070:../../MMI/Resource/ABMLoader.c ****     {
1071:../../MMI/Resource/ABMLoader.c ****         y2 = y;
 1774              	LM139:
 1775 0a19 8B450C   		movl	12(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 40


 1776 0a1c 8945F0   		movl	%eax, -16(%ebp)
 1777              	L97:
1072:../../MMI/Resource/ABMLoader.c ****     }
1073:../../MMI/Resource/ABMLoader.c **** 
1074:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.x1 = x1;
 1779              	LM140:
 1780 0a1f 8B5510   		movl	16(%ebp), %edx
 1781 0a22 8B45FC   		movl	-4(%ebp), %eax
 1782 0a25 89821804 		movl	%eax, 1048(%edx)
 1782      0000
1075:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.y1 = y1;
 1784              	LM141:
 1785 0a2b 8B5510   		movl	16(%ebp), %edx
 1786 0a2e 8B45F4   		movl	-12(%ebp), %eax
 1787 0a31 89821C04 		movl	%eax, 1052(%edx)
 1787      0000
1076:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.x2 = x2;
 1789              	LM142:
 1790 0a37 8B5510   		movl	16(%ebp), %edx
 1791 0a3a 8B45F8   		movl	-8(%ebp), %eax
 1792 0a3d 89822004 		movl	%eax, 1056(%edx)
 1792      0000
1077:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.y2 = y2;
 1794              	LM143:
 1795 0a43 8B5510   		movl	16(%ebp), %edx
 1796 0a46 8B45F0   		movl	-16(%ebp), %eax
 1797 0a49 89822404 		movl	%eax, 1060(%edx)
 1797      0000
1078:../../MMI/Resource/ABMLoader.c **** }
 1799              	LM144:
 1800 0a4f C9       		leave
 1801 0a50 C3       		ret
 1802              	LBE9:
 1809              	Lscope10:
 1814              	_limit_image_bounding_box:
1079:../../MMI/Resource/ABMLoader.c **** 
1080:../../MMI/Resource/ABMLoader.c **** 
1081:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1082:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1083:../../MMI/Resource/ABMLoader.c ****  *  limit_image_bounding_box
1084:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1085:../../MMI/Resource/ABMLoader.c ****  *  limit the x1, y1, x2, and y2 within 8-bit
1086:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1087:../../MMI/Resource/ABMLoader.c ****  *  void
1088:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1089:../../MMI/Resource/ABMLoader.c ****  *  void
1090:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1091:../../MMI/Resource/ABMLoader.c **** static void limit_image_bounding_box(ABM_Context * abm_context)
1092:../../MMI/Resource/ABMLoader.c **** {
 1816              	LM145:
 1817 0a51 55       		pushl	%ebp
 1818 0a52 89E5     		movl	%esp, %ebp
 1819 0a54 83EC10   		subl	$16, %esp
1093:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1094:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1095:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1096:../../MMI/Resource/ABMLoader.c ****     S32     w, h, bottom_right_off_w, bottom_right_off_h;
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 41


1097:../../MMI/Resource/ABMLoader.c **** 
1098:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1099:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1100:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1101:../../MMI/Resource/ABMLoader.c **** 
1102:../../MMI/Resource/ABMLoader.c ****     w = abm_context->abm_enc.bmp_width;
 1821              	LM146:
 1822              	LBB10:
 1823 0a57 8B4508   		movl	8(%ebp), %eax
 1824 0a5a 8B00     		movl	(%eax), %eax
 1825 0a5c 8945FC   		movl	%eax, -4(%ebp)
1103:../../MMI/Resource/ABMLoader.c ****     h = abm_context->abm_enc.bmp_height;
 1827              	LM147:
 1828 0a5f 8B4508   		movl	8(%ebp), %eax
 1829 0a62 8B4004   		movl	4(%eax), %eax
 1830 0a65 8945F8   		movl	%eax, -8(%ebp)
1104:../../MMI/Resource/ABMLoader.c **** 
1105:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.x1 > 255)
 1832              	LM148:
 1833 0a68 8B4508   		movl	8(%ebp), %eax
 1834 0a6b 81B81804 		cmpl	$255, 1048(%eax)
 1834      0000FF00 
 1834      0000
 1835 0a75 7E0D     		jle	L99
1106:../../MMI/Resource/ABMLoader.c ****     {
1107:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.x1 = 255;
 1837              	LM149:
 1838 0a77 8B4508   		movl	8(%ebp), %eax
 1839 0a7a C7801804 		movl	$255, 1048(%eax)
 1839      0000FF00 
 1839      0000
 1840              	L99:
1108:../../MMI/Resource/ABMLoader.c ****     }
1109:../../MMI/Resource/ABMLoader.c **** 
1110:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.y1 > 255)
 1842              	LM150:
 1843 0a84 8B4508   		movl	8(%ebp), %eax
 1844 0a87 81B81C04 		cmpl	$255, 1052(%eax)
 1844      0000FF00 
 1844      0000
 1845 0a91 7E0D     		jle	L100
1111:../../MMI/Resource/ABMLoader.c ****     {
1112:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.y1 = 255;
 1847              	LM151:
 1848 0a93 8B4508   		movl	8(%ebp), %eax
 1849 0a96 C7801C04 		movl	$255, 1052(%eax)
 1849      0000FF00 
 1849      0000
 1850              	L100:
1113:../../MMI/Resource/ABMLoader.c ****     }
1114:../../MMI/Resource/ABMLoader.c **** 
1115:../../MMI/Resource/ABMLoader.c ****     bottom_right_off_w = w - 1 - abm_context->abm_enc.x2;
 1852              	LM152:
 1853 0aa0 8B4508   		movl	8(%ebp), %eax
 1854 0aa3 8B902004 		movl	1056(%eax), %edx
 1854      0000
 1855 0aa9 8B45FC   		movl	-4(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 42


 1856 0aac 29D0     		subl	%edx, %eax
 1857 0aae 48       		decl	%eax
 1858 0aaf 8945F4   		movl	%eax, -12(%ebp)
1116:../../MMI/Resource/ABMLoader.c ****     if (bottom_right_off_w > 255)
 1860              	LM153:
 1861 0ab2 817DF4FF 		cmpl	$255, -12(%ebp)
 1861      000000
 1862 0ab9 7E19     		jle	L101
1117:../../MMI/Resource/ABMLoader.c ****     {
1118:../../MMI/Resource/ABMLoader.c ****         bottom_right_off_w = 255;
 1864              	LM154:
 1865 0abb C745F4FF 		movl	$255, -12(%ebp)
 1865      000000
1119:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.x2 = w - 1 - bottom_right_off_w;
 1867              	LM155:
 1868 0ac2 8B4D08   		movl	8(%ebp), %ecx
 1869 0ac5 8B55F4   		movl	-12(%ebp), %edx
 1870 0ac8 8B45FC   		movl	-4(%ebp), %eax
 1871 0acb 29D0     		subl	%edx, %eax
 1872 0acd 48       		decl	%eax
 1873 0ace 89812004 		movl	%eax, 1056(%ecx)
 1873      0000
 1874              	L101:
1120:../../MMI/Resource/ABMLoader.c ****     }
1121:../../MMI/Resource/ABMLoader.c **** 
1122:../../MMI/Resource/ABMLoader.c ****     bottom_right_off_h = h - 1 - abm_context->abm_enc.y2;
 1876              	LM156:
 1877 0ad4 8B4508   		movl	8(%ebp), %eax
 1878 0ad7 8B902404 		movl	1060(%eax), %edx
 1878      0000
 1879 0add 8B45F8   		movl	-8(%ebp), %eax
 1880 0ae0 29D0     		subl	%edx, %eax
 1881 0ae2 48       		decl	%eax
 1882 0ae3 8945F0   		movl	%eax, -16(%ebp)
1123:../../MMI/Resource/ABMLoader.c ****     if (bottom_right_off_h > 255)
 1884              	LM157:
 1885 0ae6 817DF0FF 		cmpl	$255, -16(%ebp)
 1885      000000
 1886 0aed 7E19     		jle	L98
1124:../../MMI/Resource/ABMLoader.c ****     {
1125:../../MMI/Resource/ABMLoader.c ****         bottom_right_off_h = 255;
 1888              	LM158:
 1889 0aef C745F0FF 		movl	$255, -16(%ebp)
 1889      000000
1126:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.y2 = h - 1 - bottom_right_off_h;
 1891              	LM159:
 1892 0af6 8B4D08   		movl	8(%ebp), %ecx
 1893 0af9 8B55F0   		movl	-16(%ebp), %edx
 1894 0afc 8B45F8   		movl	-8(%ebp), %eax
 1895 0aff 29D0     		subl	%edx, %eax
 1896 0b01 48       		decl	%eax
 1897 0b02 89812404 		movl	%eax, 1060(%ecx)
 1897      0000
1127:../../MMI/Resource/ABMLoader.c ****     }
1128:../../MMI/Resource/ABMLoader.c **** }
 1899              	LM160:
 1900              	L98:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 43


 1901 0b08 C9       		leave
 1902 0b09 C3       		ret
 1903              	LBE10:
 1910              	Lscope11:
 1915              	_abmenc_build_color_index_table:
1129:../../MMI/Resource/ABMLoader.c **** 
1130:../../MMI/Resource/ABMLoader.c **** 
1131:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1132:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1133:../../MMI/Resource/ABMLoader.c ****  *  abmenc_build_color_index_table
1134:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1135:../../MMI/Resource/ABMLoader.c ****  *  build the color index table (first pass)
1136:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1137:../../MMI/Resource/ABMLoader.c ****  *  void
1138:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1139:../../MMI/Resource/ABMLoader.c ****  * return ABM_ENC_OK if succee
1140:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1141:../../MMI/Resource/ABMLoader.c **** static U32 abmenc_build_color_index_table(ABM_Context * abm_context)
1142:../../MMI/Resource/ABMLoader.c **** {
 1917              	LM161:
 1918 0b0a 55       		pushl	%ebp
 1919 0b0b 89E5     		movl	%esp, %ebp
 1920 0b0d 83EC48   		subl	$72, %esp
1143:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1144:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1145:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1146:../../MMI/Resource/ABMLoader.c ****     S32     x, y, w, h;
1147:../../MMI/Resource/ABMLoader.c ****     S32     line_padding_bytes;
1148:../../MMI/Resource/ABMLoader.c ****     U8      *pixel_p, *img_p;
1149:../../MMI/Resource/ABMLoader.c ****     U8      pixel_nibble_index, last_nibble;
1150:../../MMI/Resource/ABMLoader.c ****     U32     bmp_bpp;
1151:../../MMI/Resource/ABMLoader.c ****     mycolor c;
1152:../../MMI/Resource/ABMLoader.c ****     U32 add_color_ret;
1153:../../MMI/Resource/ABMLoader.c **** 
1154:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1155:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1156:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1157:../../MMI/Resource/ABMLoader.c ****     w = abm_context->abm_enc.bmp_width;
 1922              	LM162:
 1923              	LBB11:
 1924 0b10 8B4508   		movl	8(%ebp), %eax
 1925 0b13 8B00     		movl	(%eax), %eax
 1926 0b15 8945F4   		movl	%eax, -12(%ebp)
1158:../../MMI/Resource/ABMLoader.c ****     h = abm_context->abm_enc.bmp_height;
 1928              	LM163:
 1929 0b18 8B4508   		movl	8(%ebp), %eax
 1930 0b1b 8B4004   		movl	4(%eax), %eax
 1931 0b1e 8945F0   		movl	%eax, -16(%ebp)
1159:../../MMI/Resource/ABMLoader.c ****     line_padding_bytes = abm_context->abm_enc.line_padding_bytes;
 1933              	LM164:
 1934 0b21 8B4508   		movl	8(%ebp), %eax
 1935 0b24 8B801404 		movl	1044(%eax), %eax
 1935      0000
 1936 0b2a 8945EC   		movl	%eax, -20(%ebp)
1160:../../MMI/Resource/ABMLoader.c ****     bmp_bpp = abm_context->abm_enc.bmp_bpp;
 1938              	LM165:
 1939 0b2d 8B4508   		movl	8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 44


 1940 0b30 8B4008   		movl	8(%eax), %eax
 1941 0b33 8945DC   		movl	%eax, -36(%ebp)
1161:../../MMI/Resource/ABMLoader.c ****     img_p = abm_context->abm_enc.bmp_pixel_start_p;    
 1943              	LM166:
 1944 0b36 8B4508   		movl	8(%ebp), %eax
 1945 0b39 8B801004 		movl	1040(%eax), %eax
 1945      0000
 1946 0b3f 8945E4   		movl	%eax, -28(%ebp)
1162:../../MMI/Resource/ABMLoader.c **** 
1163:../../MMI/Resource/ABMLoader.c ****     /* initialize image bounding box */
1164:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.x1 = w;
 1948              	LM167:
 1949 0b42 8B5508   		movl	8(%ebp), %edx
 1950 0b45 8B45F4   		movl	-12(%ebp), %eax
 1951 0b48 89821804 		movl	%eax, 1048(%edx)
 1951      0000
1165:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.y1 = h;
 1953              	LM168:
 1954 0b4e 8B5508   		movl	8(%ebp), %edx
 1955 0b51 8B45F0   		movl	-16(%ebp), %eax
 1956 0b54 89821C04 		movl	%eax, 1052(%edx)
 1956      0000
1166:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.x2 = 0;
 1958              	LM169:
 1959 0b5a 8B4508   		movl	8(%ebp), %eax
 1960 0b5d C7802004 		movl	$0, 1056(%eax)
 1960      00000000 
 1960      0000
1167:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.y2 = 0;
 1962              	LM170:
 1963 0b67 8B4508   		movl	8(%ebp), %eax
 1964 0b6a C7802404 		movl	$0, 1060(%eax)
 1964      00000000 
 1964      0000
1168:../../MMI/Resource/ABMLoader.c **** 
1169:../../MMI/Resource/ABMLoader.c ****     /* first pass: build color index table and find the image bounding box */
1170:../../MMI/Resource/ABMLoader.c ****     pixel_p = img_p;
 1966              	LM171:
 1967 0b74 8B45E4   		movl	-28(%ebp), %eax
 1968 0b77 8945E8   		movl	%eax, -24(%ebp)
1171:../../MMI/Resource/ABMLoader.c **** 
1172:../../MMI/Resource/ABMLoader.c ****     /* Pixel nibble index holds the byte position for pixels. 
1173:../../MMI/Resource/ABMLoader.c ****      * last_nibble flag is used to determine which nibble to read for the index. (First or last).
1174:../../MMI/Resource/ABMLoader.c ****      */
1175:../../MMI/Resource/ABMLoader.c ****     pixel_nibble_index = 0;
 1970              	LM172:
 1971 0b7a C645E300 		movb	$0, -29(%ebp)
1176:../../MMI/Resource/ABMLoader.c ****     last_nibble = 0;
 1973              	LM173:
 1974 0b7e C645E200 		movb	$0, -30(%ebp)
1177:../../MMI/Resource/ABMLoader.c **** 
1178:../../MMI/Resource/ABMLoader.c ****     for (y = 0; y < h; y++)
 1976              	LM174:
 1977 0b82 C745F800 		movl	$0, -8(%ebp)
 1977      000000
 1978              	L104:
 1979 0b89 8B45F8   		movl	-8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 45


 1980 0b8c 3B45F0   		cmpl	-16(%ebp), %eax
 1981 0b8f 7C05     		jl	L107
 1982 0b91 E9D70100 		jmp	L105
 1982      00
 1983              	L107:
1179:../../MMI/Resource/ABMLoader.c ****     {
1180:../../MMI/Resource/ABMLoader.c ****         for (x = 0; x < w; x++)
 1985              	LM175:
 1986 0b96 C745FC00 		movl	$0, -4(%ebp)
 1986      000000
 1987              	L108:
 1988 0b9d 8B45FC   		movl	-4(%ebp), %eax
 1989 0ba0 3B45F4   		cmpl	-12(%ebp), %eax
 1990 0ba3 7C05     		jl	L111
 1991 0ba5 E9AD0100 		jmp	L109
 1991      00
 1992              	L111:
1181:../../MMI/Resource/ABMLoader.c ****         {
1182:../../MMI/Resource/ABMLoader.c ****             /* read pixel */
1183:../../MMI/Resource/ABMLoader.c ****             if (bmp_bpp == 32)
 1994              	LM176:
 1995 0baa 837DDC20 		cmpl	$32, -36(%ebp)
 1996 0bae 7575     		jne	L112
1184:../../MMI/Resource/ABMLoader.c ****             {   /* 32-bit bitmap */
1185:../../MMI/Resource/ABMLoader.c ****                 c = GET_32(pixel_p);
 1998              	LM177:
 1999 0bb0 8B45E8   		movl	-24(%ebp), %eax
 2000 0bb3 0FB610   		movzbl	(%eax), %edx
 2001 0bb6 8B45E8   		movl	-24(%ebp), %eax
 2002 0bb9 40       		incl	%eax
 2003 0bba 0FB600   		movzbl	(%eax), %eax
 2004 0bbd C1E008   		sall	$8, %eax
 2005 0bc0 09C2     		orl	%eax, %edx
 2006 0bc2 8B45E8   		movl	-24(%ebp), %eax
 2007 0bc5 83C002   		addl	$2, %eax
 2008 0bc8 0FB600   		movzbl	(%eax), %eax
 2009 0bcb C1E010   		sall	$16, %eax
 2010 0bce 09C2     		orl	%eax, %edx
 2011 0bd0 8B45E8   		movl	-24(%ebp), %eax
 2012 0bd3 83C003   		addl	$3, %eax
 2013 0bd6 0FB600   		movzbl	(%eax), %eax
 2014 0bd9 C1E018   		sall	$24, %eax
 2015 0bdc 09D0     		orl	%edx, %eax
 2016 0bde 8945D8   		movl	%eax, -40(%ebp)
1186:../../MMI/Resource/ABMLoader.c ****                 pixel_p += 4;
 2018              	LM178:
 2019 0be1 8D45E8   		leal	-24(%ebp), %eax
 2020 0be4 830004   		addl	$4, (%eax)
1187:../../MMI/Resource/ABMLoader.c ****                
1188:../../MMI/Resource/ABMLoader.c ****                 /* Windows 32-bit BMP is always 0x00RRGGBB. */                    
1189:../../MMI/Resource/ABMLoader.c ****                 if (abm_context->abm_enc.is_windows_bmp)
 2022              	LM179:
 2023 0be7 8B4508   		movl	8(%ebp), %eax
 2024 0bea 83B82C04 		cmpl	$0, 1068(%eax)
 2024      000000
 2025 0bf1 7409     		je	L113
1190:../../MMI/Resource/ABMLoader.c ****                 {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 46


1191:../../MMI/Resource/ABMLoader.c ****                     c |= 0xFF000000;
 2027              	LM180:
 2028 0bf3 8D45D8   		leal	-40(%ebp), %eax
 2029 0bf6 81080000 		orl	$-16777216, (%eax)
 2029      00FF
 2030              	L113:
1192:../../MMI/Resource/ABMLoader.c ****                 }
1193:../../MMI/Resource/ABMLoader.c **** 
1194:../../MMI/Resource/ABMLoader.c ****                 if (abm_context->abm_enc.src_key_color_enable && (c == TRANSPARENT_COLOR_32))
 2032              	LM181:
 2033 0bfc 8B4508   		movl	8(%ebp), %eax
 2034 0bff 83B82804 		cmpl	$0, 1064(%eax)
 2034      000000
 2035 0c06 0F84C600 		je	L115
 2035      0000
 2036 0c0c 817DD80C 		cmpl	$-16119028, -40(%ebp)
 2036      0B0AFF
 2037 0c13 0F85B900 		jne	L115
 2037      0000
1195:../../MMI/Resource/ABMLoader.c ****                 {   /* transparent color, alpha = 0 */
1196:../../MMI/Resource/ABMLoader.c ****                     c = 0;
 2039              	LM182:
 2040 0c19 C745D800 		movl	$0, -40(%ebp)
 2040      000000
 2041 0c20 E9AD0000 		jmp	L115
 2041      00
 2042              	L112:
1197:../../MMI/Resource/ABMLoader.c ****                 }                
1198:../../MMI/Resource/ABMLoader.c ****             }
1199:../../MMI/Resource/ABMLoader.c ****             else if (bmp_bpp == 24)
 2044              	LM183:
 2045 0c25 837DDC18 		cmpl	$24, -36(%ebp)
 2046 0c29 7552     		jne	L116
1200:../../MMI/Resource/ABMLoader.c ****             {   /* 24-bit bitmap */
1201:../../MMI/Resource/ABMLoader.c ****                 c = GET_24(pixel_p);
 2048              	LM184:
 2049 0c2b 8B45E8   		movl	-24(%ebp), %eax
 2050 0c2e 0FB610   		movzbl	(%eax), %edx
 2051 0c31 8B45E8   		movl	-24(%ebp), %eax
 2052 0c34 40       		incl	%eax
 2053 0c35 0FB600   		movzbl	(%eax), %eax
 2054 0c38 C1E008   		sall	$8, %eax
 2055 0c3b 09C2     		orl	%eax, %edx
 2056 0c3d 8B45E8   		movl	-24(%ebp), %eax
 2057 0c40 83C002   		addl	$2, %eax
 2058 0c43 0FB600   		movzbl	(%eax), %eax
 2059 0c46 C1E010   		sall	$16, %eax
 2060 0c49 09D0     		orl	%edx, %eax
 2061 0c4b 8945D8   		movl	%eax, -40(%ebp)
1202:../../MMI/Resource/ABMLoader.c ****                 pixel_p += 3;
 2063              	LM185:
 2064 0c4e 8D45E8   		leal	-24(%ebp), %eax
 2065 0c51 830003   		addl	$3, (%eax)
1203:../../MMI/Resource/ABMLoader.c **** 
1204:../../MMI/Resource/ABMLoader.c ****                 if (abm_context->abm_enc.src_key_color_enable && (c == TRANSPARENT_COLOR_24))
 2067              	LM186:
 2068 0c54 8B4508   		movl	8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 47


 2069 0c57 83B82804 		cmpl	$0, 1064(%eax)
 2069      000000
 2070 0c5e 7412     		je	L117
 2071 0c60 817DD80C 		cmpl	$658188, -40(%ebp)
 2071      0B0A00
 2072 0c67 7509     		jne	L117
1205:../../MMI/Resource/ABMLoader.c ****                 {   /* transparent color, alpha = 0 */
1206:../../MMI/Resource/ABMLoader.c ****                     c = 0;
 2074              	LM187:
 2075 0c69 C745D800 		movl	$0, -40(%ebp)
 2075      000000
 2076 0c70 EB60     		jmp	L115
 2077              	L117:
1207:../../MMI/Resource/ABMLoader.c ****                 }
1208:../../MMI/Resource/ABMLoader.c ****                 else
1209:../../MMI/Resource/ABMLoader.c ****                 {   /* opaque color, alpha = 255 */                    
1210:../../MMI/Resource/ABMLoader.c ****                     c |= 0xFF000000;
 2079              	LM188:
 2080 0c72 8D45D8   		leal	-40(%ebp), %eax
 2081 0c75 81080000 		orl	$-16777216, (%eax)
 2081      00FF
 2082 0c7b EB55     		jmp	L115
 2083              	L116:
1211:../../MMI/Resource/ABMLoader.c ****                 }
1212:../../MMI/Resource/ABMLoader.c ****             }
1213:../../MMI/Resource/ABMLoader.c ****             else if(bmp_bpp == 4)
 2085              	LM189:
 2086 0c7d 837DDC04 		cmpl	$4, -36(%ebp)
 2087 0c81 753A     		jne	L120
1214:../../MMI/Resource/ABMLoader.c ****             {   /* 4-bit bitmap */
1215:../../MMI/Resource/ABMLoader.c ****                 /* Alternate reading of nibbles, which are the index for the colors */
1216:../../MMI/Resource/ABMLoader.c ****                 if(!last_nibble)
 2089              	LM190:
 2090 0c83 807DE200 		cmpb	$0, -30(%ebp)
 2091 0c87 7514     		jne	L121
1217:../../MMI/Resource/ABMLoader.c ****                 {
1218:../../MMI/Resource/ABMLoader.c ****                     pixel_nibble_index = (U8)*pixel_p;  /* reads the byte for two pixels' indices *
 2093              	LM191:
 2094 0c89 8B45E8   		movl	-24(%ebp), %eax
 2095 0c8c 0FB600   		movzbl	(%eax), %eax
 2096 0c8f 8845E3   		movb	%al, -29(%ebp)
1219:../../MMI/Resource/ABMLoader.c ****                     pixel_p++;          /* Advances the pixel pointer */
 2098              	LM192:
 2099 0c92 8D45E8   		leal	-24(%ebp), %eax
 2100 0c95 FF00     		incl	(%eax)
1220:../../MMI/Resource/ABMLoader.c **** 
1221:../../MMI/Resource/ABMLoader.c ****                     /* Set last nibble flag ON to skip reading the byte again in the next pass. 
1222:../../MMI/Resource/ABMLoader.c ****                       * The index will be read from the last nibble of pixel_nibble_index 
1223:../../MMI/Resource/ABMLoader.c ****                       */
1224:../../MMI/Resource/ABMLoader.c ****                     last_nibble = 1;        
 2102              	LM193:
 2103 0c97 C645E201 		movb	$1, -30(%ebp)
 2104 0c9b EB04     		jmp	L122
 2105              	L121:
1225:../../MMI/Resource/ABMLoader.c ****                 }
1226:../../MMI/Resource/ABMLoader.c ****                 else
1227:../../MMI/Resource/ABMLoader.c ****                 {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 48


1228:../../MMI/Resource/ABMLoader.c ****                     last_nibble = 0;
 2107              	LM194:
 2108 0c9d C645E200 		movb	$0, -30(%ebp)
 2109              	L122:
1229:../../MMI/Resource/ABMLoader.c ****                 }
1230:../../MMI/Resource/ABMLoader.c ****                 /* Read the nibbles, first nibble */
1231:../../MMI/Resource/ABMLoader.c ****                 c = abm_context->abm_enc.bmp_palette[(U8)(pixel_nibble_index >> 4)];
 2111              	LM195:
 2112 0ca1 8B5508   		movl	8(%ebp), %edx
 2113 0ca4 0FB645E3 		movzbl	-29(%ebp), %eax
 2114 0ca8 C0E804   		shrb	$4, %al
 2115 0cab 0FB6C0   		movzbl	%al, %eax
 2116 0cae 8B448210 		movl	16(%edx,%eax,4), %eax
 2117 0cb2 8945D8   		movl	%eax, -40(%ebp)
1232:../../MMI/Resource/ABMLoader.c **** 
1233:../../MMI/Resource/ABMLoader.c ****                 /* Puts the value of last nibble in first nibble */ 
1234:../../MMI/Resource/ABMLoader.c ****                 pixel_nibble_index = pixel_nibble_index  << 4;
 2119              	LM196:
 2120 0cb5 8D45E3   		leal	-29(%ebp), %eax
 2121 0cb8 C02004   		salb	$4, (%eax)
 2122 0cbb EB15     		jmp	L115
 2123              	L120:
1235:../../MMI/Resource/ABMLoader.c ****             }
1236:../../MMI/Resource/ABMLoader.c ****             else
1237:../../MMI/Resource/ABMLoader.c ****             {   /* 8-bit bitmap */
1238:../../MMI/Resource/ABMLoader.c ****                 c = abm_context->abm_enc.bmp_palette[*pixel_p++];                
 2125              	LM197:
 2126 0cbd 8B5508   		movl	8(%ebp), %edx
 2127 0cc0 8B45E8   		movl	-24(%ebp), %eax
 2128 0cc3 0FB600   		movzbl	(%eax), %eax
 2129 0cc6 8B448210 		movl	16(%edx,%eax,4), %eax
 2130 0cca 8945D8   		movl	%eax, -40(%ebp)
 2131 0ccd 8D45E8   		leal	-24(%ebp), %eax
 2132 0cd0 FF00     		incl	(%eax)
 2133              	L115:
1239:../../MMI/Resource/ABMLoader.c ****             }
1240:../../MMI/Resource/ABMLoader.c **** 
1241:../../MMI/Resource/ABMLoader.c ****             /* add color if the color is not transparent color */
1242:../../MMI/Resource/ABMLoader.c ****             if (A_OF_ARGB8888(c) != 0)
 2135              	LM198:
 2136 0cd2 8B45D8   		movl	-40(%ebp), %eax
 2137 0cd5 C1E818   		shrl	$24, %eax
 2138 0cd8 85C0     		testl	%eax, %eax
 2139 0cda 7457     		je	L124
1243:../../MMI/Resource/ABMLoader.c ****             {               
1244:../../MMI/Resource/ABMLoader.c ****                 /* only add unique color */
1245:../../MMI/Resource/ABMLoader.c ****                 add_color_ret = add_color_if_new(COLOR_REDUCE(c,abm_context), abm_context);
 2141              	LM199:
 2142 0cdc 8B4508   		movl	8(%ebp), %eax
 2143 0cdf 89442404 		movl	%eax, 4(%esp)
 2144 0ce3 8B45D8   		movl	-40(%ebp), %eax
 2145 0ce6 890424   		movl	%eax, (%esp)
 2146 0ce9 E883F4FF 		call	_COLOR_REDUCE
 2146      FF
 2147 0cee 89C2     		movl	%eax, %edx
 2148 0cf0 8B4508   		movl	8(%ebp), %eax
 2149 0cf3 89442404 		movl	%eax, 4(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 49


 2150 0cf7 891424   		movl	%edx, (%esp)
 2151 0cfa E896F5FF 		call	_add_color_if_new
 2151      FF
 2152 0cff 8945D4   		movl	%eax, -44(%ebp)
1246:../../MMI/Resource/ABMLoader.c ****                 if (add_color_ret != ABM_ENC_OK)
 2154              	LM200:
 2155 0d02 837DD403 		cmpl	$3, -44(%ebp)
 2156 0d06 740C     		je	L125
1247:../../MMI/Resource/ABMLoader.c ****                 {
1248:../../MMI/Resource/ABMLoader.c ****                     return ABM_ENC_INPUT_BITMAP_ERROR;
 2158              	LM201:
 2159 0d08 C745D0FE 		movl	$-2, -48(%ebp)
 2159      FFFFFF
 2160 0d0f E9D50000 		jmp	L103
 2160      00
 2161              	L125:
1249:../../MMI/Resource/ABMLoader.c ****                 }
1250:../../MMI/Resource/ABMLoader.c **** 
1251:../../MMI/Resource/ABMLoader.c ****                 /* update image bounding box (notice bitmap is flipped, so we have to invert y here
1252:../../MMI/Resource/ABMLoader.c ****                 update_image_bounding_box(x, h - 1 - y, abm_context);
 2163              	LM202:
 2164 0d14 8B4508   		movl	8(%ebp), %eax
 2165 0d17 89442408 		movl	%eax, 8(%esp)
 2166 0d1b 8B55F8   		movl	-8(%ebp), %edx
 2167 0d1e 8B45F0   		movl	-16(%ebp), %eax
 2168 0d21 29D0     		subl	%edx, %eax
 2169 0d23 48       		decl	%eax
 2170 0d24 89442404 		movl	%eax, 4(%esp)
 2171 0d28 8B45FC   		movl	-4(%ebp), %eax
 2172 0d2b 890424   		movl	%eax, (%esp)
 2173 0d2e E87EFCFF 		call	_update_image_bounding_box
 2173      FF
 2174              	L124:
1253:../../MMI/Resource/ABMLoader.c ****             }
1254:../../MMI/Resource/ABMLoader.c **** 
1255:../../MMI/Resource/ABMLoader.c ****             /* containing a transparent color, this image is not fully opaque! */            
1256:../../MMI/Resource/ABMLoader.c ****             if (A_OF_ARGB8888(c) != 255)
 2176              	LM203:
 2177 0d33 8B45D8   		movl	-40(%ebp), %eax
 2178 0d36 C1E818   		shrl	$24, %eax
 2179 0d39 3DFF0000 		cmpl	$255, %eax
 2179      00
 2180 0d3e 740D     		je	L110
1257:../../MMI/Resource/ABMLoader.c ****             {
1258:../../MMI/Resource/ABMLoader.c ****                 abm_context->abm_enc.is_fully_opaque = 0;
 2182              	LM204:
 2183 0d40 8B4508   		movl	8(%ebp), %eax
 2184 0d43 C7803004 		movl	$0, 1072(%eax)
 2184      00000000 
 2184      0000
 2186              	LM205:
 2187              	L110:
 2188 0d4d 8D45FC   		leal	-4(%ebp), %eax
 2189 0d50 FF00     		incl	(%eax)
 2190 0d52 E946FEFF 		jmp	L108
 2190      FF
 2191              	L109:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 50


1259:../../MMI/Resource/ABMLoader.c ****             }
1260:../../MMI/Resource/ABMLoader.c ****         }
1261:../../MMI/Resource/ABMLoader.c ****         /* End of line. Taking care of padding. Will read first nibble for the next line. */
1262:../../MMI/Resource/ABMLoader.c ****         last_nibble = 0;
 2193              	LM206:
 2194 0d57 C645E200 		movb	$0, -30(%ebp)
1263:../../MMI/Resource/ABMLoader.c ****         pixel_p += line_padding_bytes;
 2196              	LM207:
 2197 0d5b 8B45EC   		movl	-20(%ebp), %eax
 2198 0d5e 8D55E8   		leal	-24(%ebp), %edx
 2199 0d61 0102     		addl	%eax, (%edx)
 2201              	LM208:
 2202 0d63 8D45F8   		leal	-8(%ebp), %eax
 2203 0d66 FF00     		incl	(%eax)
 2204 0d68 E91CFEFF 		jmp	L104
 2204      FF
 2205              	L105:
1264:../../MMI/Resource/ABMLoader.c ****     }
1265:../../MMI/Resource/ABMLoader.c **** 
1266:../../MMI/Resource/ABMLoader.c ****     /* handle special case, all transparent color */
1267:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.x2 < abm_context->abm_enc.x1)
 2207              	LM209:
 2208 0d6d 8B4508   		movl	8(%ebp), %eax
 2209 0d70 8B5508   		movl	8(%ebp), %edx
 2210 0d73 8B802004 		movl	1056(%eax), %eax
 2210      0000
 2211 0d79 3B821804 		cmpl	1048(%edx), %eax
 2211      0000
 2212 0d7f 7D56     		jge	L127
1268:../../MMI/Resource/ABMLoader.c ****     {
1269:../../MMI/Resource/ABMLoader.c ****         /* 1 dummy point at the center of image to make best use of the bounding box*/
1270:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.x1 = w / 2;
 2214              	LM210:
 2215 0d81 8B4D08   		movl	8(%ebp), %ecx
 2216 0d84 8B55F4   		movl	-12(%ebp), %edx
 2217 0d87 89D0     		movl	%edx, %eax
 2218 0d89 C1F81F   		sarl	$31, %eax
 2219 0d8c C1E81F   		shrl	$31, %eax
 2220 0d8f 8D0410   		leal	(%eax,%edx), %eax
 2221 0d92 D1F8     		sarl	%eax
 2222 0d94 89811804 		movl	%eax, 1048(%ecx)
 2222      0000
1271:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.y1 = h / 2;
 2224              	LM211:
 2225 0d9a 8B4D08   		movl	8(%ebp), %ecx
 2226 0d9d 8B55F0   		movl	-16(%ebp), %edx
 2227 0da0 89D0     		movl	%edx, %eax
 2228 0da2 C1F81F   		sarl	$31, %eax
 2229 0da5 C1E81F   		shrl	$31, %eax
 2230 0da8 8D0410   		leal	(%eax,%edx), %eax
 2231 0dab D1F8     		sarl	%eax
 2232 0dad 89811C04 		movl	%eax, 1052(%ecx)
 2232      0000
1272:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.x2 = abm_context->abm_enc.x1;
 2234              	LM212:
 2235 0db3 8B5508   		movl	8(%ebp), %edx
 2236 0db6 8B4508   		movl	8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 51


 2237 0db9 8B801804 		movl	1048(%eax), %eax
 2237      0000
 2238 0dbf 89822004 		movl	%eax, 1056(%edx)
 2238      0000
1273:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.y2 = abm_context->abm_enc.y1;
 2240              	LM213:
 2241 0dc5 8B5508   		movl	8(%ebp), %edx
 2242 0dc8 8B4508   		movl	8(%ebp), %eax
 2243 0dcb 8B801C04 		movl	1052(%eax), %eax
 2243      0000
 2244 0dd1 89822404 		movl	%eax, 1060(%edx)
 2244      0000
 2245              	L127:
1274:../../MMI/Resource/ABMLoader.c ****     }    
1275:../../MMI/Resource/ABMLoader.c ****     
1276:../../MMI/Resource/ABMLoader.c ****     limit_image_bounding_box(abm_context);
 2247              	LM214:
 2248 0dd7 8B4508   		movl	8(%ebp), %eax
 2249 0dda 890424   		movl	%eax, (%esp)
 2250 0ddd E86FFCFF 		call	_limit_image_bounding_box
 2250      FF
1277:../../MMI/Resource/ABMLoader.c ****     return ABM_ENC_OK;
 2252              	LM215:
 2253 0de2 C745D003 		movl	$3, -48(%ebp)
 2253      000000
1278:../../MMI/Resource/ABMLoader.c **** }
 2255              	LM216:
 2256              	L103:
 2257              	LBE11:
 2258 0de9 8B45D0   		movl	-48(%ebp), %eax
 2259 0dec C9       		leave
 2260 0ded C3       		ret
 2275              	Lscope12:
 2280              	_log2_ceiling:
1279:../../MMI/Resource/ABMLoader.c **** 
1280:../../MMI/Resource/ABMLoader.c **** 
1281:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1282:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1283:../../MMI/Resource/ABMLoader.c ****  *  log2_ceiling
1284:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1285:../../MMI/Resource/ABMLoader.c ****  *  calculate ceiling(log2(x))
1286:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1287:../../MMI/Resource/ABMLoader.c ****  *  x       [IN]    x must be in the range of [0, 65535]
1288:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1289:../../MMI/Resource/ABMLoader.c ****  *  ceiling(log2(x))
1290:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1291:../../MMI/Resource/ABMLoader.c **** static U32 log2_ceiling(U32 x)
1292:../../MMI/Resource/ABMLoader.c **** {
 2282              	LM217:
 2283 0dee 55       		pushl	%ebp
 2284 0def 89E5     		movl	%esp, %ebp
 2285 0df1 83EC04   		subl	$4, %esp
1293:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1294:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1295:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/   
1296:../../MMI/Resource/ABMLoader.c ****     S32     i;
1297:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 52


1298:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1299:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1300:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1301:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < 15; i++)
 2287              	LM218:
 2288              	LBB12:
 2289 0df4 C745FC00 		movl	$0, -4(%ebp)
 2289      000000
 2290              	L129:
 2291 0dfb 837DFC0E 		cmpl	$14, -4(%ebp)
 2292 0dff 7E02     		jle	L132
 2293 0e01 EB19     		jmp	L130
 2294              	L132:
1302:../../MMI/Resource/ABMLoader.c ****     {
1303:../../MMI/Resource/ABMLoader.c ****         if (x <= log2_table[i])
 2296              	LM219:
 2297 0e03 8B45FC   		movl	-4(%ebp), %eax
 2298 0e06 0FB78400 		movzwl	_log2_table(%eax,%eax), %eax
 2298      08010000 
 2299 0e0e 394508   		cmpl	%eax, 8(%ebp)
 2300 0e11 7702     		ja	L131
1304:../../MMI/Resource/ABMLoader.c ****             break;
 2302              	LM220:
 2303 0e13 EB07     		jmp	L130
 2305              	LM221:
 2306              	L131:
 2307 0e15 8D45FC   		leal	-4(%ebp), %eax
 2308 0e18 FF00     		incl	(%eax)
 2309 0e1a EBDF     		jmp	L129
 2310              	L130:
1305:../../MMI/Resource/ABMLoader.c ****     }
1306:../../MMI/Resource/ABMLoader.c **** 
1307:../../MMI/Resource/ABMLoader.c ****     return i + 1;
 2312              	LM222:
 2313 0e1c 8B45FC   		movl	-4(%ebp), %eax
 2314 0e1f 40       		incl	%eax
1308:../../MMI/Resource/ABMLoader.c **** }
 2316              	LM223:
 2317 0e20 C9       		leave
 2318 0e21 C3       		ret
 2319              	LBE12:
 2323              	Lscope13:
 2328              	_ab2_bs_flush:
1309:../../MMI/Resource/ABMLoader.c **** 
1310:../../MMI/Resource/ABMLoader.c **** 
1311:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1312:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1313:../../MMI/Resource/ABMLoader.c ****  *  ab2_bs_init
1314:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1315:../../MMI/Resource/ABMLoader.c ****  *  Initialize the given bit-stream data structure.
1316:../../MMI/Resource/ABMLoader.c ****  *  The first data will start at given memory pointer.
1317:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1318:../../MMI/Resource/ABMLoader.c ****  *  bs              [INOUT] the bit-stream structure to be initialized
1319:../../MMI/Resource/ABMLoader.c ****  *  mem_ptr         [IN]    the start memory to be a bit-stream
1320:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1321:../../MMI/Resource/ABMLoader.c ****  *  void
1322:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 53


1323:../../MMI/Resource/ABMLoader.c **** static GDI_IMAGE_AB2_INLINE void ab2_bs_init(ab2_bs_struct *bs, U8 *mem_ptr)
1324:../../MMI/Resource/ABMLoader.c **** {
1325:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1326:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1327:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1328:../../MMI/Resource/ABMLoader.c ****     
1329:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1330:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1331:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1332:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(bs != NULL);
1333:../../MMI/Resource/ABMLoader.c **** 
1334:../../MMI/Resource/ABMLoader.c ****     bs->mem_ptr     = mem_ptr;
1335:../../MMI/Resource/ABMLoader.c ****     bs->buf         = 0;
1336:../../MMI/Resource/ABMLoader.c ****     bs->buf_bits    = 0;
1337:../../MMI/Resource/ABMLoader.c **** }
1338:../../MMI/Resource/ABMLoader.c **** 
1339:../../MMI/Resource/ABMLoader.c **** 
1340:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1341:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1342:../../MMI/Resource/ABMLoader.c ****  *  ab2_bs_write
1343:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1344:../../MMI/Resource/ABMLoader.c ****  *  Write given bits data to bit-stream. The data must less or equal 16 bits.
1345:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1346:../../MMI/Resource/ABMLoader.c ****  *  bs              [IN]    the bit-stream
1347:../../MMI/Resource/ABMLoader.c ****  *  data            [IN]    the bit data to write
1348:../../MMI/Resource/ABMLoader.c ****  *  bits            [IN]    the number of bits to write (must <= 16)
1349:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1350:../../MMI/Resource/ABMLoader.c ****  *  void 
1351:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1352:../../MMI/Resource/ABMLoader.c **** static GDI_IMAGE_AB2_INLINE void ab2_bs_write(ab2_bs_struct *bs, U32 data, U32 bits)
1353:../../MMI/Resource/ABMLoader.c **** {
1354:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1355:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1356:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1357:../../MMI/Resource/ABMLoader.c ****     
1358:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1359:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1360:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1361:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(bs != NULL);
1362:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(bits <= 16);
1363:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(data < (1 << bits));
1364:../../MMI/Resource/ABMLoader.c **** 
1365:../../MMI/Resource/ABMLoader.c ****     bs->buf |= (data << bs->buf_bits);
1366:../../MMI/Resource/ABMLoader.c ****     bs->buf_bits += bits;
1367:../../MMI/Resource/ABMLoader.c ****     
1368:../../MMI/Resource/ABMLoader.c ****     /* write out 16 bits data if enough */
1369:../../MMI/Resource/ABMLoader.c ****     if (bs->buf_bits >= 16)
1370:../../MMI/Resource/ABMLoader.c ****     {
1371:../../MMI/Resource/ABMLoader.c ****         *(U16 *)bs->mem_ptr = (U16)bs->buf;
1372:../../MMI/Resource/ABMLoader.c **** 
1373:../../MMI/Resource/ABMLoader.c ****         bs->buf >>= 16;
1374:../../MMI/Resource/ABMLoader.c ****         bs->buf_bits -= 16;
1375:../../MMI/Resource/ABMLoader.c ****         bs->mem_ptr += sizeof(U16);
1376:../../MMI/Resource/ABMLoader.c ****     }
1377:../../MMI/Resource/ABMLoader.c **** }
1378:../../MMI/Resource/ABMLoader.c **** 
1379:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 54


1380:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1381:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1382:../../MMI/Resource/ABMLoader.c ****  *  ab2_bs_flush
1383:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1384:../../MMI/Resource/ABMLoader.c ****  *  Flush all data to bit-stream, it will be align to 2-bytes
1385:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1386:../../MMI/Resource/ABMLoader.c ****  *  bs              [IN]    the bit-stream
1387:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1388:../../MMI/Resource/ABMLoader.c ****  *  void 
1389:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1390:../../MMI/Resource/ABMLoader.c **** static void ab2_bs_flush(ab2_bs_struct *bs)
1391:../../MMI/Resource/ABMLoader.c **** {
 2330              	LM224:
 2331 0e22 55       		pushl	%ebp
 2332 0e23 89E5     		movl	%esp, %ebp
1392:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1393:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1394:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1395:../../MMI/Resource/ABMLoader.c ****     
1396:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1397:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1398:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1399:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(bs != NULL);
1400:../../MMI/Resource/ABMLoader.c **** 
1401:../../MMI/Resource/ABMLoader.c ****     if (bs->buf_bits > 0)
 2334              	LM225:
 2335 0e25 8B4508   		movl	8(%ebp), %eax
 2336 0e28 83780800 		cmpl	$0, 8(%eax)
 2337 0e2c 7430     		je	L137
1402:../../MMI/Resource/ABMLoader.c ****     {
1403:../../MMI/Resource/ABMLoader.c ****         *(U16 *)bs->mem_ptr = (U16)bs->buf;
 2339              	LM226:
 2340 0e2e 8B4508   		movl	8(%ebp), %eax
 2341 0e31 8B10     		movl	(%eax), %edx
 2342 0e33 8B4508   		movl	8(%ebp), %eax
 2343 0e36 0FB74004 		movzwl	4(%eax), %eax
 2344 0e3a 668902   		movw	%ax, (%edx)
1404:../../MMI/Resource/ABMLoader.c **** 
1405:../../MMI/Resource/ABMLoader.c ****         bs->buf = 0;
 2346              	LM227:
 2347 0e3d 8B4508   		movl	8(%ebp), %eax
 2348 0e40 C7400400 		movl	$0, 4(%eax)
 2348      000000
1406:../../MMI/Resource/ABMLoader.c ****         bs->buf_bits = 0;
 2350              	LM228:
 2351 0e47 8B4508   		movl	8(%ebp), %eax
 2352 0e4a C7400800 		movl	$0, 8(%eax)
 2352      000000
1407:../../MMI/Resource/ABMLoader.c ****         bs->mem_ptr += sizeof(U16);
 2354              	LM229:
 2355 0e51 8B5508   		movl	8(%ebp), %edx
 2356 0e54 8B4508   		movl	8(%ebp), %eax
 2357 0e57 8B00     		movl	(%eax), %eax
 2358 0e59 83C002   		addl	$2, %eax
 2359 0e5c 8902     		movl	%eax, (%edx)
1408:../../MMI/Resource/ABMLoader.c ****     }
1409:../../MMI/Resource/ABMLoader.c **** }
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 55


 2361              	LM230:
 2362              	L137:
 2363 0e5e 5D       		popl	%ebp
 2364 0e5f C3       		ret
 2365              	Lscope14:
 2371              	_ab2enc_color_preprocess:
1410:../../MMI/Resource/ABMLoader.c **** 
1411:../../MMI/Resource/ABMLoader.c **** 
1412:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1413:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1414:../../MMI/Resource/ABMLoader.c ****  *  ab2_bs_offset
1415:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1416:../../MMI/Resource/ABMLoader.c ****  *  Caculate the offset according by given base memory location
1417:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1418:../../MMI/Resource/ABMLoader.c ****  *  bs              [IN]    the bit-stream
1419:../../MMI/Resource/ABMLoader.c ****  *  base_ptr        [IN]    the base memory location
1420:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1421:../../MMI/Resource/ABMLoader.c ****  *  The number of offset
1422:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1423:../../MMI/Resource/ABMLoader.c **** static GDI_IMAGE_AB2_INLINE U32 ab2_bs_offset(ab2_bs_struct *bs, const U8 *base_ptr)
1424:../../MMI/Resource/ABMLoader.c **** {
1425:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1426:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1427:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1428:../../MMI/Resource/ABMLoader.c ****     
1429:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1430:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1431:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1432:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(bs != NULL);
1433:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(bs->buf_bits == 0);
1434:../../MMI/Resource/ABMLoader.c **** 
1435:../../MMI/Resource/ABMLoader.c ****     return bs->mem_ptr - base_ptr;
1436:../../MMI/Resource/ABMLoader.c **** }
1437:../../MMI/Resource/ABMLoader.c **** 
1438:../../MMI/Resource/ABMLoader.c **** 
1439:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1440:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1441:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_color_preprocess
1442:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1443:../../MMI/Resource/ABMLoader.c ****  *  Preprocess the color to save to color table:
1444:../../MMI/Resource/ABMLoader.c ****  *  - Prevent blue channel from saturation to get rid of source key 
1445:../../MMI/Resource/ABMLoader.c ****  *    checking in the decoder
1446:../../MMI/Resource/ABMLoader.c ****  *  - Pre-multiply alpha color
1447:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1448:../../MMI/Resource/ABMLoader.c ****  *  color          [IN]     the color to preprocess
1449:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1450:../../MMI/Resource/ABMLoader.c ****  *  The color has been processed
1451:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1452:../../MMI/Resource/ABMLoader.c **** static mycolor ab2enc_color_preprocess(mycolor color, ABM_Context * abm_context)
1453:../../MMI/Resource/ABMLoader.c **** {
 2373              	LM231:
 2374 0e60 55       		pushl	%ebp
 2375 0e61 89E5     		movl	%esp, %ebp
 2376 0e63 83EC14   		subl	$20, %esp
1454:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1455:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1456:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 56


1457:../../MMI/Resource/ABMLoader.c ****     mycolor a, r, g, b;
1458:../../MMI/Resource/ABMLoader.c ****     
1459:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1460:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1461:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1462:../../MMI/Resource/ABMLoader.c ****     /* 
1463:../../MMI/Resource/ABMLoader.c ****      * prevent blue channel 
1464:../../MMI/Resource/ABMLoader.c ****      */
1465:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_palette_bpp == 16)
 2378              	LM232:
 2379              	LBB13:
 2380 0e66 8B450C   		movl	12(%ebp), %eax
 2381 0e69 83B83C74 		cmpl	$16, 1537084(%eax)
 2381      170010
 2382 0e70 753F     		jne	L141
1466:../../MMI/Resource/ABMLoader.c ****     {
1467:../../MMI/Resource/ABMLoader.c ****         mycolor color16 = ARGB8888_TO_RGB16(color);
 2384              	LM233:
 2385              	LBB14:
 2386 0e72 8B4508   		movl	8(%ebp), %eax
 2387 0e75 C1E008   		sall	$8, %eax
 2388 0e78 C1E818   		shrl	$24, %eax
 2389 0e7b C1E803   		shrl	$3, %eax
 2390 0e7e 89C2     		movl	%eax, %edx
 2391 0e80 C1E20B   		sall	$11, %edx
 2392 0e83 8B4508   		movl	8(%ebp), %eax
 2393 0e86 C1E010   		sall	$16, %eax
 2394 0e89 C1E818   		shrl	$24, %eax
 2395 0e8c C1E802   		shrl	$2, %eax
 2396 0e8f C1E005   		sall	$5, %eax
 2397 0e92 09C2     		orl	%eax, %edx
 2398 0e94 8B4508   		movl	8(%ebp), %eax
 2399 0e97 C1E018   		sall	$24, %eax
 2400 0e9a C1E818   		shrl	$24, %eax
 2401 0e9d C1E803   		shrl	$3, %eax
 2402 0ea0 09D0     		orl	%edx, %eax
 2403 0ea2 8945EC   		movl	%eax, -20(%ebp)
1468:../../MMI/Resource/ABMLoader.c ****         if ((color16) == 0x1F)
 2405              	LM234:
 2406 0ea5 837DEC1F 		cmpl	$31, -20(%ebp)
 2407 0ea9 7519     		jne	L143
1469:../../MMI/Resource/ABMLoader.c ****         {
1470:../../MMI/Resource/ABMLoader.c ****             /* 5-bit B: 0x1F -> 0x1E */
1471:../../MMI/Resource/ABMLoader.c ****             color -= 1 << 3;
 2409              	LM235:
 2410 0eab 836D0808 		subl	$8, 8(%ebp)
 2411              	LBE14:
 2412 0eaf EB13     		jmp	L143
 2413              	L141:
1472:../../MMI/Resource/ABMLoader.c ****         }
1473:../../MMI/Resource/ABMLoader.c ****     }
1474:../../MMI/Resource/ABMLoader.c ****     else
1475:../../MMI/Resource/ABMLoader.c ****     {
1476:../../MMI/Resource/ABMLoader.c ****         /* 24-bit and 32-bit ABM both use 24-bit palette */
1477:../../MMI/Resource/ABMLoader.c ****         if (B_OF_ARGB8888(color) == 0xFF)
 2415              	LM236:
 2416 0eb1 8B4508   		movl	8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 57


 2417 0eb4 C1E018   		sall	$24, %eax
 2418 0eb7 C1E818   		shrl	$24, %eax
 2419 0eba 3DFF0000 		cmpl	$255, %eax
 2419      00
 2420 0ebf 7503     		jne	L143
1478:../../MMI/Resource/ABMLoader.c ****         {
1479:../../MMI/Resource/ABMLoader.c ****             /* 8-bit B: 0xFF -> 0xFE */
1480:../../MMI/Resource/ABMLoader.c ****             color -= 1;
 2422              	LM237:
 2423 0ec1 FF4D08   		decl	8(%ebp)
 2424              	L143:
1481:../../MMI/Resource/ABMLoader.c ****         }
1482:../../MMI/Resource/ABMLoader.c ****     }
1483:../../MMI/Resource/ABMLoader.c **** 
1484:../../MMI/Resource/ABMLoader.c ****     /* 
1485:../../MMI/Resource/ABMLoader.c ****      * pre-multiply alpha color 
1486:../../MMI/Resource/ABMLoader.c ****      */
1487:../../MMI/Resource/ABMLoader.c ****     a = A_OF_ARGB8888(color);
 2426              	LM238:
 2427 0ec4 8B4508   		movl	8(%ebp), %eax
 2428 0ec7 C1E818   		shrl	$24, %eax
 2429 0eca 8945FC   		movl	%eax, -4(%ebp)
1488:../../MMI/Resource/ABMLoader.c ****     r = R_OF_ARGB8888(color);
 2431              	LM239:
 2432 0ecd 8B4508   		movl	8(%ebp), %eax
 2433 0ed0 C1E008   		sall	$8, %eax
 2434 0ed3 C1E818   		shrl	$24, %eax
 2435 0ed6 8945F8   		movl	%eax, -8(%ebp)
1489:../../MMI/Resource/ABMLoader.c ****     g = G_OF_ARGB8888(color);
 2437              	LM240:
 2438 0ed9 8B4508   		movl	8(%ebp), %eax
 2439 0edc C1E010   		sall	$16, %eax
 2440 0edf C1E818   		shrl	$24, %eax
 2441 0ee2 8945F4   		movl	%eax, -12(%ebp)
1490:../../MMI/Resource/ABMLoader.c ****     b = B_OF_ARGB8888(color);
 2443              	LM241:
 2444 0ee5 8B4508   		movl	8(%ebp), %eax
 2445 0ee8 C1E018   		sall	$24, %eax
 2446 0eeb C1E818   		shrl	$24, %eax
 2447 0eee 8945F0   		movl	%eax, -16(%ebp)
1491:../../MMI/Resource/ABMLoader.c **** 
1492:../../MMI/Resource/ABMLoader.c ****     r = GDI_IMAGE_AB2_DIV_255(r * a);
 2449              	LM242:
 2450 0ef1 8B45F8   		movl	-8(%ebp), %eax
 2451 0ef4 89C2     		movl	%eax, %edx
 2452 0ef6 0FAF55FC 		imull	-4(%ebp), %edx
 2453 0efa 89D0     		movl	%edx, %eax
 2454 0efc C1E008   		sall	$8, %eax
 2455 0eff 01D0     		addl	%edx, %eax
 2456 0f01 05808000 		addl	$32896, %eax
 2456      00
 2457 0f06 C1E810   		shrl	$16, %eax
 2458 0f09 8945F8   		movl	%eax, -8(%ebp)
1493:../../MMI/Resource/ABMLoader.c ****     g = GDI_IMAGE_AB2_DIV_255(g * a);
 2460              	LM243:
 2461 0f0c 8B45F4   		movl	-12(%ebp), %eax
 2462 0f0f 89C2     		movl	%eax, %edx
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 58


 2463 0f11 0FAF55FC 		imull	-4(%ebp), %edx
 2464 0f15 89D0     		movl	%edx, %eax
 2465 0f17 C1E008   		sall	$8, %eax
 2466 0f1a 01D0     		addl	%edx, %eax
 2467 0f1c 05808000 		addl	$32896, %eax
 2467      00
 2468 0f21 C1E810   		shrl	$16, %eax
 2469 0f24 8945F4   		movl	%eax, -12(%ebp)
1494:../../MMI/Resource/ABMLoader.c ****     b = GDI_IMAGE_AB2_DIV_255(b * a);
 2471              	LM244:
 2472 0f27 8B45F0   		movl	-16(%ebp), %eax
 2473 0f2a 89C2     		movl	%eax, %edx
 2474 0f2c 0FAF55FC 		imull	-4(%ebp), %edx
 2475 0f30 89D0     		movl	%edx, %eax
 2476 0f32 C1E008   		sall	$8, %eax
 2477 0f35 01D0     		addl	%edx, %eax
 2478 0f37 05808000 		addl	$32896, %eax
 2478      00
 2479 0f3c C1E810   		shrl	$16, %eax
 2480 0f3f 8945F0   		movl	%eax, -16(%ebp)
1495:../../MMI/Resource/ABMLoader.c **** 
1496:../../MMI/Resource/ABMLoader.c ****     return ARGB(0xff - a, r, g, b);
 2482              	LM245:
 2483 0f42 B8FF0000 		movl	$255, %eax
 2483      00
 2484 0f47 2B45FC   		subl	-4(%ebp), %eax
 2485 0f4a C1E018   		sall	$24, %eax
 2486 0f4d 8B55F8   		movl	-8(%ebp), %edx
 2487 0f50 C1E210   		sall	$16, %edx
 2488 0f53 09D0     		orl	%edx, %eax
 2489 0f55 8B55F4   		movl	-12(%ebp), %edx
 2490 0f58 C1E208   		sall	$8, %edx
 2491 0f5b 09D0     		orl	%edx, %eax
 2492 0f5d 0B45F0   		orl	-16(%ebp), %eax
1497:../../MMI/Resource/ABMLoader.c **** }
 2494              	LM246:
 2495 0f60 C9       		leave
 2496 0f61 C3       		ret
 2497              	LBE13:
 2507              	Lscope15:
 2512              	_ab2enc_get_pixel_format:
1498:../../MMI/Resource/ABMLoader.c **** 
1499:../../MMI/Resource/ABMLoader.c **** 
1500:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1501:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1502:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_get_pixel_format
1503:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1504:../../MMI/Resource/ABMLoader.c ****  *  Decide the pixel format to save to ABM file
1505:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1506:../../MMI/Resource/ABMLoader.c ****  *  none
1507:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1508:../../MMI/Resource/ABMLoader.c ****  *  The pixel format to save
1509:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1510:../../MMI/Resource/ABMLoader.c **** static U32 ab2enc_get_pixel_format(ABM_Context * abm_context)
1511:../../MMI/Resource/ABMLoader.c **** {
 2514              	LM247:
 2515 0f62 55       		pushl	%ebp
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 59


 2516 0f63 89E5     		movl	%esp, %ebp
 2517 0f65 83EC18   		subl	$24, %esp
1512:../../MMI/Resource/ABMLoader.c **** 
1513:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1514:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1515:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1516:../../MMI/Resource/ABMLoader.c ****     U32 normal_color_cnt;
1517:../../MMI/Resource/ABMLoader.c ****     U32 alpha_color_cnt;
1518:../../MMI/Resource/ABMLoader.c ****     
1519:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1520:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1521:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1522:../../MMI/Resource/ABMLoader.c ****     normal_color_cnt    = get_normal_color_num(abm_context);
 2519              	LM248:
 2520              	LBB15:
 2521 0f68 8B4508   		movl	8(%ebp), %eax
 2522 0f6b 890424   		movl	%eax, (%esp)
 2523 0f6e E897F3FF 		call	_get_normal_color_num
 2523      FF
 2524 0f73 8945FC   		movl	%eax, -4(%ebp)
1523:../../MMI/Resource/ABMLoader.c ****     alpha_color_cnt     = abm_context->color_idx_tab.color_num - normal_color_cnt;
 2526              	LM249:
 2527 0f76 8B4508   		movl	8(%ebp), %eax
 2528 0f79 8B55FC   		movl	-4(%ebp), %edx
 2529 0f7c 8B803474 		movl	1537076(%eax), %eax
 2529      1700
 2530 0f82 29D0     		subl	%edx, %eax
 2531 0f84 8945F8   		movl	%eax, -8(%ebp)
1524:../../MMI/Resource/ABMLoader.c ****     
1525:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.src_key_color_enable || alpha_color_cnt == 0)
 2533              	LM250:
 2534 0f87 8B4508   		movl	8(%ebp), %eax
 2535 0f8a 83B82804 		cmpl	$0, 1064(%eax)
 2535      000000
 2536 0f91 7506     		jne	L147
 2537 0f93 837DF800 		cmpl	$0, -8(%ebp)
 2538 0f97 7548     		jne	L146
 2539              	L147:
1526:../../MMI/Resource/ABMLoader.c ****     {
1527:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_enc.is_fully_opaque)
 2541              	LM251:
 2542 0f99 8B4508   		movl	8(%ebp), %eax
 2543 0f9c 83B83004 		cmpl	$0, 1072(%eax)
 2543      000000
 2544 0fa3 741E     		je	L148
1528:../../MMI/Resource/ABMLoader.c ****         {
1529:../../MMI/Resource/ABMLoader.c ****             if (abm_context->abm_palette_bpp == 16)
 2546              	LM252:
 2547 0fa5 8B4508   		movl	8(%ebp), %eax
 2548 0fa8 83B83C74 		cmpl	$16, 1537084(%eax)
 2548      170010
 2549 0faf 7509     		jne	L149
1530:../../MMI/Resource/ABMLoader.c ****             {   
1531:../../MMI/Resource/ABMLoader.c ****                 return GDI_IMAGE_AB2_FORMAT_RGB565_FULLY_OPAQUE;
 2551              	LM253:
 2552 0fb1 C745F405 		movl	$5, -12(%ebp)
 2552      000000
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 60


 2553 0fb8 EB43     		jmp	L145
 2554              	L149:
1532:../../MMI/Resource/ABMLoader.c ****             }
1533:../../MMI/Resource/ABMLoader.c ****             
1534:../../MMI/Resource/ABMLoader.c ****             return GDI_IMAGE_AB2_FORMAT_RGB888_FULLY_OPAQUE;
 2556              	LM254:
 2557 0fba C745F404 		movl	$4, -12(%ebp)
 2557      000000
 2558 0fc1 EB3A     		jmp	L145
 2559              	L148:
1535:../../MMI/Resource/ABMLoader.c ****         }
1536:../../MMI/Resource/ABMLoader.c ****         else
1537:../../MMI/Resource/ABMLoader.c ****         {
1538:../../MMI/Resource/ABMLoader.c ****             if (abm_context->abm_palette_bpp == 16)
 2561              	LM255:
 2562 0fc3 8B4508   		movl	8(%ebp), %eax
 2563 0fc6 83B83C74 		cmpl	$16, 1537084(%eax)
 2563      170010
 2564 0fcd 7509     		jne	L151
1539:../../MMI/Resource/ABMLoader.c ****             {   
1540:../../MMI/Resource/ABMLoader.c ****                 return GDI_IMAGE_AB2_FORMAT_RGB565_SRC_KEY;
 2566              	LM256:
 2567 0fcf C745F401 		movl	$1, -12(%ebp)
 2567      000000
 2568 0fd6 EB25     		jmp	L145
 2569              	L151:
1541:../../MMI/Resource/ABMLoader.c ****             }
1542:../../MMI/Resource/ABMLoader.c ****             
1543:../../MMI/Resource/ABMLoader.c ****             return GDI_IMAGE_AB2_FORMAT_RGB888_SRC_KEY;
 2571              	LM257:
 2572 0fd8 C745F400 		movl	$0, -12(%ebp)
 2572      000000
 2573 0fdf EB1C     		jmp	L145
 2574              	L146:
1544:../../MMI/Resource/ABMLoader.c ****         }            
1545:../../MMI/Resource/ABMLoader.c ****     }
1546:../../MMI/Resource/ABMLoader.c ****     else
1547:../../MMI/Resource/ABMLoader.c ****     {
1548:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_palette_bpp == 16)
 2576              	LM258:
 2577 0fe1 8B4508   		movl	8(%ebp), %eax
 2578 0fe4 83B83C74 		cmpl	$16, 1537084(%eax)
 2578      170010
 2579 0feb 7509     		jne	L153
1549:../../MMI/Resource/ABMLoader.c ****         {   
1550:../../MMI/Resource/ABMLoader.c ****             return GDI_IMAGE_AB2_FORMAT_PARGB8565;
 2581              	LM259:
 2582 0fed C745F403 		movl	$3, -12(%ebp)
 2582      000000
 2583 0ff4 EB07     		jmp	L145
 2584              	L153:
1551:../../MMI/Resource/ABMLoader.c ****         }
1552:../../MMI/Resource/ABMLoader.c ****         
1553:../../MMI/Resource/ABMLoader.c ****         return GDI_IMAGE_AB2_FORMAT_PARGB8888;
 2586              	LM260:
 2587 0ff6 C745F402 		movl	$2, -12(%ebp)
 2587      000000
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 61


1554:../../MMI/Resource/ABMLoader.c ****     }
1555:../../MMI/Resource/ABMLoader.c **** }
 2589              	LM261:
 2590              	L145:
 2591              	LBE15:
 2592 0ffd 8B45F4   		movl	-12(%ebp), %eax
 2593 1000 C9       		leave
 2594 1001 C3       		ret
 2599              	Lscope16:
 2607              	_ab2_encode_rle_repeat_code:
1556:../../MMI/Resource/ABMLoader.c **** 
1557:../../MMI/Resource/ABMLoader.c **** 
1558:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1559:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1560:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_get_img_color_idx
1561:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1562:../../MMI/Resource/ABMLoader.c ****  *  Get the color index at poisition (x, y) of input image.
1563:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1564:../../MMI/Resource/ABMLoader.c ****  *  param          [IN]     param usage
1565:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1566:../../MMI/Resource/ABMLoader.c ****  *  The color index. 
1567:../../MMI/Resource/ABMLoader.c ****  *  It will return GDI_IMAGE_AB2_INVALID_COLOR_IDX if error.
1568:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1569:../../MMI/Resource/ABMLoader.c **** static GDI_IMAGE_AB2_INLINE U32 ab2enc_get_img_color_idx(U32 x, U32 y, ABM_Context * abm_context)
1570:../../MMI/Resource/ABMLoader.c **** {
1571:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1572:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1573:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1574:../../MMI/Resource/ABMLoader.c ****     const bytes_per_pixel  = abm_context->abm_enc.bmp_bpp / 8;
1575:../../MMI/Resource/ABMLoader.c ****     const line_pitch_bytes = 
1576:../../MMI/Resource/ABMLoader.c ****         bytes_per_pixel * abm_context->abm_enc.bmp_width + abm_context->abm_enc.line_padding_bytes;
1577:../../MMI/Resource/ABMLoader.c **** 
1578:../../MMI/Resource/ABMLoader.c ****     U8 *pixel_ptr;
1579:../../MMI/Resource/ABMLoader.c ****     U8 pixel_nibble_index, last_nibble;
1580:../../MMI/Resource/ABMLoader.c ****     S32 line_pitch_bytes_4bpp;
1581:../../MMI/Resource/ABMLoader.c ****     
1582:../../MMI/Resource/ABMLoader.c ****     mycolor color;
1583:../../MMI/Resource/ABMLoader.c ****     
1584:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1585:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1586:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1587:../../MMI/Resource/ABMLoader.c ****     /* Pixel ptr should be specially handled for 4bpp as it will be chosen from nibbles */
1588:../../MMI/Resource/ABMLoader.c ****     if(abm_context->abm_enc.bmp_bpp == 4)
1589:../../MMI/Resource/ABMLoader.c ****     {
1590:../../MMI/Resource/ABMLoader.c ****         line_pitch_bytes_4bpp = 
1591:../../MMI/Resource/ABMLoader.c ****             ((abm_context->abm_enc.bmp_width + 7) / 8 * 8) /2;
1592:../../MMI/Resource/ABMLoader.c **** 
1593:../../MMI/Resource/ABMLoader.c ****         /* Pixel byte position = start address + reverse calculated Y + nibble index in byte for X 
1594:../../MMI/Resource/ABMLoader.c ****         pixel_ptr = 
1595:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.bmp_pixel_start_p + 
1596:../../MMI/Resource/ABMLoader.c ****             line_pitch_bytes_4bpp * (abm_context->abm_enc.bmp_height - y - 1) +
1597:../../MMI/Resource/ABMLoader.c ****             (x - (x % 2))/2;
1598:../../MMI/Resource/ABMLoader.c **** 
1599:../../MMI/Resource/ABMLoader.c ****         /* If x is odd, pixel color index lies in the last nibble. Set the last nibble flag ON */
1600:../../MMI/Resource/ABMLoader.c ****         last_nibble = x % 2;
1601:../../MMI/Resource/ABMLoader.c ****     }
1602:../../MMI/Resource/ABMLoader.c ****     else
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 62


1603:../../MMI/Resource/ABMLoader.c ****     {
1604:../../MMI/Resource/ABMLoader.c ****         /* BMP file is saved by bottom-up format */
1605:../../MMI/Resource/ABMLoader.c ****         pixel_ptr = 
1606:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.bmp_pixel_start_p + 
1607:../../MMI/Resource/ABMLoader.c ****             line_pitch_bytes * (abm_context->abm_enc.bmp_height - y - 1) +
1608:../../MMI/Resource/ABMLoader.c ****             bytes_per_pixel * x;
1609:../../MMI/Resource/ABMLoader.c ****     }
1610:../../MMI/Resource/ABMLoader.c **** 
1611:../../MMI/Resource/ABMLoader.c ****     /* read pixel */
1612:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.bmp_bpp == 32)
1613:../../MMI/Resource/ABMLoader.c ****     {
1614:../../MMI/Resource/ABMLoader.c ****         color = GET_32(pixel_ptr);
1615:../../MMI/Resource/ABMLoader.c **** 
1616:../../MMI/Resource/ABMLoader.c ****         /* Windows 32-bit BMP is always 0x00RRGGBB. */                    
1617:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_enc.is_windows_bmp)
1618:../../MMI/Resource/ABMLoader.c ****         {
1619:../../MMI/Resource/ABMLoader.c ****             color |= 0xFF000000;
1620:../../MMI/Resource/ABMLoader.c ****         }
1621:../../MMI/Resource/ABMLoader.c **** 
1622:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_enc.src_key_color_enable && (color == TRANSPARENT_COLOR_32))
1623:../../MMI/Resource/ABMLoader.c ****         {
1624:../../MMI/Resource/ABMLoader.c ****             /* transparent color, alpha = 0 */
1625:../../MMI/Resource/ABMLoader.c ****             color = 0;
1626:../../MMI/Resource/ABMLoader.c ****         }                
1627:../../MMI/Resource/ABMLoader.c ****     }
1628:../../MMI/Resource/ABMLoader.c ****     else if (abm_context->abm_enc.bmp_bpp == 24)
1629:../../MMI/Resource/ABMLoader.c ****     {
1630:../../MMI/Resource/ABMLoader.c ****         color = GET_24(pixel_ptr);
1631:../../MMI/Resource/ABMLoader.c **** 
1632:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_enc.src_key_color_enable && (color == TRANSPARENT_COLOR_24))
1633:../../MMI/Resource/ABMLoader.c ****         {   
1634:../../MMI/Resource/ABMLoader.c ****             /* transparent color, alpha = 0 */
1635:../../MMI/Resource/ABMLoader.c ****             color = 0;
1636:../../MMI/Resource/ABMLoader.c ****         }
1637:../../MMI/Resource/ABMLoader.c ****         else
1638:../../MMI/Resource/ABMLoader.c ****         {   
1639:../../MMI/Resource/ABMLoader.c ****             /* opaque color, alpha = 255 */                    
1640:../../MMI/Resource/ABMLoader.c ****             color |= 0xFF000000;
1641:../../MMI/Resource/ABMLoader.c ****         }
1642:../../MMI/Resource/ABMLoader.c ****     }
1643:../../MMI/Resource/ABMLoader.c ****     else if (abm_context->abm_enc.bmp_bpp == 8)
1644:../../MMI/Resource/ABMLoader.c ****     {   
1645:../../MMI/Resource/ABMLoader.c ****         color = abm_context->abm_enc.bmp_palette[*pixel_ptr];
1646:../../MMI/Resource/ABMLoader.c ****     }
1647:../../MMI/Resource/ABMLoader.c ****     else if(abm_context->abm_enc.bmp_bpp == 4)
1648:../../MMI/Resource/ABMLoader.c ****     {   
1649:../../MMI/Resource/ABMLoader.c ****         /* Use the last_nibble flag as it is an indicator for whther it is for first nibble or last
1650:../../MMI/Resource/ABMLoader.c ****         if(!last_nibble )
1651:../../MMI/Resource/ABMLoader.c ****         {
1652:../../MMI/Resource/ABMLoader.c ****             /* First nibble contains the color index */
1653:../../MMI/Resource/ABMLoader.c ****             pixel_nibble_index = (U8)((*pixel_ptr) >> 4);
1654:../../MMI/Resource/ABMLoader.c ****         }
1655:../../MMI/Resource/ABMLoader.c ****         else
1656:../../MMI/Resource/ABMLoader.c ****         {
1657:../../MMI/Resource/ABMLoader.c ****             /* Last nibble contains the color index */
1658:../../MMI/Resource/ABMLoader.c ****             pixel_nibble_index = (U8)((*pixel_ptr) & 0x0F);
1659:../../MMI/Resource/ABMLoader.c ****         }
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 63


1660:../../MMI/Resource/ABMLoader.c ****         color = abm_context->abm_enc.bmp_palette[pixel_nibble_index];
1661:../../MMI/Resource/ABMLoader.c ****     }
1662:../../MMI/Resource/ABMLoader.c ****     else
1663:../../MMI/Resource/ABMLoader.c ****     {
1664:../../MMI/Resource/ABMLoader.c ****         return GDI_IMAGE_AB2_INVALID_COLOR_IDX;
1665:../../MMI/Resource/ABMLoader.c ****     }
1666:../../MMI/Resource/ABMLoader.c **** 
1667:../../MMI/Resource/ABMLoader.c ****     if (A_OF_ARGB8888(color) == 0)
1668:../../MMI/Resource/ABMLoader.c ****     {   
1669:../../MMI/Resource/ABMLoader.c ****         /* index 0 is transparent color */
1670:../../MMI/Resource/ABMLoader.c ****         return 0;
1671:../../MMI/Resource/ABMLoader.c ****     }
1672:../../MMI/Resource/ABMLoader.c ****     
1673:../../MMI/Resource/ABMLoader.c ****     /* index 0 is reserved for transparent color, so +1 */
1674:../../MMI/Resource/ABMLoader.c ****     return (U32)search_color(COLOR_REDUCE(color,abm_context), abm_context) + 1;
1675:../../MMI/Resource/ABMLoader.c **** }
1676:../../MMI/Resource/ABMLoader.c **** 
1677:../../MMI/Resource/ABMLoader.c **** 
1678:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1679:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1680:../../MMI/Resource/ABMLoader.c ****  *  ab2_encode_rle_repeat_code
1681:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1682:../../MMI/Resource/ABMLoader.c ****  *  Encode the RLE repeat code.
1683:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1684:../../MMI/Resource/ABMLoader.c ****  *  os              [IN]    the bit stream to write
1685:../../MMI/Resource/ABMLoader.c ****  *  color_idx       [IN]    the repeat color index to encode
1686:../../MMI/Resource/ABMLoader.c ****  *  color_idx_bits  [IN]    the bits of the repeat color index
1687:../../MMI/Resource/ABMLoader.c ****  *  cnt             [IN]    the number of repeat pixels
1688:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1689:../../MMI/Resource/ABMLoader.c ****  *  void
1690:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1691:../../MMI/Resource/ABMLoader.c **** static void ab2_encode_rle_repeat_code(
1692:../../MMI/Resource/ABMLoader.c ****     ab2_bs_struct *os, 
1693:../../MMI/Resource/ABMLoader.c ****     U32 color_idx, 
1694:../../MMI/Resource/ABMLoader.c ****     U32 color_idx_bits,
1695:../../MMI/Resource/ABMLoader.c ****     U32 cnt)
1696:../../MMI/Resource/ABMLoader.c **** {
 2609              	LM262:
 2610 1002 55       		pushl	%ebp
 2611 1003 89E5     		movl	%esp, %ebp
 2612 1005 83EC18   		subl	$24, %esp
1697:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1698:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1699:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1700:../../MMI/Resource/ABMLoader.c ****     const U32 max_cnt = 128;
 2614              	LM263:
 2615              	LBB16:
 2616 1008 C745FC80 		movl	$128, -4(%ebp)
 2616      000000
1701:../../MMI/Resource/ABMLoader.c ****     
1702:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1703:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1704:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1705:../../MMI/Resource/ABMLoader.c ****     while (cnt > max_cnt)
 2618              	LM264:
 2619              	L175:
 2620 100f 8B4514   		movl	20(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 64


 2621 1012 3B45FC   		cmpl	-4(%ebp), %eax
 2622 1015 7702     		ja	L177
 2623 1017 EB3E     		jmp	L176
 2624              	L177:
1706:../../MMI/Resource/ABMLoader.c ****     {
1707:../../MMI/Resource/ABMLoader.c ****         ab2_bs_write(os, max_cnt - 1, 8);
 2626              	LM265:
 2627 1019 C7442408 		movl	$8, 8(%esp)
 2627      08000000 
 2628 1021 8B45FC   		movl	-4(%ebp), %eax
 2629 1024 48       		decl	%eax
 2630 1025 89442404 		movl	%eax, 4(%esp)
 2631 1029 8B4508   		movl	8(%ebp), %eax
 2632 102c 890424   		movl	%eax, (%esp)
 2633 102f E87B1B00 		call	_ab2_bs_write
 2633      00
1708:../../MMI/Resource/ABMLoader.c ****         ab2_bs_write(os, color_idx, color_idx_bits);
 2635              	LM266:
 2636 1034 8B4510   		movl	16(%ebp), %eax
 2637 1037 89442408 		movl	%eax, 8(%esp)
 2638 103b 8B450C   		movl	12(%ebp), %eax
 2639 103e 89442404 		movl	%eax, 4(%esp)
 2640 1042 8B4508   		movl	8(%ebp), %eax
 2641 1045 890424   		movl	%eax, (%esp)
 2642 1048 E8621B00 		call	_ab2_bs_write
 2642      00
1709:../../MMI/Resource/ABMLoader.c **** 
1710:../../MMI/Resource/ABMLoader.c ****         cnt -= max_cnt;
 2644              	LM267:
 2645 104d 8B55FC   		movl	-4(%ebp), %edx
 2646 1050 8D4514   		leal	20(%ebp), %eax
 2647 1053 2910     		subl	%edx, (%eax)
 2648 1055 EBB8     		jmp	L175
 2649              	L176:
1711:../../MMI/Resource/ABMLoader.c ****     }
1712:../../MMI/Resource/ABMLoader.c **** 
1713:../../MMI/Resource/ABMLoader.c ****     if (cnt > 0)
 2651              	LM268:
 2652 1057 837D1400 		cmpl	$0, 20(%ebp)
 2653 105b 7434     		je	L174
1714:../../MMI/Resource/ABMLoader.c ****     {
1715:../../MMI/Resource/ABMLoader.c ****         ab2_bs_write(os, cnt - 1, 8);
 2655              	LM269:
 2656 105d C7442408 		movl	$8, 8(%esp)
 2656      08000000 
 2657 1065 8B4514   		movl	20(%ebp), %eax
 2658 1068 48       		decl	%eax
 2659 1069 89442404 		movl	%eax, 4(%esp)
 2660 106d 8B4508   		movl	8(%ebp), %eax
 2661 1070 890424   		movl	%eax, (%esp)
 2662 1073 E8371B00 		call	_ab2_bs_write
 2662      00
1716:../../MMI/Resource/ABMLoader.c ****         ab2_bs_write(os, color_idx, color_idx_bits);
 2664              	LM270:
 2665 1078 8B4510   		movl	16(%ebp), %eax
 2666 107b 89442408 		movl	%eax, 8(%esp)
 2667 107f 8B450C   		movl	12(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 65


 2668 1082 89442404 		movl	%eax, 4(%esp)
 2669 1086 8B4508   		movl	8(%ebp), %eax
 2670 1089 890424   		movl	%eax, (%esp)
 2671 108c E81E1B00 		call	_ab2_bs_write
 2671      00
1717:../../MMI/Resource/ABMLoader.c ****     }
1718:../../MMI/Resource/ABMLoader.c **** }
 2673              	LM271:
 2674              	L174:
 2675 1091 C9       		leave
 2676 1092 C3       		ret
 2677              	LBE16:
 2681              	Lscope17:
 2691              	_ab2_encode_rle_discount_code:
1719:../../MMI/Resource/ABMLoader.c **** 
1720:../../MMI/Resource/ABMLoader.c **** 
1721:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1722:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1723:../../MMI/Resource/ABMLoader.c ****  *  ab2_encode_rle_discount_code
1724:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1725:../../MMI/Resource/ABMLoader.c ****  *  Encode the RLE discontinue code.
1726:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1727:../../MMI/Resource/ABMLoader.c ****  *  os              [IN]    the bit stream to write
1728:../../MMI/Resource/ABMLoader.c ****  *  x               [IN]    x of the start poisition to encode
1729:../../MMI/Resource/ABMLoader.c ****  *  y               [IN]    y of the start poisition to encode
1730:../../MMI/Resource/ABMLoader.c ****  *  color_idx_bits  [IN]    the bits of the repeat color index
1731:../../MMI/Resource/ABMLoader.c ****  *  cnt             [IN]    the number pixels to encode
1732:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1733:../../MMI/Resource/ABMLoader.c ****  *  void
1734:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1735:../../MMI/Resource/ABMLoader.c **** static void ab2_encode_rle_discount_code(
1736:../../MMI/Resource/ABMLoader.c ****     ab2_bs_struct *os, 
1737:../../MMI/Resource/ABMLoader.c ****     U32 x, 
1738:../../MMI/Resource/ABMLoader.c ****     U32 y, 
1739:../../MMI/Resource/ABMLoader.c ****     U32 color_idx_bits,
1740:../../MMI/Resource/ABMLoader.c ****     U32 cnt,
1741:../../MMI/Resource/ABMLoader.c ****     ABM_Context * abm_context)
1742:../../MMI/Resource/ABMLoader.c **** {
 2693              	LM272:
 2694 1093 55       		pushl	%ebp
 2695 1094 89E5     		movl	%esp, %ebp
 2696 1096 83EC28   		subl	$40, %esp
1743:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1744:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1745:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1746:../../MMI/Resource/ABMLoader.c ****     const U32 max_cnt = 128;
 2698              	LM273:
 2699              	LBB17:
 2700 1099 C745FC80 		movl	$128, -4(%ebp)
 2700      000000
1747:../../MMI/Resource/ABMLoader.c ****     
1748:../../MMI/Resource/ABMLoader.c ****     U32 x0 = abm_context->abm_enc.x1;
 2702              	LM274:
 2703 10a0 8B451C   		movl	28(%ebp), %eax
 2704 10a3 8B801804 		movl	1048(%eax), %eax
 2704      0000
 2705 10a9 8945F8   		movl	%eax, -8(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 66


1749:../../MMI/Resource/ABMLoader.c ****     U32 x1 = abm_context->abm_enc.x2;
 2707              	LM275:
 2708 10ac 8B451C   		movl	28(%ebp), %eax
 2709 10af 8B802004 		movl	1056(%eax), %eax
 2709      0000
 2710 10b5 8945F4   		movl	%eax, -12(%ebp)
1750:../../MMI/Resource/ABMLoader.c ****     
1751:../../MMI/Resource/ABMLoader.c ****     U32 i;
1752:../../MMI/Resource/ABMLoader.c ****     
1753:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1754:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1755:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1756:../../MMI/Resource/ABMLoader.c ****     while (cnt > max_cnt)
 2712              	LM276:
 2713              	L180:
 2714 10b8 8B4518   		movl	24(%ebp), %eax
 2715 10bb 3B45FC   		cmpl	-4(%ebp), %eax
 2716 10be 7705     		ja	L182
 2717 10c0 E98F0000 		jmp	L181
 2717      00
 2718              	L182:
1757:../../MMI/Resource/ABMLoader.c ****     {
1758:../../MMI/Resource/ABMLoader.c ****         ab2_bs_write(os, 0x80 | (max_cnt - 1), 8);
 2720              	LM277:
 2721 10c5 C7442408 		movl	$8, 8(%esp)
 2721      08000000 
 2722 10cd 8B45FC   		movl	-4(%ebp), %eax
 2723 10d0 48       		decl	%eax
 2724 10d1 0D800000 		orl	$128, %eax
 2724      00
 2725 10d6 89442404 		movl	%eax, 4(%esp)
 2726 10da 8B4508   		movl	8(%ebp), %eax
 2727 10dd 890424   		movl	%eax, (%esp)
 2728 10e0 E8CA1A00 		call	_ab2_bs_write
 2728      00
1759:../../MMI/Resource/ABMLoader.c **** 
1760:../../MMI/Resource/ABMLoader.c ****         for (i = max_cnt; i != 0; i--)
 2730              	LM278:
 2731 10e5 8B45FC   		movl	-4(%ebp), %eax
 2732 10e8 8945F0   		movl	%eax, -16(%ebp)
 2733              	L183:
 2734 10eb 837DF000 		cmpl	$0, -16(%ebp)
 2735 10ef 7502     		jne	L186
 2736 10f1 EB54     		jmp	L184
 2737              	L186:
1761:../../MMI/Resource/ABMLoader.c ****         {
1762:../../MMI/Resource/ABMLoader.c ****             U32 color_idx = ab2enc_get_img_color_idx(x, y, abm_context);
 2739              	LM279:
 2740              	LBB18:
 2741 10f3 8B451C   		movl	28(%ebp), %eax
 2742 10f6 89442408 		movl	%eax, 8(%esp)
 2743 10fa 8B4510   		movl	16(%ebp), %eax
 2744 10fd 89442404 		movl	%eax, 4(%esp)
 2745 1101 8B450C   		movl	12(%ebp), %eax
 2746 1104 890424   		movl	%eax, (%esp)
 2747 1107 E8231B00 		call	_ab2enc_get_img_color_idx
 2747      00
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 67


 2748 110c 8945EC   		movl	%eax, -20(%ebp)
1763:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(os, color_idx, color_idx_bits);
 2750              	LM280:
 2751 110f 8B4514   		movl	20(%ebp), %eax
 2752 1112 89442408 		movl	%eax, 8(%esp)
 2753 1116 8B45EC   		movl	-20(%ebp), %eax
 2754 1119 89442404 		movl	%eax, 4(%esp)
 2755 111d 8B4508   		movl	8(%ebp), %eax
 2756 1120 890424   		movl	%eax, (%esp)
 2757 1123 E8871A00 		call	_ab2_bs_write
 2757      00
1764:../../MMI/Resource/ABMLoader.c **** 
1765:../../MMI/Resource/ABMLoader.c ****             /* seek to next image pixel */
1766:../../MMI/Resource/ABMLoader.c ****             x++;
 2759              	LM281:
 2760 1128 8D450C   		leal	12(%ebp), %eax
 2761 112b FF00     		incl	(%eax)
1767:../../MMI/Resource/ABMLoader.c ****             if (x > x1)
 2763              	LM282:
 2764 112d 8B450C   		movl	12(%ebp), %eax
 2765 1130 3B45F4   		cmpl	-12(%ebp), %eax
 2766 1133 760B     		jbe	L185
1768:../../MMI/Resource/ABMLoader.c ****             {
1769:../../MMI/Resource/ABMLoader.c ****                 x = x0;
 2768              	LM283:
 2769 1135 8B45F8   		movl	-8(%ebp), %eax
 2770 1138 89450C   		movl	%eax, 12(%ebp)
1770:../../MMI/Resource/ABMLoader.c ****                 y++;
 2772              	LM284:
 2773 113b 8D4510   		leal	16(%ebp), %eax
 2774 113e FF00     		incl	(%eax)
 2776              	LM285:
 2777              	L185:
 2778 1140 8D45F0   		leal	-16(%ebp), %eax
 2779              	LBE18:
 2780 1143 FF08     		decl	(%eax)
 2781 1145 EBA4     		jmp	L183
 2782              	L184:
1771:../../MMI/Resource/ABMLoader.c ****             }
1772:../../MMI/Resource/ABMLoader.c ****         }
1773:../../MMI/Resource/ABMLoader.c ****         
1774:../../MMI/Resource/ABMLoader.c ****         cnt -= max_cnt;
 2784              	LM286:
 2785 1147 8B55FC   		movl	-4(%ebp), %edx
 2786 114a 8D4518   		leal	24(%ebp), %eax
 2787 114d 2910     		subl	%edx, (%eax)
 2788 114f E964FFFF 		jmp	L180
 2788      FF
 2789              	L181:
1775:../../MMI/Resource/ABMLoader.c ****     } /* while (cnt > max_cnt) */
1776:../../MMI/Resource/ABMLoader.c **** 
1777:../../MMI/Resource/ABMLoader.c ****     if (cnt > 0)
 2791              	LM287:
 2792 1154 837D1800 		cmpl	$0, 24(%ebp)
 2793 1158 0F848200 		je	L179
 2793      0000
1778:../../MMI/Resource/ABMLoader.c ****     {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 68


1779:../../MMI/Resource/ABMLoader.c ****         ab2_bs_write(os, 0x80 | (cnt - 1), 8);
 2795              	LM288:
 2796 115e C7442408 		movl	$8, 8(%esp)
 2796      08000000 
 2797 1166 8B4518   		movl	24(%ebp), %eax
 2798 1169 48       		decl	%eax
 2799 116a 0D800000 		orl	$128, %eax
 2799      00
 2800 116f 89442404 		movl	%eax, 4(%esp)
 2801 1173 8B4508   		movl	8(%ebp), %eax
 2802 1176 890424   		movl	%eax, (%esp)
 2803 1179 E8311A00 		call	_ab2_bs_write
 2803      00
1780:../../MMI/Resource/ABMLoader.c **** 
1781:../../MMI/Resource/ABMLoader.c ****         for (i = cnt; i != 0; i--)
 2805              	LM289:
 2806 117e 8B4518   		movl	24(%ebp), %eax
 2807 1181 8945F0   		movl	%eax, -16(%ebp)
 2808              	L189:
 2809 1184 837DF000 		cmpl	$0, -16(%ebp)
 2810 1188 7502     		jne	L192
 2811 118a EB54     		jmp	L179
 2812              	L192:
1782:../../MMI/Resource/ABMLoader.c ****         {
1783:../../MMI/Resource/ABMLoader.c ****             U32 color_idx = ab2enc_get_img_color_idx(x, y, abm_context);
 2814              	LM290:
 2815              	LBB19:
 2816 118c 8B451C   		movl	28(%ebp), %eax
 2817 118f 89442408 		movl	%eax, 8(%esp)
 2818 1193 8B4510   		movl	16(%ebp), %eax
 2819 1196 89442404 		movl	%eax, 4(%esp)
 2820 119a 8B450C   		movl	12(%ebp), %eax
 2821 119d 890424   		movl	%eax, (%esp)
 2822 11a0 E88A1A00 		call	_ab2enc_get_img_color_idx
 2822      00
 2823 11a5 8945EC   		movl	%eax, -20(%ebp)
1784:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(os, color_idx, color_idx_bits);
 2825              	LM291:
 2826 11a8 8B4514   		movl	20(%ebp), %eax
 2827 11ab 89442408 		movl	%eax, 8(%esp)
 2828 11af 8B45EC   		movl	-20(%ebp), %eax
 2829 11b2 89442404 		movl	%eax, 4(%esp)
 2830 11b6 8B4508   		movl	8(%ebp), %eax
 2831 11b9 890424   		movl	%eax, (%esp)
 2832 11bc E8EE1900 		call	_ab2_bs_write
 2832      00
1785:../../MMI/Resource/ABMLoader.c **** 
1786:../../MMI/Resource/ABMLoader.c ****             /* seek to next image pixel */
1787:../../MMI/Resource/ABMLoader.c ****             x++;
 2834              	LM292:
 2835 11c1 8D450C   		leal	12(%ebp), %eax
 2836 11c4 FF00     		incl	(%eax)
1788:../../MMI/Resource/ABMLoader.c ****             if (x > x1)
 2838              	LM293:
 2839 11c6 8B450C   		movl	12(%ebp), %eax
 2840 11c9 3B45F4   		cmpl	-12(%ebp), %eax
 2841 11cc 760B     		jbe	L191
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 69


1789:../../MMI/Resource/ABMLoader.c ****             {
1790:../../MMI/Resource/ABMLoader.c ****                 x = x0;
 2843              	LM294:
 2844 11ce 8B45F8   		movl	-8(%ebp), %eax
 2845 11d1 89450C   		movl	%eax, 12(%ebp)
1791:../../MMI/Resource/ABMLoader.c ****                 y++;
 2847              	LM295:
 2848 11d4 8D4510   		leal	16(%ebp), %eax
 2849 11d7 FF00     		incl	(%eax)
 2851              	LM296:
 2852              	L191:
 2853 11d9 8D45F0   		leal	-16(%ebp), %eax
 2854              	LBE19:
 2855 11dc FF08     		decl	(%eax)
 2856 11de EBA4     		jmp	L189
1792:../../MMI/Resource/ABMLoader.c ****             }
1793:../../MMI/Resource/ABMLoader.c ****         }
1794:../../MMI/Resource/ABMLoader.c ****     } /* if (cnt > 0) */
1795:../../MMI/Resource/ABMLoader.c **** }
 2858              	LM297:
 2859              	L179:
 2860 11e0 C9       		leave
 2861 11e1 C3       		ret
 2862              	LBE17:
 2875              	Lscope18:
 2881              	_ab2enc_encode_header:
1796:../../MMI/Resource/ABMLoader.c **** 
1797:../../MMI/Resource/ABMLoader.c **** 
1798:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1799:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1800:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_encode_header
1801:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1802:../../MMI/Resource/ABMLoader.c ****  *  Encode the ABM v2 header
1803:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1804:../../MMI/Resource/ABMLoader.c ****  *  mem_ptr         [IN]     buffer to write header
1805:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1806:../../MMI/Resource/ABMLoader.c ****  *  Return the bytes written. If error, it will return 0
1807:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1808:../../MMI/Resource/ABMLoader.c **** static U32 ab2enc_encode_header(U8 *mem_ptr, ABM_Context * abm_context)
1809:../../MMI/Resource/ABMLoader.c **** {
 2883              	LM298:
 2884 11e2 55       		pushl	%ebp
 2885 11e3 89E5     		movl	%esp, %ebp
 2886 11e5 83EC48   		subl	$72, %esp
1810:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1811:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1812:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1813:../../MMI/Resource/ABMLoader.c ****     ab2_bs_struct os;
1814:../../MMI/Resource/ABMLoader.c **** 
1815:../../MMI/Resource/ABMLoader.c ****     U32 boundary_left   = abm_context->abm_enc.x1;
 2888              	LM299:
 2889              	LBB20:
 2890 11e8 8B450C   		movl	12(%ebp), %eax
 2891 11eb 8B801804 		movl	1048(%eax), %eax
 2891      0000
 2892 11f1 8945E4   		movl	%eax, -28(%ebp)
1816:../../MMI/Resource/ABMLoader.c ****     U32 boundary_top    = abm_context->abm_enc.y1;
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 70


 2894              	LM300:
 2895 11f4 8B450C   		movl	12(%ebp), %eax
 2896 11f7 8B801C04 		movl	1052(%eax), %eax
 2896      0000
 2897 11fd 8945E0   		movl	%eax, -32(%ebp)
1817:../../MMI/Resource/ABMLoader.c ****     U32 boundary_right  = abm_context->abm_enc.bmp_width - 1 - abm_context->abm_enc.x2;
 2899              	LM301:
 2900 1200 8B4D0C   		movl	12(%ebp), %ecx
 2901 1203 8B450C   		movl	12(%ebp), %eax
 2902 1206 8B902004 		movl	1056(%eax), %edx
 2902      0000
 2903 120c 8B01     		movl	(%ecx), %eax
 2904 120e 29D0     		subl	%edx, %eax
 2905 1210 48       		decl	%eax
 2906 1211 8945DC   		movl	%eax, -36(%ebp)
1818:../../MMI/Resource/ABMLoader.c ****     U32 boundary_bottom = abm_context->abm_enc.bmp_height - 1 - abm_context->abm_enc.y2;
 2908              	LM302:
 2909 1214 8B4D0C   		movl	12(%ebp), %ecx
 2910 1217 8B450C   		movl	12(%ebp), %eax
 2911 121a 8B902404 		movl	1060(%eax), %edx
 2911      0000
 2912 1220 8B4104   		movl	4(%ecx), %eax
 2913 1223 29D0     		subl	%edx, %eax
 2914 1225 48       		decl	%eax
 2915 1226 8945D8   		movl	%eax, -40(%ebp)
1819:../../MMI/Resource/ABMLoader.c ****     U32 pixel_format    = ab2enc_get_pixel_format(abm_context);
 2917              	LM303:
 2918 1229 8B450C   		movl	12(%ebp), %eax
 2919 122c 890424   		movl	%eax, (%esp)
 2920 122f E82EFDFF 		call	_ab2enc_get_pixel_format
 2920      FF
 2921 1234 8945D4   		movl	%eax, -44(%ebp)
1820:../../MMI/Resource/ABMLoader.c ****     U32 algorithm       = GDI_IMAGE_AB2_ALGORITHM_RLE;
 2923              	LM304:
 2924 1237 C745D001 		movl	$1, -48(%ebp)
 2924      000000
1821:../../MMI/Resource/ABMLoader.c **** 
1822:../../MMI/Resource/ABMLoader.c ****     U32 header_size;
1823:../../MMI/Resource/ABMLoader.c ****     
1824:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1825:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1826:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1827:../../MMI/Resource/ABMLoader.c ****     ab2_bs_init(&os, mem_ptr);
 2926              	LM305:
 2927 123e 8B4508   		movl	8(%ebp), %eax
 2928 1241 89442404 		movl	%eax, 4(%esp)
 2929 1245 8D45E8   		leal	-24(%ebp), %eax
 2930 1248 890424   		movl	%eax, (%esp)
 2931 124b E83E1900 		call	_ab2_bs_init
 2931      00
1828:../../MMI/Resource/ABMLoader.c **** 
1829:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, (U32)abm_context->abm_enc.bmp_width,  GDI_IMAGE_AB2_HEADER_WIDTH_BITS);
 2933              	LM306:
 2934 1250 C7442408 		movl	$12, 8(%esp)
 2934      0C000000 
 2935 1258 8B450C   		movl	12(%ebp), %eax
 2936 125b 8B00     		movl	(%eax), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 71


 2937 125d 89442404 		movl	%eax, 4(%esp)
 2938 1261 8D45E8   		leal	-24(%ebp), %eax
 2939 1264 890424   		movl	%eax, (%esp)
 2940 1267 E8431900 		call	_ab2_bs_write
 2940      00
1830:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, (U32)abm_context->abm_enc.bmp_height, GDI_IMAGE_AB2_HEADER_HEIGHT_BITS);
 2942              	LM307:
 2943 126c C7442408 		movl	$12, 8(%esp)
 2943      0C000000 
 2944 1274 8B450C   		movl	12(%ebp), %eax
 2945 1277 8B4004   		movl	4(%eax), %eax
 2946 127a 89442404 		movl	%eax, 4(%esp)
 2947 127e 8D45E8   		leal	-24(%ebp), %eax
 2948 1281 890424   		movl	%eax, (%esp)
 2949 1284 E8261900 		call	_ab2_bs_write
 2949      00
1831:../../MMI/Resource/ABMLoader.c **** 
1832:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, boundary_left,    GDI_IMAGE_AB2_HEADER_BOUND_LEFT_BITS);
 2951              	LM308:
 2952 1289 C7442408 		movl	$8, 8(%esp)
 2952      08000000 
 2953 1291 8B45E4   		movl	-28(%ebp), %eax
 2954 1294 89442404 		movl	%eax, 4(%esp)
 2955 1298 8D45E8   		leal	-24(%ebp), %eax
 2956 129b 890424   		movl	%eax, (%esp)
 2957 129e E80C1900 		call	_ab2_bs_write
 2957      00
1833:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, boundary_top,     GDI_IMAGE_AB2_HEADER_BOUND_TOP_BITS);
 2959              	LM309:
 2960 12a3 C7442408 		movl	$8, 8(%esp)
 2960      08000000 
 2961 12ab 8B45E0   		movl	-32(%ebp), %eax
 2962 12ae 89442404 		movl	%eax, 4(%esp)
 2963 12b2 8D45E8   		leal	-24(%ebp), %eax
 2964 12b5 890424   		movl	%eax, (%esp)
 2965 12b8 E8F21800 		call	_ab2_bs_write
 2965      00
1834:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, boundary_right,   GDI_IMAGE_AB2_HEADER_BOUND_RIGHT_BITS);
 2967              	LM310:
 2968 12bd C7442408 		movl	$8, 8(%esp)
 2968      08000000 
 2969 12c5 8B45DC   		movl	-36(%ebp), %eax
 2970 12c8 89442404 		movl	%eax, 4(%esp)
 2971 12cc 8D45E8   		leal	-24(%ebp), %eax
 2972 12cf 890424   		movl	%eax, (%esp)
 2973 12d2 E8D81800 		call	_ab2_bs_write
 2973      00
1835:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, boundary_bottom,  GDI_IMAGE_AB2_HEADER_BOUND_BOTTOM_BITS);
 2975              	LM311:
 2976 12d7 C7442408 		movl	$8, 8(%esp)
 2976      08000000 
 2977 12df 8B45D8   		movl	-40(%ebp), %eax
 2978 12e2 89442404 		movl	%eax, 4(%esp)
 2979 12e6 8D45E8   		leal	-24(%ebp), %eax
 2980 12e9 890424   		movl	%eax, (%esp)
 2981 12ec E8BE1800 		call	_ab2_bs_write
 2981      00
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 72


1836:../../MMI/Resource/ABMLoader.c ****     
1837:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, pixel_format,     GDI_IMAGE_AB2_HEADER_FORMAT_BITS);
 2983              	LM312:
 2984 12f1 C7442408 		movl	$4, 8(%esp)
 2984      04000000 
 2985 12f9 8B45D4   		movl	-44(%ebp), %eax
 2986 12fc 89442404 		movl	%eax, 4(%esp)
 2987 1300 8D45E8   		leal	-24(%ebp), %eax
 2988 1303 890424   		movl	%eax, (%esp)
 2989 1306 E8A41800 		call	_ab2_bs_write
 2989      00
1838:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, algorithm,        GDI_IMAGE_AB2_HEADER_ALGORITHM_BITS);
 2991              	LM313:
 2992 130b C7442408 		movl	$3, 8(%esp)
 2992      03000000 
 2993 1313 8B45D0   		movl	-48(%ebp), %eax
 2994 1316 89442404 		movl	%eax, 4(%esp)
 2995 131a 8D45E8   		leal	-24(%ebp), %eax
 2996 131d 890424   		movl	%eax, (%esp)
 2997 1320 E88A1800 		call	_ab2_bs_write
 2997      00
1839:../../MMI/Resource/ABMLoader.c ****     
1840:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, 0,                GDI_IMAGE_AB2_HEADER_RESERVED_1_BITS);
 2999              	LM314:
 3000 1325 C7442408 		movl	$1, 8(%esp)
 3000      01000000 
 3001 132d C7442404 		movl	$0, 4(%esp)
 3001      00000000 
 3002 1335 8D45E8   		leal	-24(%ebp), %eax
 3003 1338 890424   		movl	%eax, (%esp)
 3004 133b E86F1800 		call	_ab2_bs_write
 3004      00
1841:../../MMI/Resource/ABMLoader.c **** 
1842:../../MMI/Resource/ABMLoader.c ****     header_size = ab2_bs_offset(&os, mem_ptr);
 3006              	LM315:
 3007 1340 8B4508   		movl	8(%ebp), %eax
 3008 1343 89442404 		movl	%eax, 4(%esp)
 3009 1347 8D45E8   		leal	-24(%ebp), %eax
 3010 134a 890424   		movl	%eax, (%esp)
 3011 134d E8CE1800 		call	_ab2_bs_offset
 3011      00
 3012 1352 8945CC   		movl	%eax, -52(%ebp)
1843:../../MMI/Resource/ABMLoader.c **** 
1844:../../MMI/Resource/ABMLoader.c ****     //MMI_ASSERT(header_size == GDI_IMAGE_AB2_HEADER_SIZE);
1845:../../MMI/Resource/ABMLoader.c ****     
1846:../../MMI/Resource/ABMLoader.c ****     return header_size;
 3014              	LM316:
 3015 1355 8B45CC   		movl	-52(%ebp), %eax
1847:../../MMI/Resource/ABMLoader.c **** }
 3017              	LM317:
 3018 1358 C9       		leave
 3019 1359 C3       		ret
 3020              	LBE20:
 3031              	Lscope19:
 3037              	_ab2enc_rle_encode_header:
1848:../../MMI/Resource/ABMLoader.c **** 
1849:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 73


1850:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1851:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1852:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_rle_encode_header
1853:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1854:../../MMI/Resource/ABMLoader.c ****  *  Encode ABM v2 RLE header
1855:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1856:../../MMI/Resource/ABMLoader.c ****  *  mem_ptr         [OUT]    buffer to write header
1857:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1858:../../MMI/Resource/ABMLoader.c ****  *  Return the bytes written. If error, it will return 0
1859:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1860:../../MMI/Resource/ABMLoader.c **** static U32 ab2enc_rle_encode_header(U8 *mem_ptr, ABM_Context * abm_context)
1861:../../MMI/Resource/ABMLoader.c **** {
 3039              	LM318:
 3040 135a 55       		pushl	%ebp
 3041 135b 89E5     		movl	%esp, %ebp
 3042 135d 83EC48   		subl	$72, %esp
1862:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1863:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1864:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1865:../../MMI/Resource/ABMLoader.c ****     ab2_bs_struct os;
1866:../../MMI/Resource/ABMLoader.c ****     
1867:../../MMI/Resource/ABMLoader.c ****     U32 normal_color_cnt;
1868:../../MMI/Resource/ABMLoader.c ****     U32 alpha_color_cnt;
1869:../../MMI/Resource/ABMLoader.c **** 
1870:../../MMI/Resource/ABMLoader.c ****     U32 i;
1871:../../MMI/Resource/ABMLoader.c ****     
1872:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1873:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1874:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1875:../../MMI/Resource/ABMLoader.c ****     ab2_bs_init(&os, mem_ptr);
 3044              	LM319:
 3045              	LBB21:
 3046 1360 8B4508   		movl	8(%ebp), %eax
 3047 1363 89442404 		movl	%eax, 4(%esp)
 3048 1367 8D45E8   		leal	-24(%ebp), %eax
 3049 136a 890424   		movl	%eax, (%esp)
 3050 136d E81C1800 		call	_ab2_bs_init
 3050      00
1876:../../MMI/Resource/ABMLoader.c **** 
1877:../../MMI/Resource/ABMLoader.c ****     normal_color_cnt    = get_normal_color_num(abm_context);
 3052              	LM320:
 3053 1372 8B450C   		movl	12(%ebp), %eax
 3054 1375 890424   		movl	%eax, (%esp)
 3055 1378 E88DEFFF 		call	_get_normal_color_num
 3055      FF
 3056 137d 8945E4   		movl	%eax, -28(%ebp)
1878:../../MMI/Resource/ABMLoader.c ****     alpha_color_cnt     = abm_context->color_idx_tab.color_num - normal_color_cnt;
 3058              	LM321:
 3059 1380 8B450C   		movl	12(%ebp), %eax
 3060 1383 8B55E4   		movl	-28(%ebp), %edx
 3061 1386 8B803474 		movl	1537076(%eax), %eax
 3061      1700
 3062 138c 29D0     		subl	%edx, %eax
 3063 138e 8945E0   		movl	%eax, -32(%ebp)
1879:../../MMI/Resource/ABMLoader.c ****     
1880:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, normal_color_cnt, 16);
 3065              	LM322:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 74


 3066 1391 C7442408 		movl	$16, 8(%esp)
 3066      10000000 
 3067 1399 8B45E4   		movl	-28(%ebp), %eax
 3068 139c 89442404 		movl	%eax, 4(%esp)
 3069 13a0 8D45E8   		leal	-24(%ebp), %eax
 3070 13a3 890424   		movl	%eax, (%esp)
 3071 13a6 E8041800 		call	_ab2_bs_write
 3071      00
1881:../../MMI/Resource/ABMLoader.c ****     ab2_bs_write(&os, alpha_color_cnt,  16);
 3073              	LM323:
 3074 13ab C7442408 		movl	$16, 8(%esp)
 3074      10000000 
 3075 13b3 8B45E0   		movl	-32(%ebp), %eax
 3076 13b6 89442404 		movl	%eax, 4(%esp)
 3077 13ba 8D45E8   		leal	-24(%ebp), %eax
 3078 13bd 890424   		movl	%eax, (%esp)
 3079 13c0 E8EA1700 		call	_ab2_bs_write
 3079      00
1882:../../MMI/Resource/ABMLoader.c **** 
1883:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < normal_color_cnt; i++)
 3081              	LM324:
 3082 13c5 C745DC00 		movl	$0, -36(%ebp)
 3082      000000
 3083              	L196:
 3084 13cc 8B45DC   		movl	-36(%ebp), %eax
 3085 13cf 3B45E4   		cmpl	-28(%ebp), %eax
 3086 13d2 7205     		jb	L199
 3087 13d4 E9D00000 		jmp	L197
 3087      00
 3088              	L199:
1884:../../MMI/Resource/ABMLoader.c ****     {
1885:../../MMI/Resource/ABMLoader.c ****         mycolor color = ab2enc_color_preprocess(abm_context->color_idx_tab.color_table[i], abm_cont
 3090              	LM325:
 3091              	LBB22:
 3092 13d9 8B450C   		movl	12(%ebp), %eax
 3093 13dc 89442404 		movl	%eax, 4(%esp)
 3094 13e0 8B550C   		movl	12(%ebp), %edx
 3095 13e3 8B45DC   		movl	-36(%ebp), %eax
 3096 13e6 8B848234 		movl	1076(%edx,%eax,4), %eax
 3096      040000
 3097 13ed 890424   		movl	%eax, (%esp)
 3098 13f0 E86BFAFF 		call	_ab2enc_color_preprocess
 3098      FF
 3099 13f5 8945D8   		movl	%eax, -40(%ebp)
1886:../../MMI/Resource/ABMLoader.c ****         
1887:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_palette_bpp == 16)
 3101              	LM326:
 3102 13f8 8B450C   		movl	12(%ebp), %eax
 3103 13fb 83B83C74 		cmpl	$16, 1537084(%eax)
 3103      170010
 3104 1402 7549     		jne	L200
1888:../../MMI/Resource/ABMLoader.c ****         {   
1889:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, ARGB8888_TO_RGB16(color), 16);
 3106              	LM327:
 3107 1404 C7442408 		movl	$16, 8(%esp)
 3107      10000000 
 3108 140c 8B45D8   		movl	-40(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 75


 3109 140f C1E008   		sall	$8, %eax
 3110 1412 C1E818   		shrl	$24, %eax
 3111 1415 C1E803   		shrl	$3, %eax
 3112 1418 89C2     		movl	%eax, %edx
 3113 141a C1E20B   		sall	$11, %edx
 3114 141d 8B45D8   		movl	-40(%ebp), %eax
 3115 1420 C1E010   		sall	$16, %eax
 3116 1423 C1E818   		shrl	$24, %eax
 3117 1426 C1E802   		shrl	$2, %eax
 3118 1429 C1E005   		sall	$5, %eax
 3119 142c 09C2     		orl	%eax, %edx
 3120 142e 8B45D8   		movl	-40(%ebp), %eax
 3121 1431 C1E018   		sall	$24, %eax
 3122 1434 C1E818   		shrl	$24, %eax
 3123 1437 C1E803   		shrl	$3, %eax
 3124 143a 09D0     		orl	%edx, %eax
 3125 143c 89442404 		movl	%eax, 4(%esp)
 3126 1440 8D45E8   		leal	-24(%ebp), %eax
 3127 1443 890424   		movl	%eax, (%esp)
 3128 1446 E8641700 		call	_ab2_bs_write
 3128      00
 3129 144b EB52     		jmp	L198
 3130              	L200:
1890:../../MMI/Resource/ABMLoader.c ****         }
1891:../../MMI/Resource/ABMLoader.c ****         else if (abm_context->abm_palette_bpp == 24)
 3132              	LM328:
 3133 144d 8B450C   		movl	12(%ebp), %eax
 3134 1450 83B83C74 		cmpl	$24, 1537084(%eax)
 3134      170018
 3135 1457 753A     		jne	L202
1892:../../MMI/Resource/ABMLoader.c ****         {
1893:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, color & 0xffff, 16);
 3137              	LM329:
 3138 1459 C7442408 		movl	$16, 8(%esp)
 3138      10000000 
 3139 1461 0FB745D8 		movzwl	-40(%ebp),%eax
 3140 1465 89442404 		movl	%eax, 4(%esp)
 3141 1469 8D45E8   		leal	-24(%ebp), %eax
 3142 146c 890424   		movl	%eax, (%esp)
 3143 146f E83B1700 		call	_ab2_bs_write
 3143      00
1894:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, color >> 16, 8);
 3145              	LM330:
 3146 1474 C7442408 		movl	$8, 8(%esp)
 3146      08000000 
 3147 147c 8B45D8   		movl	-40(%ebp), %eax
 3148 147f C1E810   		shrl	$16, %eax
 3149 1482 89442404 		movl	%eax, 4(%esp)
 3150 1486 8D45E8   		leal	-24(%ebp), %eax
 3151 1489 890424   		movl	%eax, (%esp)
 3152 148c E81E1700 		call	_ab2_bs_write
 3152      00
 3153 1491 EB0C     		jmp	L198
 3154              	L202:
1895:../../MMI/Resource/ABMLoader.c ****         }
1896:../../MMI/Resource/ABMLoader.c ****         else
1897:../../MMI/Resource/ABMLoader.c ****         {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 76


1898:../../MMI/Resource/ABMLoader.c ****             return 0;
 3156              	LM331:
 3157 1493 C745D400 		movl	$0, -44(%ebp)
 3157      000000
 3158 149a E9480100 		jmp	L195
 3158      00
 3160              	LM332:
 3161              	L198:
 3162 149f 8D45DC   		leal	-36(%ebp), %eax
 3163              	LBE22:
 3164 14a2 FF00     		incl	(%eax)
 3165 14a4 E923FFFF 		jmp	L196
 3165      FF
 3166              	L197:
1899:../../MMI/Resource/ABMLoader.c ****         }
1900:../../MMI/Resource/ABMLoader.c ****     } /* for (i = 0; i < normal_color_cnt; i++) */ 
1901:../../MMI/Resource/ABMLoader.c **** 
1902:../../MMI/Resource/ABMLoader.c ****     /* flush buffer to align to 2-bytes */
1903:../../MMI/Resource/ABMLoader.c ****     ab2_bs_flush(&os);
 3168              	LM333:
 3169 14a9 8D45E8   		leal	-24(%ebp), %eax
 3170 14ac 890424   		movl	%eax, (%esp)
 3171 14af E86EF9FF 		call	_ab2_bs_flush
 3171      FF
1904:../../MMI/Resource/ABMLoader.c **** 
1905:../../MMI/Resource/ABMLoader.c ****     /* align alpha color palette ptr to 4 bytes alignment in palette color format: 8888 */
1906:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_palette_bpp == 24)
 3173              	LM334:
 3174 14b4 8B450C   		movl	12(%ebp), %eax
 3175 14b7 83B83C74 		cmpl	$24, 1537084(%eax)
 3175      170018
 3176 14be 750C     		jne	L204
1907:../../MMI/Resource/ABMLoader.c ****     {
1908:../../MMI/Resource/ABMLoader.c ****         os.mem_ptr = ((U8 *)(((U32)(os.mem_ptr) + 3) & ~0x3));
 3178              	LM335:
 3179 14c0 8B45E8   		movl	-24(%ebp), %eax
 3180 14c3 83C003   		addl	$3, %eax
 3181 14c6 83E0FC   		andl	$-4, %eax
 3182 14c9 8945E8   		movl	%eax, -24(%ebp)
 3183              	L204:
 3184 14cc 90       		nop
1909:../../MMI/Resource/ABMLoader.c ****     }
1910:../../MMI/Resource/ABMLoader.c ****     
1911:../../MMI/Resource/ABMLoader.c ****     for (; i < normal_color_cnt + alpha_color_cnt; i++)
 3186              	LM336:
 3187              	L205:
 3188 14cd 8B45E0   		movl	-32(%ebp), %eax
 3189 14d0 0345E4   		addl	-28(%ebp), %eax
 3190 14d3 3945DC   		cmpl	%eax, -36(%ebp)
 3191 14d6 7205     		jb	L208
 3192 14d8 E9EA0000 		jmp	L206
 3192      00
 3193              	L208:
1912:../../MMI/Resource/ABMLoader.c ****     {
1913:../../MMI/Resource/ABMLoader.c ****         mycolor color = ab2enc_color_preprocess(abm_context->color_idx_tab.color_table[i], abm_cont
 3195              	LM337:
 3196              	LBB23:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 77


 3197 14dd 8B450C   		movl	12(%ebp), %eax
 3198 14e0 89442404 		movl	%eax, 4(%esp)
 3199 14e4 8B550C   		movl	12(%ebp), %edx
 3200 14e7 8B45DC   		movl	-36(%ebp), %eax
 3201 14ea 8B848234 		movl	1076(%edx,%eax,4), %eax
 3201      040000
 3202 14f1 890424   		movl	%eax, (%esp)
 3203 14f4 E867F9FF 		call	_ab2enc_color_preprocess
 3203      FF
 3204 14f9 8945D8   		movl	%eax, -40(%ebp)
1914:../../MMI/Resource/ABMLoader.c ****         
1915:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_palette_bpp == 16)
 3206              	LM338:
 3207 14fc 8B450C   		movl	12(%ebp), %eax
 3208 14ff 83B83C74 		cmpl	$16, 1537084(%eax)
 3208      170010
 3209 1506 7566     		jne	L209
1916:../../MMI/Resource/ABMLoader.c ****         {   
1917:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, ARGB8888_TO_RGB16(color), 16);
 3211              	LM339:
 3212 1508 C7442408 		movl	$16, 8(%esp)
 3212      10000000 
 3213 1510 8B45D8   		movl	-40(%ebp), %eax
 3214 1513 C1E008   		sall	$8, %eax
 3215 1516 C1E818   		shrl	$24, %eax
 3216 1519 C1E803   		shrl	$3, %eax
 3217 151c 89C2     		movl	%eax, %edx
 3218 151e C1E20B   		sall	$11, %edx
 3219 1521 8B45D8   		movl	-40(%ebp), %eax
 3220 1524 C1E010   		sall	$16, %eax
 3221 1527 C1E818   		shrl	$24, %eax
 3222 152a C1E802   		shrl	$2, %eax
 3223 152d C1E005   		sall	$5, %eax
 3224 1530 09C2     		orl	%eax, %edx
 3225 1532 8B45D8   		movl	-40(%ebp), %eax
 3226 1535 C1E018   		sall	$24, %eax
 3227 1538 C1E818   		shrl	$24, %eax
 3228 153b C1E803   		shrl	$3, %eax
 3229 153e 09D0     		orl	%edx, %eax
 3230 1540 89442404 		movl	%eax, 4(%esp)
 3231 1544 8D45E8   		leal	-24(%ebp), %eax
 3232 1547 890424   		movl	%eax, (%esp)
 3233 154a E8601600 		call	_ab2_bs_write
 3233      00
1918:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, A_OF_ARGB8888(color), 8);
 3235              	LM340:
 3236 154f C7442408 		movl	$8, 8(%esp)
 3236      08000000 
 3237 1557 8B45D8   		movl	-40(%ebp), %eax
 3238 155a C1E818   		shrl	$24, %eax
 3239 155d 89442404 		movl	%eax, 4(%esp)
 3240 1561 8D45E8   		leal	-24(%ebp), %eax
 3241 1564 890424   		movl	%eax, (%esp)
 3242 1567 E8431600 		call	_ab2_bs_write
 3242      00
 3243 156c EB4F     		jmp	L207
 3244              	L209:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 78


1919:../../MMI/Resource/ABMLoader.c ****         }
1920:../../MMI/Resource/ABMLoader.c ****         else if (abm_context->abm_palette_bpp == 24)
 3246              	LM341:
 3247 156e 8B450C   		movl	12(%ebp), %eax
 3248 1571 83B83C74 		cmpl	$24, 1537084(%eax)
 3248      170018
 3249 1578 753A     		jne	L211
1921:../../MMI/Resource/ABMLoader.c ****         {
1922:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, color & 0xffff, 16);
 3251              	LM342:
 3252 157a C7442408 		movl	$16, 8(%esp)
 3252      10000000 
 3253 1582 0FB745D8 		movzwl	-40(%ebp),%eax
 3254 1586 89442404 		movl	%eax, 4(%esp)
 3255 158a 8D45E8   		leal	-24(%ebp), %eax
 3256 158d 890424   		movl	%eax, (%esp)
 3257 1590 E81A1600 		call	_ab2_bs_write
 3257      00
1923:../../MMI/Resource/ABMLoader.c ****             ab2_bs_write(&os, color >> 16, 16);
 3259              	LM343:
 3260 1595 C7442408 		movl	$16, 8(%esp)
 3260      10000000 
 3261 159d 8B45D8   		movl	-40(%ebp), %eax
 3262 15a0 C1E810   		shrl	$16, %eax
 3263 15a3 89442404 		movl	%eax, 4(%esp)
 3264 15a7 8D45E8   		leal	-24(%ebp), %eax
 3265 15aa 890424   		movl	%eax, (%esp)
 3266 15ad E8FD1500 		call	_ab2_bs_write
 3266      00
 3267 15b2 EB09     		jmp	L207
 3268              	L211:
1924:../../MMI/Resource/ABMLoader.c ****         }
1925:../../MMI/Resource/ABMLoader.c ****         else
1926:../../MMI/Resource/ABMLoader.c ****         {
1927:../../MMI/Resource/ABMLoader.c ****             return 0;
 3270              	LM344:
 3271 15b4 C745D400 		movl	$0, -44(%ebp)
 3271      000000
 3272 15bb EB2A     		jmp	L195
 3274              	LM345:
 3275              	L207:
 3276 15bd 8D45DC   		leal	-36(%ebp), %eax
 3277              	LBE23:
 3278 15c0 FF00     		incl	(%eax)
 3279 15c2 E906FFFF 		jmp	L205
 3279      FF
 3280              	L206:
1928:../../MMI/Resource/ABMLoader.c ****         }
1929:../../MMI/Resource/ABMLoader.c ****     } /* for (; i < normal_color_cnt + alpha_color_cnt; i++) */
1930:../../MMI/Resource/ABMLoader.c ****     
1931:../../MMI/Resource/ABMLoader.c ****     /* align to 2-bytes */
1932:../../MMI/Resource/ABMLoader.c ****     ab2_bs_flush(&os);
 3282              	LM346:
 3283 15c7 8D45E8   		leal	-24(%ebp), %eax
 3284 15ca 890424   		movl	%eax, (%esp)
 3285 15cd E850F8FF 		call	_ab2_bs_flush
 3285      FF
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 79


1933:../../MMI/Resource/ABMLoader.c **** 
1934:../../MMI/Resource/ABMLoader.c ****     return ab2_bs_offset(&os, mem_ptr);
 3287              	LM347:
 3288 15d2 8B4508   		movl	8(%ebp), %eax
 3289 15d5 89442404 		movl	%eax, 4(%esp)
 3290 15d9 8D45E8   		leal	-24(%ebp), %eax
 3291 15dc 890424   		movl	%eax, (%esp)
 3292 15df E83C1600 		call	_ab2_bs_offset
 3292      00
 3293 15e4 8945D4   		movl	%eax, -44(%ebp)
1935:../../MMI/Resource/ABMLoader.c **** }
 3295              	LM348:
 3296              	L195:
 3297              	LBE21:
 3298 15e7 8B45D4   		movl	-44(%ebp), %eax
 3299 15ea C9       		leave
 3300 15eb C3       		ret
 3313              	Lscope20:
 3319              	_ab2enc_rle_encode_body:
1936:../../MMI/Resource/ABMLoader.c **** 
1937:../../MMI/Resource/ABMLoader.c **** 
1938:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
1939:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
1940:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_rle_encode_body
1941:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
1942:../../MMI/Resource/ABMLoader.c ****  *  Encode body of ABM v2 image by RLE
1943:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
1944:../../MMI/Resource/ABMLoader.c ****  *  mem_ptr         [OUT]    buffer to write header
1945:../../MMI/Resource/ABMLoader.c ****  * RETURNS
1946:../../MMI/Resource/ABMLoader.c ****  *  Return the bytes written. If error, it will return 0
1947:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
1948:../../MMI/Resource/ABMLoader.c **** static U32 ab2enc_rle_encode_body(U8 *mem_ptr, ABM_Context * abm_context)
1949:../../MMI/Resource/ABMLoader.c **** {
 3321              	LM349:
 3322 15ec 55       		pushl	%ebp
 3323 15ed 89E5     		movl	%esp, %ebp
 3324 15ef 81EC9800 		subl	$152, %esp
 3324      0000
1950:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1951:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
1952:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1953:../../MMI/Resource/ABMLoader.c ****     ab2_bs_struct os;
1954:../../MMI/Resource/ABMLoader.c ****     
1955:../../MMI/Resource/ABMLoader.c ****     U32 total_color_cnt;
1956:../../MMI/Resource/ABMLoader.c ****     U32 color_idx_bits;
1957:../../MMI/Resource/ABMLoader.c ****     U32 min_repeat_cnt;
1958:../../MMI/Resource/ABMLoader.c ****     
1959:../../MMI/Resource/ABMLoader.c ****     U32 last_color_idx;
1960:../../MMI/Resource/ABMLoader.c ****     U32 counter;
1961:../../MMI/Resource/ABMLoader.c ****     
1962:../../MMI/Resource/ABMLoader.c ****     U32 x0 = abm_context->abm_enc.x1;
 3326              	LM350:
 3327              	LBB24:
 3328 15f5 8B450C   		movl	12(%ebp), %eax
 3329 15f8 8B801804 		movl	1048(%eax), %eax
 3329      0000
 3330 15fe 8945D0   		movl	%eax, -48(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 80


1963:../../MMI/Resource/ABMLoader.c ****     U32 y0 = abm_context->abm_enc.y1;
 3332              	LM351:
 3333 1601 8B450C   		movl	12(%ebp), %eax
 3334 1604 8B801C04 		movl	1052(%eax), %eax
 3334      0000
 3335 160a 8945CC   		movl	%eax, -52(%ebp)
1964:../../MMI/Resource/ABMLoader.c ****     U32 x1 = abm_context->abm_enc.x2;
 3337              	LM352:
 3338 160d 8B450C   		movl	12(%ebp), %eax
 3339 1610 8B802004 		movl	1056(%eax), %eax
 3339      0000
 3340 1616 8945C8   		movl	%eax, -56(%ebp)
1965:../../MMI/Resource/ABMLoader.c ****     U32 y1 = abm_context->abm_enc.y2;
 3342              	LM353:
 3343 1619 8B450C   		movl	12(%ebp), %eax
 3344 161c 8B802404 		movl	1060(%eax), %eax
 3344      0000
 3345 1622 8945C4   		movl	%eax, -60(%ebp)
1966:../../MMI/Resource/ABMLoader.c ****     
1967:../../MMI/Resource/ABMLoader.c ****     U32 discount_start_x, discount_start_y;
1968:../../MMI/Resource/ABMLoader.c ****     U32 discount_sure;
1969:../../MMI/Resource/ABMLoader.c ****     U32 discount_cnt;
1970:../../MMI/Resource/ABMLoader.c **** 
1971:../../MMI/Resource/ABMLoader.c ****     U32 i, j;
1972:../../MMI/Resource/ABMLoader.c **** 
1973:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1974:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
1975:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
1976:../../MMI/Resource/ABMLoader.c ****     
1977:../../MMI/Resource/ABMLoader.c ****     /*
1978:../../MMI/Resource/ABMLoader.c ****      * prepare encoded data
1979:../../MMI/Resource/ABMLoader.c ****      */
1980:../../MMI/Resource/ABMLoader.c ****     ab2_bs_init(&os, mem_ptr);
 3347              	LM354:
 3348 1625 8B4508   		movl	8(%ebp), %eax
 3349 1628 89442404 		movl	%eax, 4(%esp)
 3350 162c 8D45E8   		leal	-24(%ebp), %eax
 3351 162f 890424   		movl	%eax, (%esp)
 3352 1632 E8571500 		call	_ab2_bs_init
 3352      00
1981:../../MMI/Resource/ABMLoader.c **** 
1982:../../MMI/Resource/ABMLoader.c ****     /* 1 for transparent color */
1983:../../MMI/Resource/ABMLoader.c ****     /* caculate the color index bits and the threshole of repeat number*/
1984:../../MMI/Resource/ABMLoader.c ****     total_color_cnt = abm_context->color_idx_tab.color_num + 1;
 3354              	LM355:
 3355 1637 8B450C   		movl	12(%ebp), %eax
 3356 163a 8B803474 		movl	1537076(%eax), %eax
 3356      1700
 3357 1640 40       		incl	%eax
 3358 1641 8945E4   		movl	%eax, -28(%ebp)
1985:../../MMI/Resource/ABMLoader.c ****     color_idx_bits  = log2_ceiling(total_color_cnt);
 3360              	LM356:
 3361 1644 8B45E4   		movl	-28(%ebp), %eax
 3362 1647 890424   		movl	%eax, (%esp)
 3363 164a E89FF7FF 		call	_log2_ceiling
 3363      FF
 3364 164f 8945E0   		movl	%eax, -32(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 81


1986:../../MMI/Resource/ABMLoader.c ****     min_repeat_cnt  = 1 + ((8 + (color_idx_bits - 1)) / color_idx_bits);
 3366              	LM357:
 3367 1652 8B55E0   		movl	-32(%ebp), %edx
 3368 1655 83C207   		addl	$7, %edx
 3369 1658 8D45E0   		leal	-32(%ebp), %eax
 3370 165b 894594   		movl	%eax, -108(%ebp)
 3371 165e 89D0     		movl	%edx, %eax
 3372 1660 8B4D94   		movl	-108(%ebp), %ecx
 3373 1663 BA000000 		movl	$0, %edx
 3373      00
 3374 1668 F731     		divl	(%ecx)
 3375 166a 894594   		movl	%eax, -108(%ebp)
 3376 166d 8B4594   		movl	-108(%ebp), %eax
 3377 1670 40       		incl	%eax
 3378 1671 8945DC   		movl	%eax, -36(%ebp)
1987:../../MMI/Resource/ABMLoader.c **** 
1988:../../MMI/Resource/ABMLoader.c ****     /*
1989:../../MMI/Resource/ABMLoader.c ****      * start to encode RLE body
1990:../../MMI/Resource/ABMLoader.c ****      */
1991:../../MMI/Resource/ABMLoader.c ****     last_color_idx = GDI_IMAGE_AB2_INVALID_COLOR_IDX;
 3380              	LM358:
 3381 1674 C745D8FF 		movl	$65535, -40(%ebp)
 3381      FF0000
1992:../../MMI/Resource/ABMLoader.c ****     counter = 0;
 3383              	LM359:
 3384 167b C745D400 		movl	$0, -44(%ebp)
 3384      000000
1993:../../MMI/Resource/ABMLoader.c **** 
1994:../../MMI/Resource/ABMLoader.c ****     discount_start_x    = x0;
 3386              	LM360:
 3387 1682 8B45D0   		movl	-48(%ebp), %eax
 3388 1685 8945C0   		movl	%eax, -64(%ebp)
1995:../../MMI/Resource/ABMLoader.c ****     discount_start_y    = y0;
 3390              	LM361:
 3391 1688 8B45CC   		movl	-52(%ebp), %eax
 3392 168b 8945BC   		movl	%eax, -68(%ebp)
1996:../../MMI/Resource/ABMLoader.c ****     discount_sure       = 0;
 3394              	LM362:
 3395 168e C745B800 		movl	$0, -72(%ebp)
 3395      000000
1997:../../MMI/Resource/ABMLoader.c ****     discount_cnt        = 0;
 3397              	LM363:
 3398 1695 C745B400 		movl	$0, -76(%ebp)
 3398      000000
1998:../../MMI/Resource/ABMLoader.c **** 
1999:../../MMI/Resource/ABMLoader.c ****     /* for all image pixels */
2000:../../MMI/Resource/ABMLoader.c ****     for (j = y0; j <= y1; j++)
 3400              	LM364:
 3401 169c 8B45CC   		movl	-52(%ebp), %eax
 3402 169f 8945AC   		movl	%eax, -84(%ebp)
 3403              	L214:
 3404 16a2 8B45AC   		movl	-84(%ebp), %eax
 3405 16a5 3B45C4   		cmpl	-60(%ebp), %eax
 3406 16a8 7605     		jbe	L217
 3407 16aa E9480100 		jmp	L215
 3407      00
 3408              	L217:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 82


2001:../../MMI/Resource/ABMLoader.c ****     {
2002:../../MMI/Resource/ABMLoader.c ****         for (i = x0; i <= x1; i++)
 3410              	LM365:
 3411 16af 8B45D0   		movl	-48(%ebp), %eax
 3412 16b2 8945B0   		movl	%eax, -80(%ebp)
 3413              	L218:
 3414 16b5 8B45B0   		movl	-80(%ebp), %eax
 3415 16b8 3B45C8   		cmpl	-56(%ebp), %eax
 3416 16bb 7605     		jbe	L221
 3417 16bd E92B0100 		jmp	L216
 3417      00
 3418              	L221:
2003:../../MMI/Resource/ABMLoader.c ****         {
2004:../../MMI/Resource/ABMLoader.c ****             U32 color_idx = ab2enc_get_img_color_idx(i, j, abm_context);
 3420              	LM366:
 3421              	LBB25:
 3422 16c2 8B450C   		movl	12(%ebp), %eax
 3423 16c5 89442408 		movl	%eax, 8(%esp)
 3424 16c9 8B45AC   		movl	-84(%ebp), %eax
 3425 16cc 89442404 		movl	%eax, 4(%esp)
 3426 16d0 8B45B0   		movl	-80(%ebp), %eax
 3427 16d3 890424   		movl	%eax, (%esp)
 3428 16d6 E8541500 		call	_ab2enc_get_img_color_idx
 3428      00
 3429 16db 8945A8   		movl	%eax, -88(%ebp)
2005:../../MMI/Resource/ABMLoader.c ****             if (color_idx != last_color_idx)
 3431              	LM367:
 3432 16de 8B45A8   		movl	-88(%ebp), %eax
 3433 16e1 3B45D8   		cmpl	-40(%ebp), %eax
 3434 16e4 0F84F400 		je	L222
 3434      0000
2006:../../MMI/Resource/ABMLoader.c ****             {
2007:../../MMI/Resource/ABMLoader.c ****                 /* discontinue at current position */
2008:../../MMI/Resource/ABMLoader.c ****                 if (counter < min_repeat_cnt)
 3436              	LM368:
 3437 16ea 8B45D4   		movl	-44(%ebp), %eax
 3438 16ed 3B45DC   		cmpl	-36(%ebp), %eax
 3439 16f0 731A     		jae	L223
2009:../../MMI/Resource/ABMLoader.c ****                 {
2010:../../MMI/Resource/ABMLoader.c ****                     /* repeat pixels is less than threshole, 
2011:../../MMI/Resource/ABMLoader.c ****                      * counted into discountinue pixels */
2012:../../MMI/Resource/ABMLoader.c ****                     discount_sure = (discount_cnt != 0);
 3441              	LM369:
 3442 16f2 837DB400 		cmpl	$0, -76(%ebp)
 3443 16f6 0F95C0   		setne	%al
 3444 16f9 0FB6C0   		movzbl	%al, %eax
 3445 16fc 8945B8   		movl	%eax, -72(%ebp)
2013:../../MMI/Resource/ABMLoader.c ****                     discount_cnt += counter;
 3447              	LM370:
 3448 16ff 8B55D4   		movl	-44(%ebp), %edx
 3449 1702 8D45B4   		leal	-76(%ebp), %eax
 3450 1705 0110     		addl	%edx, (%eax)
 3451 1707 E9C30000 		jmp	L224
 3451      00
 3452              	L223:
2014:../../MMI/Resource/ABMLoader.c ****                 }
2015:../../MMI/Resource/ABMLoader.c ****                 else
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 83


2016:../../MMI/Resource/ABMLoader.c ****                 {
2017:../../MMI/Resource/ABMLoader.c ****                     /* output discount pixels if needed */
2018:../../MMI/Resource/ABMLoader.c ****                     if (discount_cnt > 0)
 3454              	LM371:
 3455 170c 837DB400 		cmpl	$0, -76(%ebp)
 3456 1710 0F848000 		je	L225
 3456      0000
2019:../../MMI/Resource/ABMLoader.c ****                     {
2020:../../MMI/Resource/ABMLoader.c ****                         if (discount_sure)
 3458              	LM372:
 3459 1716 837DB800 		cmpl	$0, -72(%ebp)
 3460 171a 7430     		je	L226
2021:../../MMI/Resource/ABMLoader.c ****                         {
2022:../../MMI/Resource/ABMLoader.c ****                             ab2_encode_rle_discount_code(
 3462              	LM373:
 3463 171c 8B450C   		movl	12(%ebp), %eax
 3464 171f 89442414 		movl	%eax, 20(%esp)
 3465 1723 8B45B4   		movl	-76(%ebp), %eax
 3466 1726 89442410 		movl	%eax, 16(%esp)
 3467 172a 8B45E0   		movl	-32(%ebp), %eax
 3468 172d 8944240C 		movl	%eax, 12(%esp)
 3469 1731 8B45BC   		movl	-68(%ebp), %eax
 3470 1734 89442408 		movl	%eax, 8(%esp)
 3471 1738 8B45C0   		movl	-64(%ebp), %eax
 3472 173b 89442404 		movl	%eax, 4(%esp)
 3473 173f 8D45E8   		leal	-24(%ebp), %eax
 3474 1742 890424   		movl	%eax, (%esp)
 3475 1745 E849F9FF 		call	_ab2_encode_rle_discount_code
 3475      FF
 3476 174a EB3C     		jmp	L227
 3477              	L226:
2023:../../MMI/Resource/ABMLoader.c ****                                 &os, 
2024:../../MMI/Resource/ABMLoader.c ****                                 discount_start_x,
2025:../../MMI/Resource/ABMLoader.c ****                                 discount_start_y,
2026:../../MMI/Resource/ABMLoader.c ****                                 color_idx_bits,
2027:../../MMI/Resource/ABMLoader.c ****                                 discount_cnt,
2028:../../MMI/Resource/ABMLoader.c ****                                 abm_context);
2029:../../MMI/Resource/ABMLoader.c ****                         }
2030:../../MMI/Resource/ABMLoader.c ****                         else
2031:../../MMI/Resource/ABMLoader.c ****                         {
2032:../../MMI/Resource/ABMLoader.c ****                             U32 iscount_color_index = 
 3479              	LM374:
 3480              	LBB26:
 3481 174c 8B450C   		movl	12(%ebp), %eax
 3482 174f 89442408 		movl	%eax, 8(%esp)
 3483 1753 8B45BC   		movl	-68(%ebp), %eax
 3484 1756 89442404 		movl	%eax, 4(%esp)
 3485 175a 8B45C0   		movl	-64(%ebp), %eax
 3486 175d 890424   		movl	%eax, (%esp)
 3487 1760 E8CA1400 		call	_ab2enc_get_img_color_idx
 3487      00
 3488 1765 8945A4   		movl	%eax, -92(%ebp)
2033:../../MMI/Resource/ABMLoader.c ****                                 ab2enc_get_img_color_idx(
2034:../../MMI/Resource/ABMLoader.c ****                                     discount_start_x, 
2035:../../MMI/Resource/ABMLoader.c ****                                     discount_start_y,
2036:../../MMI/Resource/ABMLoader.c ****                                     abm_context);
2037:../../MMI/Resource/ABMLoader.c ****                             ab2_encode_rle_repeat_code(
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 84


 3490              	LM375:
 3491 1768 8B45B4   		movl	-76(%ebp), %eax
 3492 176b 8944240C 		movl	%eax, 12(%esp)
 3493 176f 8B45E0   		movl	-32(%ebp), %eax
 3494 1772 89442408 		movl	%eax, 8(%esp)
 3495 1776 8B45A4   		movl	-92(%ebp), %eax
 3496 1779 89442404 		movl	%eax, 4(%esp)
 3497 177d 8D45E8   		leal	-24(%ebp), %eax
 3498 1780 890424   		movl	%eax, (%esp)
 3499 1783 E87AF8FF 		call	_ab2_encode_rle_repeat_code
 3499      FF
 3500              	L227:
2038:../../MMI/Resource/ABMLoader.c ****                                 &os, 
2039:../../MMI/Resource/ABMLoader.c ****                                 iscount_color_index,
2040:../../MMI/Resource/ABMLoader.c ****                                 color_idx_bits,
2041:../../MMI/Resource/ABMLoader.c ****                                 discount_cnt);
2042:../../MMI/Resource/ABMLoader.c ****                         }
2043:../../MMI/Resource/ABMLoader.c **** 
2044:../../MMI/Resource/ABMLoader.c ****                         discount_sure   = 0;
 3502              	LM376:
 3503              	LBE26:
 3504 1788 C745B800 		movl	$0, -72(%ebp)
 3504      000000
2045:../../MMI/Resource/ABMLoader.c ****                         discount_cnt    = 0;
 3506              	LM377:
 3507 178f C745B400 		movl	$0, -76(%ebp)
 3507      000000
 3508              	L225:
2046:../../MMI/Resource/ABMLoader.c ****                     }
2047:../../MMI/Resource/ABMLoader.c **** 
2048:../../MMI/Resource/ABMLoader.c ****                     /* output repeat pixels if needed */
2049:../../MMI/Resource/ABMLoader.c ****                     if (counter > 0)
 3510              	LM378:
 3511 1796 837DD400 		cmpl	$0, -44(%ebp)
 3512 179a 7427     		je	L228
2050:../../MMI/Resource/ABMLoader.c ****                     {
2051:../../MMI/Resource/ABMLoader.c ****                         ab2_encode_rle_repeat_code(
 3514              	LM379:
 3515 179c 8B45D4   		movl	-44(%ebp), %eax
 3516 179f 8944240C 		movl	%eax, 12(%esp)
 3517 17a3 8B45E0   		movl	-32(%ebp), %eax
 3518 17a6 89442408 		movl	%eax, 8(%esp)
 3519 17aa 8B45D8   		movl	-40(%ebp), %eax
 3520 17ad 89442404 		movl	%eax, 4(%esp)
 3521 17b1 8D45E8   		leal	-24(%ebp), %eax
 3522 17b4 890424   		movl	%eax, (%esp)
 3523 17b7 E846F8FF 		call	_ab2_encode_rle_repeat_code
 3523      FF
2052:../../MMI/Resource/ABMLoader.c ****                             &os,
2053:../../MMI/Resource/ABMLoader.c ****                             last_color_idx,
2054:../../MMI/Resource/ABMLoader.c ****                             color_idx_bits,
2055:../../MMI/Resource/ABMLoader.c ****                             counter);
2056:../../MMI/Resource/ABMLoader.c **** 
2057:../../MMI/Resource/ABMLoader.c ****                         counter = 0;
 3525              	LM380:
 3526 17bc C745D400 		movl	$0, -44(%ebp)
 3526      000000
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 85


 3527              	L228:
2058:../../MMI/Resource/ABMLoader.c ****                     }
2059:../../MMI/Resource/ABMLoader.c **** 
2060:../../MMI/Resource/ABMLoader.c ****                     discount_start_x = i;
 3529              	LM381:
 3530 17c3 8B45B0   		movl	-80(%ebp), %eax
 3531 17c6 8945C0   		movl	%eax, -64(%ebp)
2061:../../MMI/Resource/ABMLoader.c ****                     discount_start_y = j;
 3533              	LM382:
 3534 17c9 8B45AC   		movl	-84(%ebp), %eax
 3535 17cc 8945BC   		movl	%eax, -68(%ebp)
 3536              	L224:
2062:../../MMI/Resource/ABMLoader.c ****                 }
2063:../../MMI/Resource/ABMLoader.c **** 
2064:../../MMI/Resource/ABMLoader.c ****                 last_color_idx = color_idx;
 3538              	LM383:
 3539 17cf 8B45A8   		movl	-88(%ebp), %eax
 3540 17d2 8945D8   		movl	%eax, -40(%ebp)
2065:../../MMI/Resource/ABMLoader.c ****                 counter = 1;
 3542              	LM384:
 3543 17d5 C745D401 		movl	$1, -44(%ebp)
 3543      000000
 3544 17dc EB05     		jmp	L220
 3545              	L222:
2066:../../MMI/Resource/ABMLoader.c ****             }
2067:../../MMI/Resource/ABMLoader.c ****             else
2068:../../MMI/Resource/ABMLoader.c ****             {
2069:../../MMI/Resource/ABMLoader.c ****                 /* same as previous pixel color */
2070:../../MMI/Resource/ABMLoader.c ****                 counter++;
 3547              	LM385:
 3548 17de 8D45D4   		leal	-44(%ebp), %eax
 3549 17e1 FF00     		incl	(%eax)
 3551              	LM386:
 3552              	L220:
 3553 17e3 8D45B0   		leal	-80(%ebp), %eax
 3554              	LBE25:
 3555 17e6 FF00     		incl	(%eax)
 3556 17e8 E9C8FEFF 		jmp	L218
 3556      FF
 3558              	LM387:
 3559              	L216:
 3560 17ed 8D45AC   		leal	-84(%ebp), %eax
 3561 17f0 FF00     		incl	(%eax)
 3562 17f2 E9ABFEFF 		jmp	L214
 3562      FF
 3563              	L215:
2071:../../MMI/Resource/ABMLoader.c ****             }
2072:../../MMI/Resource/ABMLoader.c ****         } /* for (i = x0; i <= x1; i++) */
2073:../../MMI/Resource/ABMLoader.c ****     } /* for(j = y0; j <= y1; j++) */
2074:../../MMI/Resource/ABMLoader.c **** 
2075:../../MMI/Resource/ABMLoader.c ****     /*
2076:../../MMI/Resource/ABMLoader.c ****      * Send the retail data
2077:../../MMI/Resource/ABMLoader.c ****      */
2078:../../MMI/Resource/ABMLoader.c ****     if (discount_cnt > 0)
 3565              	LM388:
 3566 17f7 837DB400 		cmpl	$0, -76(%ebp)
 3567 17fb 7445     		je	L230
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 86


2079:../../MMI/Resource/ABMLoader.c ****     {
2080:../../MMI/Resource/ABMLoader.c ****         if (counter < min_repeat_cnt)
 3569              	LM389:
 3570 17fd 8B45D4   		movl	-44(%ebp), %eax
 3571 1800 3B45DC   		cmpl	-36(%ebp), %eax
 3572 1803 730F     		jae	L231
2081:../../MMI/Resource/ABMLoader.c ****         {
2082:../../MMI/Resource/ABMLoader.c ****             discount_cnt += counter;
 3574              	LM390:
 3575 1805 8B55D4   		movl	-44(%ebp), %edx
 3576 1808 8D45B4   		leal	-76(%ebp), %eax
 3577 180b 0110     		addl	%edx, (%eax)
2083:../../MMI/Resource/ABMLoader.c ****             counter = 0;
 3579              	LM391:
 3580 180d C745D400 		movl	$0, -44(%ebp)
 3580      000000
 3581              	L231:
2084:../../MMI/Resource/ABMLoader.c ****         }
2085:../../MMI/Resource/ABMLoader.c ****         
2086:../../MMI/Resource/ABMLoader.c ****         ab2_encode_rle_discount_code(
 3583              	LM392:
 3584 1814 8B450C   		movl	12(%ebp), %eax
 3585 1817 89442414 		movl	%eax, 20(%esp)
 3586 181b 8B45B4   		movl	-76(%ebp), %eax
 3587 181e 89442410 		movl	%eax, 16(%esp)
 3588 1822 8B45E0   		movl	-32(%ebp), %eax
 3589 1825 8944240C 		movl	%eax, 12(%esp)
 3590 1829 8B45BC   		movl	-68(%ebp), %eax
 3591 182c 89442408 		movl	%eax, 8(%esp)
 3592 1830 8B45C0   		movl	-64(%ebp), %eax
 3593 1833 89442404 		movl	%eax, 4(%esp)
 3594 1837 8D45E8   		leal	-24(%ebp), %eax
 3595 183a 890424   		movl	%eax, (%esp)
 3596 183d E851F8FF 		call	_ab2_encode_rle_discount_code
 3596      FF
 3597              	L230:
2087:../../MMI/Resource/ABMLoader.c ****             &os,
2088:../../MMI/Resource/ABMLoader.c ****             discount_start_x,
2089:../../MMI/Resource/ABMLoader.c ****             discount_start_y,
2090:../../MMI/Resource/ABMLoader.c ****             color_idx_bits,
2091:../../MMI/Resource/ABMLoader.c ****             discount_cnt,
2092:../../MMI/Resource/ABMLoader.c ****             abm_context);
2093:../../MMI/Resource/ABMLoader.c ****     }
2094:../../MMI/Resource/ABMLoader.c **** 
2095:../../MMI/Resource/ABMLoader.c ****     if (counter > 0)
 3599              	LM393:
 3600 1842 837DD400 		cmpl	$0, -44(%ebp)
 3601 1846 7420     		je	L232
2096:../../MMI/Resource/ABMLoader.c ****     {
2097:../../MMI/Resource/ABMLoader.c ****         ab2_encode_rle_repeat_code(
 3603              	LM394:
 3604 1848 8B45D4   		movl	-44(%ebp), %eax
 3605 184b 8944240C 		movl	%eax, 12(%esp)
 3606 184f 8B45E0   		movl	-32(%ebp), %eax
 3607 1852 89442408 		movl	%eax, 8(%esp)
 3608 1856 8B45D8   		movl	-40(%ebp), %eax
 3609 1859 89442404 		movl	%eax, 4(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 87


 3610 185d 8D45E8   		leal	-24(%ebp), %eax
 3611 1860 890424   		movl	%eax, (%esp)
 3612 1863 E89AF7FF 		call	_ab2_encode_rle_repeat_code
 3612      FF
 3613              	L232:
2098:../../MMI/Resource/ABMLoader.c ****             &os,
2099:../../MMI/Resource/ABMLoader.c ****             last_color_idx,
2100:../../MMI/Resource/ABMLoader.c ****             color_idx_bits,
2101:../../MMI/Resource/ABMLoader.c ****             counter);
2102:../../MMI/Resource/ABMLoader.c ****     }
2103:../../MMI/Resource/ABMLoader.c **** 
2104:../../MMI/Resource/ABMLoader.c ****     /* flush all data of bitstream */
2105:../../MMI/Resource/ABMLoader.c ****     ab2_bs_flush(&os);
 3615              	LM395:
 3616 1868 8D45E8   		leal	-24(%ebp), %eax
 3617 186b 890424   		movl	%eax, (%esp)
 3618 186e E8AFF5FF 		call	_ab2_bs_flush
 3618      FF
2106:../../MMI/Resource/ABMLoader.c **** 
2107:../../MMI/Resource/ABMLoader.c ****     return ab2_bs_offset(&os, mem_ptr);
 3620              	LM396:
 3621 1873 8B4508   		movl	8(%ebp), %eax
 3622 1876 89442404 		movl	%eax, 4(%esp)
 3623 187a 8D45E8   		leal	-24(%ebp), %eax
 3624 187d 890424   		movl	%eax, (%esp)
 3625 1880 E89B1300 		call	_ab2_bs_offset
 3625      00
2108:../../MMI/Resource/ABMLoader.c **** }
 3627              	LM397:
 3628 1885 C9       		leave
 3629 1886 C3       		ret
 3630              	LBE24:
 3655              	Lscope21:
 3661              	_ab2enc_encode:
2109:../../MMI/Resource/ABMLoader.c **** 
2110:../../MMI/Resource/ABMLoader.c **** 
2111:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2112:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
2113:../../MMI/Resource/ABMLoader.c ****  *  ab2enc_encode
2114:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
2115:../../MMI/Resource/ABMLoader.c ****  *  ABM v2 encoder main routine.
2116:../../MMI/Resource/ABMLoader.c ****  *  Must prepare the image data and color table by calling 
2117:../../MMI/Resource/ABMLoader.c ****  *  abmenc_build_color_index_table() before.
2118:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
2119:../../MMI/Resource/ABMLoader.c ****  *  out_mem_p       [OUT] output memory pointer
2120:../../MMI/Resource/ABMLoader.c ****  * RETURNS
2121:../../MMI/Resource/ABMLoader.c ****  *  Total ABMv2 data size. If error, it will return 0xffffffff.
2122:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
2123:../../MMI/Resource/ABMLoader.c **** static U32 ab2enc_encode(U8* out_mem_p, ABM_Context * abm_context)
2124:../../MMI/Resource/ABMLoader.c **** {
 3663              	LM398:
 3664 1887 55       		pushl	%ebp
 3665 1888 89E5     		movl	%esp, %ebp
 3666 188a 83EC28   		subl	$40, %esp
2125:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2126:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
2127:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 88


2128:../../MMI/Resource/ABMLoader.c ****     U32 ab2_header_size = 0;
 3668              	LM399:
 3669              	LBB27:
 3670 188d C745FC00 		movl	$0, -4(%ebp)
 3670      000000
2129:../../MMI/Resource/ABMLoader.c ****     U32 rle_header_size = 0;
 3672              	LM400:
 3673 1894 C745F800 		movl	$0, -8(%ebp)
 3673      000000
2130:../../MMI/Resource/ABMLoader.c ****     U32 rle_body_size   = 0;
 3675              	LM401:
 3676 189b C745F400 		movl	$0, -12(%ebp)
 3676      000000
2131:../../MMI/Resource/ABMLoader.c ****     U32 ab2_total_size  = 0;
 3678              	LM402:
 3679 18a2 C745F000 		movl	$0, -16(%ebp)
 3679      000000
2132:../../MMI/Resource/ABMLoader.c ****     
2133:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2134:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2135:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2136:../../MMI/Resource/ABMLoader.c **** 
2137:../../MMI/Resource/ABMLoader.c ****     /* out of ABM limit, return a large size to prevent choosing ABM */
2138:../../MMI/Resource/ABMLoader.c ****     if (abm_context->color_idx_tab.color_num >= ABM_MAX_COLOR_NUM)
 3681              	LM403:
 3682 18a9 8B450C   		movl	12(%ebp), %eax
 3683 18ac 81B83474 		cmpl	$383999, 1537076(%eax)
 3683      1700FFDB 
 3683      0500
 3684 18b6 7E0C     		jle	L234
2139:../../MMI/Resource/ABMLoader.c ****     {
2140:../../MMI/Resource/ABMLoader.c ****         return 0xffffffff;
 3686              	LM404:
 3687 18b8 C745ECFF 		movl	$-1, -20(%ebp)
 3687      FFFFFF
 3688 18bf E9900000 		jmp	L233
 3688      00
 3689              	L234:
2141:../../MMI/Resource/ABMLoader.c ****     }
2142:../../MMI/Resource/ABMLoader.c **** 
2143:../../MMI/Resource/ABMLoader.c ****     /* write header */
2144:../../MMI/Resource/ABMLoader.c ****     ab2_header_size = ab2enc_encode_header(out_mem_p, abm_context);
 3691              	LM405:
 3692 18c4 8B450C   		movl	12(%ebp), %eax
 3693 18c7 89442404 		movl	%eax, 4(%esp)
 3694 18cb 8B4508   		movl	8(%ebp), %eax
 3695 18ce 890424   		movl	%eax, (%esp)
 3696 18d1 E80CF9FF 		call	_ab2enc_encode_header
 3696      FF
 3697 18d6 8945FC   		movl	%eax, -4(%ebp)
2145:../../MMI/Resource/ABMLoader.c ****     if (ab2_header_size == 0)
 3699              	LM406:
 3700 18d9 837DFC00 		cmpl	$0, -4(%ebp)
 3701 18dd 7509     		jne	L235
2146:../../MMI/Resource/ABMLoader.c ****     {
2147:../../MMI/Resource/ABMLoader.c ****         return 0xffffffff;
 3703              	LM407:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 89


 3704 18df C745ECFF 		movl	$-1, -20(%ebp)
 3704      FFFFFF
 3705 18e6 EB6C     		jmp	L233
 3706              	L235:
2148:../../MMI/Resource/ABMLoader.c ****     }
2149:../../MMI/Resource/ABMLoader.c ****     out_mem_p += ab2_header_size;
 3708              	LM408:
 3709 18e8 8B45FC   		movl	-4(%ebp), %eax
 3710 18eb 014508   		addl	%eax, 8(%ebp)
2150:../../MMI/Resource/ABMLoader.c **** 
2151:../../MMI/Resource/ABMLoader.c ****     /* write AB2 RLE header and color table */
2152:../../MMI/Resource/ABMLoader.c ****     rle_header_size = ab2enc_rle_encode_header(out_mem_p, abm_context);
 3712              	LM409:
 3713 18ee 8B450C   		movl	12(%ebp), %eax
 3714 18f1 89442404 		movl	%eax, 4(%esp)
 3715 18f5 8B4508   		movl	8(%ebp), %eax
 3716 18f8 890424   		movl	%eax, (%esp)
 3717 18fb E85AFAFF 		call	_ab2enc_rle_encode_header
 3717      FF
 3718 1900 8945F8   		movl	%eax, -8(%ebp)
2153:../../MMI/Resource/ABMLoader.c ****     if (rle_header_size == 0)
 3720              	LM410:
 3721 1903 837DF800 		cmpl	$0, -8(%ebp)
 3722 1907 7509     		jne	L236
2154:../../MMI/Resource/ABMLoader.c ****     {
2155:../../MMI/Resource/ABMLoader.c ****         return 0xffffffff;
 3724              	LM411:
 3725 1909 C745ECFF 		movl	$-1, -20(%ebp)
 3725      FFFFFF
 3726 1910 EB42     		jmp	L233
 3727              	L236:
2156:../../MMI/Resource/ABMLoader.c ****     }
2157:../../MMI/Resource/ABMLoader.c ****     out_mem_p += rle_header_size;
 3729              	LM412:
 3730 1912 8B45F8   		movl	-8(%ebp), %eax
 3731 1915 014508   		addl	%eax, 8(%ebp)
2158:../../MMI/Resource/ABMLoader.c **** 
2159:../../MMI/Resource/ABMLoader.c ****     /* write AB2 RLE body */
2160:../../MMI/Resource/ABMLoader.c ****     rle_body_size = ab2enc_rle_encode_body(out_mem_p, abm_context);
 3733              	LM413:
 3734 1918 8B450C   		movl	12(%ebp), %eax
 3735 191b 89442404 		movl	%eax, 4(%esp)
 3736 191f 8B4508   		movl	8(%ebp), %eax
 3737 1922 890424   		movl	%eax, (%esp)
 3738 1925 E8C2FCFF 		call	_ab2enc_rle_encode_body
 3738      FF
 3739 192a 8945F4   		movl	%eax, -12(%ebp)
2161:../../MMI/Resource/ABMLoader.c ****     if (rle_body_size == 0)
 3741              	LM414:
 3742 192d 837DF400 		cmpl	$0, -12(%ebp)
 3743 1931 7509     		jne	L237
2162:../../MMI/Resource/ABMLoader.c ****     {
2163:../../MMI/Resource/ABMLoader.c ****         return 0xffffffff;
 3745              	LM415:
 3746 1933 C745ECFF 		movl	$-1, -20(%ebp)
 3746      FFFFFF
 3747 193a EB18     		jmp	L233
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 90


 3748              	L237:
2164:../../MMI/Resource/ABMLoader.c ****     }
2165:../../MMI/Resource/ABMLoader.c ****     out_mem_p += rle_body_size;
 3750              	LM416:
 3751 193c 8B45F4   		movl	-12(%ebp), %eax
 3752 193f 014508   		addl	%eax, 8(%ebp)
2166:../../MMI/Resource/ABMLoader.c **** 
2167:../../MMI/Resource/ABMLoader.c **** 
2168:../../MMI/Resource/ABMLoader.c ****     ab2_total_size = ab2_header_size + rle_header_size + rle_body_size;
 3754              	LM417:
 3755 1942 8B45F8   		movl	-8(%ebp), %eax
 3756 1945 0345FC   		addl	-4(%ebp), %eax
 3757 1948 0345F4   		addl	-12(%ebp), %eax
 3758 194b 8945F0   		movl	%eax, -16(%ebp)
2169:../../MMI/Resource/ABMLoader.c **** 
2170:../../MMI/Resource/ABMLoader.c ****     return ab2_total_size;
 3760              	LM418:
 3761 194e 8B45F0   		movl	-16(%ebp), %eax
 3762 1951 8945EC   		movl	%eax, -20(%ebp)
2171:../../MMI/Resource/ABMLoader.c **** }
 3764              	LM419:
 3765              	L233:
 3766              	LBE27:
 3767 1954 8B45EC   		movl	-20(%ebp), %eax
 3768 1957 C9       		leave
 3769 1958 C3       		ret
 3776              	Lscope22:
 3782              	_abmenc_encode:
2172:../../MMI/Resource/ABMLoader.c **** 
2173:../../MMI/Resource/ABMLoader.c **** 
2174:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2175:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
2176:../../MMI/Resource/ABMLoader.c ****  *  abmenc_encode
2177:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
2178:../../MMI/Resource/ABMLoader.c ****  *  abm encoder main routine
2179:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
2180:../../MMI/Resource/ABMLoader.c ****  *  out_mem_p       [OUT] output memory pointer
2181:../../MMI/Resource/ABMLoader.c ****  * RETURNS
2182:../../MMI/Resource/ABMLoader.c ****  *  ABM data size
2183:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
2184:../../MMI/Resource/ABMLoader.c **** static U32 abmenc_encode(U8* out_mem_p, ABM_Context * abm_context)
2185:../../MMI/Resource/ABMLoader.c **** {
 3784              	LM420:
 3785 1959 55       		pushl	%ebp
 3786 195a 89E5     		movl	%esp, %ebp
 3787 195c 53       		pushl	%ebx
 3788 195d 81EC9400 		subl	$148, %esp
 3788      0000
2186:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2187:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
2188:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2189:../../MMI/Resource/ABMLoader.c ****     S32     x, y, w, h, bottom_right_off_w, bottom_right_off_h;
2190:../../MMI/Resource/ABMLoader.c ****     S32     bound_box_w, bound_box_h;
2191:../../MMI/Resource/ABMLoader.c ****     S32     line_padding_bytes;
2192:../../MMI/Resource/ABMLoader.c ****     U8      *img_p, *mem8_p;
2193:../../MMI/Resource/ABMLoader.c ****     U32     p;
2194:../../MMI/Resource/ABMLoader.c ****     U32     bpp;
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 91


2195:../../MMI/Resource/ABMLoader.c ****     U16     *mem16_p;
2196:../../MMI/Resource/ABMLoader.c ****     S32     normal_color_num, alpha_color_num, color_num;
2197:../../MMI/Resource/ABMLoader.c ****     S32     i;
2198:../../MMI/Resource/ABMLoader.c **** 
2199:../../MMI/Resource/ABMLoader.c ****     U32     abm_size;
2200:../../MMI/Resource/ABMLoader.c ****     U32     bmp_bpp;
2201:../../MMI/Resource/ABMLoader.c ****     mycolor c, color16;
2202:../../MMI/Resource/ABMLoader.c ****     mycolor a, r, g, b;
2203:../../MMI/Resource/ABMLoader.c ****     U32     bytes_per_pixel;
2204:../../MMI/Resource/ABMLoader.c **** 
2205:../../MMI/Resource/ABMLoader.c ****     U32     bitstream_padding_byte;
2206:../../MMI/Resource/ABMLoader.c **** 
2207:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2208:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2209:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2210:../../MMI/Resource/ABMLoader.c ****     w = abm_context->abm_enc.bmp_width;
 3790              	LM421:
 3791              	LBB28:
 3792 1963 8B450C   		movl	12(%ebp), %eax
 3793 1966 8B00     		movl	(%eax), %eax
 3794 1968 8945F0   		movl	%eax, -16(%ebp)
2211:../../MMI/Resource/ABMLoader.c ****     h = abm_context->abm_enc.bmp_height;   
 3796              	LM422:
 3797 196b 8B450C   		movl	12(%ebp), %eax
 3798 196e 8B4004   		movl	4(%eax), %eax
 3799 1971 8945EC   		movl	%eax, -20(%ebp)
2212:../../MMI/Resource/ABMLoader.c ****     
2213:../../MMI/Resource/ABMLoader.c ****     bmp_bpp = abm_context->abm_enc.bmp_bpp;
 3801              	LM423:
 3802 1974 8B450C   		movl	12(%ebp), %eax
 3803 1977 8B4008   		movl	8(%eax), %eax
 3804 197a 8945AC   		movl	%eax, -84(%ebp)
2214:../../MMI/Resource/ABMLoader.c ****     line_padding_bytes = abm_context->abm_enc.line_padding_bytes;
 3806              	LM424:
 3807 197d 8B450C   		movl	12(%ebp), %eax
 3808 1980 8B801404 		movl	1044(%eax), %eax
 3808      0000
 3809 1986 8945D8   		movl	%eax, -40(%ebp)
2215:../../MMI/Resource/ABMLoader.c **** 
2216:../../MMI/Resource/ABMLoader.c ****     /* out of ABM limit, return a large size to prevent choosing ABM */
2217:../../MMI/Resource/ABMLoader.c ****     if (abm_context->color_idx_tab.color_num >= ABM_MAX_COLOR_NUM)
 3811              	LM425:
 3812 1989 8B450C   		movl	12(%ebp), %eax
 3813 198c 81B83474 		cmpl	$383999, 1537076(%eax)
 3813      1700FFDB 
 3813      0500
 3814 1996 7E0F     		jle	L239
2218:../../MMI/Resource/ABMLoader.c ****     {
2219:../../MMI/Resource/ABMLoader.c ****         return 0xFFFFFFFF;
 3816              	LM426:
 3817 1998 C7857CFF 		movl	$-1, -132(%ebp)
 3817      FFFFFFFF 
 3817      FFFF
 3818 19a2 E9990400 		jmp	L238
 3818      00
 3819              	L239:
2220:../../MMI/Resource/ABMLoader.c ****     }
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 92


2221:../../MMI/Resource/ABMLoader.c **** 
2222:../../MMI/Resource/ABMLoader.c ****     color_num = abm_context->color_idx_tab.color_num + 1;                 /* 1 for transparent colo
 3821              	LM427:
 3822 19a7 8B450C   		movl	12(%ebp), %eax
 3823 19aa 8B803474 		movl	1537076(%eax), %eax
 3823      1700
 3824 19b0 40       		incl	%eax
 3825 19b1 8945B8   		movl	%eax, -72(%ebp)
2223:../../MMI/Resource/ABMLoader.c ****     normal_color_num = get_normal_color_num(abm_context) + 1;  /* 1 for transparent color 0 */
 3827              	LM428:
 3828 19b4 8B450C   		movl	12(%ebp), %eax
 3829 19b7 890424   		movl	%eax, (%esp)
 3830 19ba E84BE9FF 		call	_get_normal_color_num
 3830      FF
 3831 19bf 40       		incl	%eax
 3832 19c0 8945C0   		movl	%eax, -64(%ebp)
2224:../../MMI/Resource/ABMLoader.c ****     alpha_color_num = color_num - normal_color_num;
 3834              	LM429:
 3835 19c3 8B55C0   		movl	-64(%ebp), %edx
 3836 19c6 8B45B8   		movl	-72(%ebp), %eax
 3837 19c9 29D0     		subl	%edx, %eax
 3838 19cb 8945BC   		movl	%eax, -68(%ebp)
2225:../../MMI/Resource/ABMLoader.c ****     bpp = log2_ceiling(color_num);
 3840              	LM430:
 3841 19ce 8B45B8   		movl	-72(%ebp), %eax
 3842 19d1 890424   		movl	%eax, (%esp)
 3843 19d4 E815F4FF 		call	_log2_ceiling
 3843      FF
 3844 19d9 8945C8   		movl	%eax, -56(%ebp)
2226:../../MMI/Resource/ABMLoader.c ****     
2227:../../MMI/Resource/ABMLoader.c ****     /* 
2228:../../MMI/Resource/ABMLoader.c ****      * fill the ABM 12-byte header 
2229:../../MMI/Resource/ABMLoader.c ****      */
2230:../../MMI/Resource/ABMLoader.c ****     mem16_p = (U16*)out_mem_p;
 3846              	LM431:
 3847 19dc 8B4508   		movl	8(%ebp), %eax
 3848 19df 8945C4   		movl	%eax, -60(%ebp)
2231:../../MMI/Resource/ABMLoader.c ****     mem16_p[0] = w;    
 3850              	LM432:
 3851 19e2 8B55C4   		movl	-60(%ebp), %edx
 3852 19e5 8B45F0   		movl	-16(%ebp), %eax
 3853 19e8 668902   		movw	%ax, (%edx)
2232:../../MMI/Resource/ABMLoader.c ****     mem16_p[1] = h;
 3855              	LM433:
 3856 19eb 8B55C4   		movl	-60(%ebp), %edx
 3857 19ee 83C202   		addl	$2, %edx
 3858 19f1 8B45EC   		movl	-20(%ebp), %eax
 3859 19f4 668902   		movw	%ax, (%edx)
2233:../../MMI/Resource/ABMLoader.c **** 
2234:../../MMI/Resource/ABMLoader.c ****     /* store fully opaque flag on the width MSB */
2235:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_enc.is_fully_opaque)
 3861              	LM434:
 3862 19f7 8B450C   		movl	12(%ebp), %eax
 3863 19fa 83B83004 		cmpl	$0, 1072(%eax)
 3863      000000
 3864 1a01 7411     		je	L240
2236:../../MMI/Resource/ABMLoader.c ****     {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 93


2237:../../MMI/Resource/ABMLoader.c ****         mem16_p[0] |= 0x8000;
 3866              	LM435:
 3867 1a03 8B55C4   		movl	-60(%ebp), %edx
 3868 1a06 8B45C4   		movl	-60(%ebp), %eax
 3869 1a09 0FB700   		movzwl	(%eax), %eax
 3870 1a0c 0D0080FF 		orl	$-32768, %eax
 3870      FF
 3871 1a11 668902   		movw	%ax, (%edx)
 3872              	L240:
2238:../../MMI/Resource/ABMLoader.c ****     }
2239:../../MMI/Resource/ABMLoader.c ****     
2240:../../MMI/Resource/ABMLoader.c ****     if (abm_context->abm_palette_bpp!= 16)
 3874              	LM436:
 3875 1a14 8B450C   		movl	12(%ebp), %eax
 3876 1a17 83B83C74 		cmpl	$16, 1537084(%eax)
 3876      170010
 3877 1a1e 7417     		je	L241
2241:../../MMI/Resource/ABMLoader.c ****     {
2242:../../MMI/Resource/ABMLoader.c ****         mem16_p[1] |= 0x8000;    /* bit 15 is 1 to indicate it's 24-bit palette. */
 3879              	LM437:
 3880 1a20 8B55C4   		movl	-60(%ebp), %edx
 3881 1a23 83C202   		addl	$2, %edx
 3882 1a26 8B45C4   		movl	-60(%ebp), %eax
 3883 1a29 83C002   		addl	$2, %eax
 3884 1a2c 0FB700   		movzwl	(%eax), %eax
 3885 1a2f 0D0080FF 		orl	$-32768, %eax
 3885      FF
 3886 1a34 668902   		movw	%ax, (%edx)
 3887              	L241:
2243:../../MMI/Resource/ABMLoader.c ****     }
2244:../../MMI/Resource/ABMLoader.c ****     
2245:../../MMI/Resource/ABMLoader.c ****     mem16_p[2] = normal_color_num;  /* number of normal colors */
 3889              	LM438:
 3890 1a37 8B55C4   		movl	-60(%ebp), %edx
 3891 1a3a 83C204   		addl	$4, %edx
 3892 1a3d 8B45C0   		movl	-64(%ebp), %eax
 3893 1a40 668902   		movw	%ax, (%edx)
2246:../../MMI/Resource/ABMLoader.c ****     mem16_p[3] = alpha_color_num;   /* number of alpha colors */
 3895              	LM439:
 3896 1a43 8B55C4   		movl	-60(%ebp), %edx
 3897 1a46 83C206   		addl	$6, %edx
 3898 1a49 8B45BC   		movl	-68(%ebp), %eax
 3899 1a4c 668902   		movw	%ax, (%edx)
2247:../../MMI/Resource/ABMLoader.c **** 
2248:../../MMI/Resource/ABMLoader.c ****     /* bounding box info header (width and height offsets, not bounding box coordinates) */
2249:../../MMI/Resource/ABMLoader.c ****     mem16_p[4] = (abm_context->abm_enc.y1 << 8) | abm_context->abm_enc.x1;
 3901              	LM440:
 3902 1a4f 8B5DC4   		movl	-60(%ebp), %ebx
 3903 1a52 83C308   		addl	$8, %ebx
 3904 1a55 8B450C   		movl	12(%ebp), %eax
 3905 1a58 8B801C04 		movl	1052(%eax), %eax
 3905      0000
 3906 1a5e C1E008   		sall	$8, %eax
 3907 1a61 8B550C   		movl	12(%ebp), %edx
 3908 1a64 89C1     		movl	%eax, %ecx
 3909 1a66 0FB78218 		movzwl	1048(%edx), %eax
 3909      040000
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 94


 3910 1a6d 09C8     		orl	%ecx, %eax
 3911 1a6f 668903   		movw	%ax, (%ebx)
2250:../../MMI/Resource/ABMLoader.c ****     bottom_right_off_w = w - 1 - abm_context->abm_enc.x2;
 3913              	LM441:
 3914 1a72 8B450C   		movl	12(%ebp), %eax
 3915 1a75 8B902004 		movl	1056(%eax), %edx
 3915      0000
 3916 1a7b 8B45F0   		movl	-16(%ebp), %eax
 3917 1a7e 29D0     		subl	%edx, %eax
 3918 1a80 48       		decl	%eax
 3919 1a81 8945E8   		movl	%eax, -24(%ebp)
2251:../../MMI/Resource/ABMLoader.c ****     bottom_right_off_h = h - 1 - abm_context->abm_enc.y2;
 3921              	LM442:
 3922 1a84 8B450C   		movl	12(%ebp), %eax
 3923 1a87 8B902404 		movl	1060(%eax), %edx
 3923      0000
 3924 1a8d 8B45EC   		movl	-20(%ebp), %eax
 3925 1a90 29D0     		subl	%edx, %eax
 3926 1a92 48       		decl	%eax
 3927 1a93 8945E4   		movl	%eax, -28(%ebp)
2252:../../MMI/Resource/ABMLoader.c ****     mem16_p[5] = (bottom_right_off_h << 8) | bottom_right_off_w;
 3929              	LM443:
 3930 1a96 8B4DC4   		movl	-60(%ebp), %ecx
 3931 1a99 83C10A   		addl	$10, %ecx
 3932 1a9c 8B45E4   		movl	-28(%ebp), %eax
 3933 1a9f C1E008   		sall	$8, %eax
 3934 1aa2 89C2     		movl	%eax, %edx
 3935 1aa4 8B45E8   		movl	-24(%ebp), %eax
 3936 1aa7 09D0     		orl	%edx, %eax
 3937 1aa9 668901   		movw	%ax, (%ecx)
2253:../../MMI/Resource/ABMLoader.c **** 
2254:../../MMI/Resource/ABMLoader.c ****     mem16_p += 6;    
 3939              	LM444:
 3940 1aac 8D45C4   		leal	-60(%ebp), %eax
 3941 1aaf 83000C   		addl	$12, (%eax)
2255:../../MMI/Resource/ABMLoader.c **** 
2256:../../MMI/Resource/ABMLoader.c ****     mem8_p = (U8*)mem16_p;
 3943              	LM445:
 3944 1ab2 8B45C4   		movl	-60(%ebp), %eax
 3945 1ab5 8945D0   		movl	%eax, -48(%ebp)
2257:../../MMI/Resource/ABMLoader.c **** 
2258:../../MMI/Resource/ABMLoader.c ****     /* output color palette */
2259:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < color_num - 1; i++)
 3947              	LM446:
 3948 1ab8 C745B400 		movl	$0, -76(%ebp)
 3948      000000
 3949              	L242:
 3950 1abf 8B45B8   		movl	-72(%ebp), %eax
 3951 1ac2 48       		decl	%eax
 3952 1ac3 3945B4   		cmpl	%eax, -76(%ebp)
 3953 1ac6 7C05     		jl	L245
 3954 1ac8 E9910100 		jmp	L243
 3954      00
 3955              	L245:
2260:../../MMI/Resource/ABMLoader.c ****     {
2261:../../MMI/Resource/ABMLoader.c ****         c = abm_context->color_idx_tab.color_table[i];
 3957              	LM447:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 95


 3958 1acd 8B550C   		movl	12(%ebp), %edx
 3959 1ad0 8B45B4   		movl	-76(%ebp), %eax
 3960 1ad3 8B848234 		movl	1076(%edx,%eax,4), %eax
 3960      040000
 3961 1ada 8945A8   		movl	%eax, -88(%ebp)
2262:../../MMI/Resource/ABMLoader.c **** 
2263:../../MMI/Resource/ABMLoader.c ****         a = A_OF_ARGB8888(c);
 3963              	LM448:
 3964 1add 8B45A8   		movl	-88(%ebp), %eax
 3965 1ae0 C1E818   		shrl	$24, %eax
 3966 1ae3 8945A0   		movl	%eax, -96(%ebp)
2264:../../MMI/Resource/ABMLoader.c **** 
2265:../../MMI/Resource/ABMLoader.c ****         /* prevent blue channel from saturation to get rid of source key checking in the decoder */
2266:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_palette_bpp== 16)
 3968              	LM449:
 3969 1ae6 8B450C   		movl	12(%ebp), %eax
 3970 1ae9 83B83C74 		cmpl	$16, 1537084(%eax)
 3970      170010
 3971 1af0 7549     		jne	L246
2267:../../MMI/Resource/ABMLoader.c ****         {   /* 16-bit */
2268:../../MMI/Resource/ABMLoader.c ****             color16 = ARGB8888_TO_RGB16(c);
 3973              	LM450:
 3974 1af2 8B45A8   		movl	-88(%ebp), %eax
 3975 1af5 C1E008   		sall	$8, %eax
 3976 1af8 C1E818   		shrl	$24, %eax
 3977 1afb C1E803   		shrl	$3, %eax
 3978 1afe 89C2     		movl	%eax, %edx
 3979 1b00 C1E20B   		sall	$11, %edx
 3980 1b03 8B45A8   		movl	-88(%ebp), %eax
 3981 1b06 C1E010   		sall	$16, %eax
 3982 1b09 C1E818   		shrl	$24, %eax
 3983 1b0c C1E802   		shrl	$2, %eax
 3984 1b0f C1E005   		sall	$5, %eax
 3985 1b12 09C2     		orl	%eax, %edx
 3986 1b14 8B45A8   		movl	-88(%ebp), %eax
 3987 1b17 C1E018   		sall	$24, %eax
 3988 1b1a C1E818   		shrl	$24, %eax
 3989 1b1d C1E803   		shrl	$3, %eax
 3990 1b20 09D0     		orl	%edx, %eax
 3991 1b22 8945A4   		movl	%eax, -92(%ebp)
2269:../../MMI/Resource/ABMLoader.c ****             if (B_OF_RGB16(color16) == 0x1F)
 3993              	LM451:
 3994 1b25 8B45A4   		movl	-92(%ebp), %eax
 3995 1b28 C1E01B   		sall	$27, %eax
 3996 1b2b C1E81B   		shrl	$27, %eax
 3997 1b2e 83F81F   		cmpl	$31, %eax
 3998 1b31 751D     		jne	L248
2270:../../MMI/Resource/ABMLoader.c ****             {
2271:../../MMI/Resource/ABMLoader.c ****                 c -= 1 << 3;    /* 5-bit B: 0x1F -> 0x1E */
 4000              	LM452:
 4001 1b33 8D45A8   		leal	-88(%ebp), %eax
 4002 1b36 832808   		subl	$8, (%eax)
 4003 1b39 EB15     		jmp	L248
 4004              	L246:
2272:../../MMI/Resource/ABMLoader.c ****             }
2273:../../MMI/Resource/ABMLoader.c ****         }
2274:../../MMI/Resource/ABMLoader.c ****         else
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 96


2275:../../MMI/Resource/ABMLoader.c ****         {   /* 24-bit and 32-bit ABM both use 24-bit palette */
2276:../../MMI/Resource/ABMLoader.c ****             if (B_OF_ARGB8888(c) == 0xFF)
 4006              	LM453:
 4007 1b3b 8B45A8   		movl	-88(%ebp), %eax
 4008 1b3e C1E018   		sall	$24, %eax
 4009 1b41 C1E818   		shrl	$24, %eax
 4010 1b44 3DFF0000 		cmpl	$255, %eax
 4010      00
 4011 1b49 7505     		jne	L248
2277:../../MMI/Resource/ABMLoader.c ****             {
2278:../../MMI/Resource/ABMLoader.c ****                 c -= 1;         /* 8-bit B: 0xFF -> 0xFE */
 4013              	LM454:
 4014 1b4b 8D45A8   		leal	-88(%ebp), %eax
 4015 1b4e FF08     		decl	(%eax)
 4016              	L248:
2279:../../MMI/Resource/ABMLoader.c ****             }
2280:../../MMI/Resource/ABMLoader.c ****         }
2281:../../MMI/Resource/ABMLoader.c **** 
2282:../../MMI/Resource/ABMLoader.c ****         /* pre-calculate alpha color */
2283:../../MMI/Resource/ABMLoader.c ****         r = R_OF_ARGB8888(c);
 4018              	LM455:
 4019 1b50 8B45A8   		movl	-88(%ebp), %eax
 4020 1b53 C1E008   		sall	$8, %eax
 4021 1b56 C1E818   		shrl	$24, %eax
 4022 1b59 89459C   		movl	%eax, -100(%ebp)
2284:../../MMI/Resource/ABMLoader.c ****         g = G_OF_ARGB8888(c);
 4024              	LM456:
 4025 1b5c 8B45A8   		movl	-88(%ebp), %eax
 4026 1b5f C1E010   		sall	$16, %eax
 4027 1b62 C1E818   		shrl	$24, %eax
 4028 1b65 894598   		movl	%eax, -104(%ebp)
2285:../../MMI/Resource/ABMLoader.c ****         b = B_OF_ARGB8888(c);
 4030              	LM457:
 4031 1b68 8B45A8   		movl	-88(%ebp), %eax
 4032 1b6b C1E018   		sall	$24, %eax
 4033 1b6e C1E818   		shrl	$24, %eax
 4034 1b71 894594   		movl	%eax, -108(%ebp)
2286:../../MMI/Resource/ABMLoader.c **** 
2287:../../MMI/Resource/ABMLoader.c ****         r = GDI_IMAGE_AB2_DIV_255(r * a);
 4036              	LM458:
 4037 1b74 8B459C   		movl	-100(%ebp), %eax
 4038 1b77 89C2     		movl	%eax, %edx
 4039 1b79 0FAF55A0 		imull	-96(%ebp), %edx
 4040 1b7d 89D0     		movl	%edx, %eax
 4041 1b7f C1E008   		sall	$8, %eax
 4042 1b82 01D0     		addl	%edx, %eax
 4043 1b84 05808000 		addl	$32896, %eax
 4043      00
 4044 1b89 C1E810   		shrl	$16, %eax
 4045 1b8c 89459C   		movl	%eax, -100(%ebp)
2288:../../MMI/Resource/ABMLoader.c ****         g = GDI_IMAGE_AB2_DIV_255(g * a);
 4047              	LM459:
 4048 1b8f 8B4598   		movl	-104(%ebp), %eax
 4049 1b92 89C2     		movl	%eax, %edx
 4050 1b94 0FAF55A0 		imull	-96(%ebp), %edx
 4051 1b98 89D0     		movl	%edx, %eax
 4052 1b9a C1E008   		sall	$8, %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 97


 4053 1b9d 01D0     		addl	%edx, %eax
 4054 1b9f 05808000 		addl	$32896, %eax
 4054      00
 4055 1ba4 C1E810   		shrl	$16, %eax
 4056 1ba7 894598   		movl	%eax, -104(%ebp)
2289:../../MMI/Resource/ABMLoader.c ****         b = GDI_IMAGE_AB2_DIV_255(b * a);
 4058              	LM460:
 4059 1baa 8B4594   		movl	-108(%ebp), %eax
 4060 1bad 89C2     		movl	%eax, %edx
 4061 1baf 0FAF55A0 		imull	-96(%ebp), %edx
 4062 1bb3 89D0     		movl	%edx, %eax
 4063 1bb5 C1E008   		sall	$8, %eax
 4064 1bb8 01D0     		addl	%edx, %eax
 4065 1bba 05808000 		addl	$32896, %eax
 4065      00
 4066 1bbf C1E810   		shrl	$16, %eax
 4067 1bc2 894594   		movl	%eax, -108(%ebp)
2290:../../MMI/Resource/ABMLoader.c **** 
2291:../../MMI/Resource/ABMLoader.c ****         c = RGB(r, g, b);
 4069              	LM461:
 4070 1bc5 8B459C   		movl	-100(%ebp), %eax
 4071 1bc8 89C2     		movl	%eax, %edx
 4072 1bca C1E210   		sall	$16, %edx
 4073 1bcd 8B4598   		movl	-104(%ebp), %eax
 4074 1bd0 C1E008   		sall	$8, %eax
 4075 1bd3 09D0     		orl	%edx, %eax
 4076 1bd5 0B4594   		orl	-108(%ebp), %eax
 4077 1bd8 8945A8   		movl	%eax, -88(%ebp)
2292:../../MMI/Resource/ABMLoader.c **** 
2293:../../MMI/Resource/ABMLoader.c ****         if (abm_context->abm_palette_bpp == 16)
 4079              	LM462:
 4080 1bdb 8B450C   		movl	12(%ebp), %eax
 4081 1bde 83B83C74 		cmpl	$16, 1537084(%eax)
 4081      170010
 4082 1be5 753E     		jne	L250
2294:../../MMI/Resource/ABMLoader.c ****         {   /* 16-bit palette */
2295:../../MMI/Resource/ABMLoader.c ****             PUT_16(mem8_p, ARGB8888_TO_RGB16(c));
 4084              	LM463:
 4085 1be7 8B4DD0   		movl	-48(%ebp), %ecx
 4086 1bea 8B45A8   		movl	-88(%ebp), %eax
 4087 1bed C1E008   		sall	$8, %eax
 4088 1bf0 C1E818   		shrl	$24, %eax
 4089 1bf3 C1E803   		shrl	$3, %eax
 4090 1bf6 89C2     		movl	%eax, %edx
 4091 1bf8 C1E20B   		sall	$11, %edx
 4092 1bfb 8B45A8   		movl	-88(%ebp), %eax
 4093 1bfe C1E010   		sall	$16, %eax
 4094 1c01 C1E818   		shrl	$24, %eax
 4095 1c04 C1E802   		shrl	$2, %eax
 4096 1c07 C1E005   		sall	$5, %eax
 4097 1c0a 09C2     		orl	%eax, %edx
 4098 1c0c 8B45A8   		movl	-88(%ebp), %eax
 4099 1c0f C1E018   		sall	$24, %eax
 4100 1c12 C1E818   		shrl	$24, %eax
 4101 1c15 C1E803   		shrl	$3, %eax
 4102 1c18 09D0     		orl	%edx, %eax
 4103 1c1a 668901   		movw	%ax, (%ecx)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 98


2296:../../MMI/Resource/ABMLoader.c ****             mem8_p += 2;
 4105              	LM464:
 4106 1c1d 8D45D0   		leal	-48(%ebp), %eax
 4107 1c20 830002   		addl	$2, (%eax)
 4108 1c23 EB2F     		jmp	L244
 4109              	L250:
2297:../../MMI/Resource/ABMLoader.c ****         }
2298:../../MMI/Resource/ABMLoader.c ****         else
2299:../../MMI/Resource/ABMLoader.c ****         {   /* 24-bit palette */
2300:../../MMI/Resource/ABMLoader.c ****             PUT_24(mem8_p, c);
 4111              	LM465:
 4112              	LBB29:
 4113 1c25 8B45D0   		movl	-48(%ebp), %eax
 4114 1c28 894588   		movl	%eax, -120(%ebp)
 4115 1c2b 8B5588   		movl	-120(%ebp), %edx
 4116 1c2e 0FB645A8 		movzbl	-88(%ebp), %eax
 4117 1c32 8802     		movb	%al, (%edx)
 4118 1c34 8B5588   		movl	-120(%ebp), %edx
 4119 1c37 42       		incl	%edx
 4120 1c38 8B45A8   		movl	-88(%ebp), %eax
 4121 1c3b C1E808   		shrl	$8, %eax
 4122 1c3e 8802     		movb	%al, (%edx)
 4123 1c40 8B5588   		movl	-120(%ebp), %edx
 4124 1c43 83C202   		addl	$2, %edx
 4125 1c46 8B45A8   		movl	-88(%ebp), %eax
 4126 1c49 C1E810   		shrl	$16, %eax
 4127 1c4c 8802     		movb	%al, (%edx)
2301:../../MMI/Resource/ABMLoader.c ****             mem8_p += 3;
 4129              	LM466:
 4130 1c4e 8D45D0   		leal	-48(%ebp), %eax
 4131              	LBE29:
 4132 1c51 830003   		addl	$3, (%eax)
 4134              	LM467:
 4135              	L244:
 4136 1c54 8D45B4   		leal	-76(%ebp), %eax
 4137 1c57 FF00     		incl	(%eax)
 4138 1c59 E961FEFF 		jmp	L242
 4138      FF
 4139              	L243:
2302:../../MMI/Resource/ABMLoader.c ****         }
2303:../../MMI/Resource/ABMLoader.c ****     }
2304:../../MMI/Resource/ABMLoader.c **** 
2305:../../MMI/Resource/ABMLoader.c ****     /* output 1-byte alpha values of alpha colors */
2306:../../MMI/Resource/ABMLoader.c ****     for (i = normal_color_num - 1; i < color_num - 1; i++)
 4141              	LM468:
 4142 1c5e 8B45C0   		movl	-64(%ebp), %eax
 4143 1c61 48       		decl	%eax
 4144 1c62 8945B4   		movl	%eax, -76(%ebp)
 4145              	L253:
 4146 1c65 8B45B8   		movl	-72(%ebp), %eax
 4147 1c68 48       		decl	%eax
 4148 1c69 3945B4   		cmpl	%eax, -76(%ebp)
 4149 1c6c 7C02     		jl	L256
 4150 1c6e EB29     		jmp	L254
 4151              	L256:
2307:../../MMI/Resource/ABMLoader.c ****     {
2308:../../MMI/Resource/ABMLoader.c ****         /* inverted alpha due to precalculation */
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 99


2309:../../MMI/Resource/ABMLoader.c ****         *mem8_p++ = 255 - A_OF_ARGB8888(abm_context->color_idx_tab.color_table[i]);
 4153              	LM469:
 4154 1c70 8B45D0   		movl	-48(%ebp), %eax
 4155 1c73 89C1     		movl	%eax, %ecx
 4156 1c75 8B550C   		movl	12(%ebp), %edx
 4157 1c78 8B45B4   		movl	-76(%ebp), %eax
 4158 1c7b 8B848234 		movl	1076(%edx,%eax,4), %eax
 4158      040000
 4159 1c82 89C2     		movl	%eax, %edx
 4160 1c84 C1EA18   		shrl	$24, %edx
 4161 1c87 B0FF     		movb	$-1, %al
 4162 1c89 28D0     		subb	%dl, %al
 4163 1c8b 8801     		movb	%al, (%ecx)
 4164 1c8d 8D45D0   		leal	-48(%ebp), %eax
 4165 1c90 FF00     		incl	(%eax)
 4167              	LM470:
 4168 1c92 8D45B4   		leal	-76(%ebp), %eax
 4169 1c95 FF00     		incl	(%eax)
 4170 1c97 EBCC     		jmp	L253
 4171              	L254:
2310:../../MMI/Resource/ABMLoader.c ****     }
2311:../../MMI/Resource/ABMLoader.c **** 
2312:../../MMI/Resource/ABMLoader.c ****     /* add a padding byte to meet 2-byte alignment for the bitstream */
2313:../../MMI/Resource/ABMLoader.c ****     if ((U32)mem8_p & 1)
 4173              	LM471:
 4174 1c99 8B45D0   		movl	-48(%ebp), %eax
 4175 1c9c 83E001   		andl	$1, %eax
 4176 1c9f 85C0     		testl	%eax, %eax
 4177 1ca1 7414     		je	L257
2314:../../MMI/Resource/ABMLoader.c ****     {
2315:../../MMI/Resource/ABMLoader.c ****         /* padding with 0xFF */
2316:../../MMI/Resource/ABMLoader.c ****         *mem8_p++ = 0xFF;
 4179              	LM472:
 4180 1ca3 8B45D0   		movl	-48(%ebp), %eax
 4181 1ca6 C600FF   		movb	$-1, (%eax)
 4182 1ca9 8D45D0   		leal	-48(%ebp), %eax
 4183 1cac FF00     		incl	(%eax)
2317:../../MMI/Resource/ABMLoader.c ****         bitstream_padding_byte = 1;
 4185              	LM473:
 4186 1cae C7458C01 		movl	$1, -116(%ebp)
 4186      000000
 4187 1cb5 EB07     		jmp	L258
 4188              	L257:
2318:../../MMI/Resource/ABMLoader.c ****     }
2319:../../MMI/Resource/ABMLoader.c ****     else
2320:../../MMI/Resource/ABMLoader.c ****     {
2321:../../MMI/Resource/ABMLoader.c ****         bitstream_padding_byte = 0;
 4190              	LM474:
 4191 1cb7 C7458C00 		movl	$0, -116(%ebp)
 4191      000000
 4192              	L258:
2322:../../MMI/Resource/ABMLoader.c ****     }
2323:../../MMI/Resource/ABMLoader.c **** 
2324:../../MMI/Resource/ABMLoader.c ****     img_p = abm_context->abm_enc.bmp_pixel_start_p;
 4194              	LM475:
 4195 1cbe 8B450C   		movl	12(%ebp), %eax
 4196 1cc1 8B801004 		movl	1040(%eax), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 100


 4196      0000
 4197 1cc7 8945D4   		movl	%eax, -44(%ebp)
2325:../../MMI/Resource/ABMLoader.c ****     bytes_per_pixel = abm_context->abm_enc.bmp_bpp / 8;
 4199              	LM476:
 4200 1cca 8B450C   		movl	12(%ebp), %eax
 4201 1ccd 8B4008   		movl	8(%eax), %eax
 4202 1cd0 898578FF 		movl	%eax, -136(%ebp)
 4202      FFFF
 4203 1cd6 83BD78FF 		cmpl	$0, -136(%ebp)
 4203      FFFF00
 4204 1cdd 7907     		jns	L259
 4205 1cdf 838578FF 		addl	$7, -136(%ebp)
 4205      FFFF07
 4206              	L259:
 4207 1ce6 8B8578FF 		movl	-136(%ebp), %eax
 4207      FFFF
 4208 1cec C1F803   		sarl	$3, %eax
 4209 1cef 894590   		movl	%eax, -112(%ebp)
2326:../../MMI/Resource/ABMLoader.c **** 
2327:../../MMI/Resource/ABMLoader.c ****     /* calculate bounding box width and height */
2328:../../MMI/Resource/ABMLoader.c ****     bound_box_w = abm_context->abm_enc.x2 - abm_context->abm_enc.x1 + 1;
 4211              	LM477:
 4212 1cf2 8B4D0C   		movl	12(%ebp), %ecx
 4213 1cf5 8B450C   		movl	12(%ebp), %eax
 4214 1cf8 8B901804 		movl	1048(%eax), %edx
 4214      0000
 4215 1cfe 8B812004 		movl	1056(%ecx), %eax
 4215      0000
 4216 1d04 29D0     		subl	%edx, %eax
 4217 1d06 40       		incl	%eax
 4218 1d07 8945E0   		movl	%eax, -32(%ebp)
2329:../../MMI/Resource/ABMLoader.c ****     bound_box_h = abm_context->abm_enc.y2 - abm_context->abm_enc.y1 + 1;
 4220              	LM478:
 4221 1d0a 8B4D0C   		movl	12(%ebp), %ecx
 4222 1d0d 8B450C   		movl	12(%ebp), %eax
 4223 1d10 8B901C04 		movl	1052(%eax), %edx
 4223      0000
 4224 1d16 8B812404 		movl	1060(%ecx), %eax
 4224      0000
 4225 1d1c 29D0     		subl	%edx, %eax
 4226 1d1e 40       		incl	%eax
 4227 1d1f 8945DC   		movl	%eax, -36(%ebp)
2330:../../MMI/Resource/ABMLoader.c **** 
2331:../../MMI/Resource/ABMLoader.c ****     /* initialize the bitstream writer */
2332:../../MMI/Resource/ABMLoader.c ****     BW_INIT((U16*)mem8_p);
 4229              	LM479:
 4230              	LBB30:
 4231 1d22 8B45D0   		movl	-48(%ebp), %eax
 4232 1d25 894584   		movl	%eax, -124(%ebp)
 4233 1d28 C7458800 		movl	$0, -120(%ebp)
 4233      000000
 4234 1d2f C7458000 		movl	$0, -128(%ebp)
 4234      000000
2333:../../MMI/Resource/ABMLoader.c **** 
2334:../../MMI/Resource/ABMLoader.c ****     /* 2nd pass, output ABM packed pixels, and do vertical flipping (BMP nature) */
2335:../../MMI/Resource/ABMLoader.c ****     for (y = abm_context->abm_enc.y1; y <= abm_context->abm_enc.y2; y++)
 4236              	LM480:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 101


 4237 1d36 8B450C   		movl	12(%ebp), %eax
 4238 1d39 8B801C04 		movl	1052(%eax), %eax
 4238      0000
 4239 1d3f 8945F4   		movl	%eax, -12(%ebp)
 4240              	L260:
 4241 1d42 8B550C   		movl	12(%ebp), %edx
 4242 1d45 8B45F4   		movl	-12(%ebp), %eax
 4243 1d48 3B822404 		cmpl	1060(%edx), %eax
 4243      0000
 4244 1d4e 7E05     		jle	L263
 4245 1d50 E9900000 		jmp	L261
 4245      00
 4246              	L263:
2336:../../MMI/Resource/ABMLoader.c ****     {
2337:../../MMI/Resource/ABMLoader.c ****         for (x = abm_context->abm_enc.x1; x <= abm_context->abm_enc.x2; x++)
 4248              	LM481:
 4249 1d55 8B450C   		movl	12(%ebp), %eax
 4250 1d58 8B801804 		movl	1048(%eax), %eax
 4250      0000
 4251 1d5e 8945F8   		movl	%eax, -8(%ebp)
 4252              	L264:
 4253 1d61 8B550C   		movl	12(%ebp), %edx
 4254 1d64 8B45F8   		movl	-8(%ebp), %eax
 4255 1d67 3B822004 		cmpl	1056(%edx), %eax
 4255      0000
 4256 1d6d 7E02     		jle	L267
 4257 1d6f EB6A     		jmp	L262
 4258              	L267:
2338:../../MMI/Resource/ABMLoader.c ****         {
2339:../../MMI/Resource/ABMLoader.c ****             p = ab2enc_get_img_color_idx(x, y, abm_context);
 4260              	LM482:
 4261 1d71 8B450C   		movl	12(%ebp), %eax
 4262 1d74 89442408 		movl	%eax, 8(%esp)
 4263 1d78 8B45F4   		movl	-12(%ebp), %eax
 4264 1d7b 89442404 		movl	%eax, 4(%esp)
 4265 1d7f 8B45F8   		movl	-8(%ebp), %eax
 4266 1d82 890424   		movl	%eax, (%esp)
 4267 1d85 E8A50E00 		call	_ab2enc_get_img_color_idx
 4267      00
 4268 1d8a 8945CC   		movl	%eax, -52(%ebp)
2340:../../MMI/Resource/ABMLoader.c ****             
2341:../../MMI/Resource/ABMLoader.c ****             /* write the ABM pixel data into the bitstream */
2342:../../MMI/Resource/ABMLoader.c ****             BW_WRITE(p, bpp);
 4270              	LM483:
 4271 1d8d B8010000 		movl	$1, %eax
 4271      00
 4272 1d92 0FB64DC8 		movzbl	-56(%ebp), %ecx
 4273 1d96 D3E0     		sall	%cl, %eax
 4274 1d98 48       		decl	%eax
 4275 1d99 2345CC   		andl	-52(%ebp), %eax
 4276 1d9c 0FB64D80 		movzbl	-128(%ebp), %ecx
 4277 1da0 89C2     		movl	%eax, %edx
 4278 1da2 D3E2     		sall	%cl, %edx
 4279 1da4 8D4588   		leal	-120(%ebp), %eax
 4280 1da7 0910     		orl	%edx, (%eax)
 4281 1da9 8B55C8   		movl	-56(%ebp), %edx
 4282 1dac 8D4580   		leal	-128(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 102


 4283 1daf 0110     		addl	%edx, (%eax)
 4284 1db1 837D800F 		cmpl	$15, -128(%ebp)
 4285 1db5 761D     		jbe	L266
 4286 1db7 8B4584   		movl	-124(%ebp), %eax
 4287 1dba 89C2     		movl	%eax, %edx
 4288 1dbc 8B4588   		movl	-120(%ebp), %eax
 4289 1dbf 668902   		movw	%ax, (%edx)
 4290 1dc2 8D4584   		leal	-124(%ebp), %eax
 4291 1dc5 830002   		addl	$2, (%eax)
 4292 1dc8 8D4588   		leal	-120(%ebp), %eax
 4293 1dcb C12810   		shrl	$16, (%eax)
 4294 1dce 8D4580   		leal	-128(%ebp), %eax
 4295 1dd1 832810   		subl	$16, (%eax)
 4297              	LM484:
 4298              	L266:
 4299 1dd4 8D45F8   		leal	-8(%ebp), %eax
 4300 1dd7 FF00     		incl	(%eax)
 4301 1dd9 EB86     		jmp	L264
 4303              	LM485:
 4304              	L262:
 4305 1ddb 8D45F4   		leal	-12(%ebp), %eax
 4306 1dde FF00     		incl	(%eax)
 4307 1de0 E95DFFFF 		jmp	L260
 4307      FF
 4308              	L261:
2343:../../MMI/Resource/ABMLoader.c ****         }
2344:../../MMI/Resource/ABMLoader.c ****     }
2345:../../MMI/Resource/ABMLoader.c **** 
2346:../../MMI/Resource/ABMLoader.c ****     /* flush bitstream writer */
2347:../../MMI/Resource/ABMLoader.c ****     BW_END();
 4310              	LM486:
 4311 1de5 837D8000 		cmpl	$0, -128(%ebp)
 4312 1de9 7411     		je	L269
 4313 1deb 8B4584   		movl	-124(%ebp), %eax
 4314 1dee 89C2     		movl	%eax, %edx
 4315 1df0 8B4588   		movl	-120(%ebp), %eax
 4316 1df3 668902   		movw	%ax, (%edx)
 4317 1df6 8D4584   		leal	-124(%ebp), %eax
 4318 1df9 830002   		addl	$2, (%eax)
 4319              	L269:
2348:../../MMI/Resource/ABMLoader.c **** 
2349:../../MMI/Resource/ABMLoader.c ****     abm_size = ABM_HEADER_SIZE +                            /* header size */
 4321              	LM487:
 4322 1dfc 8B55B8   		movl	-72(%ebp), %edx
 4323              	LBE30:
 4324 1dff 4A       		decl	%edx
 4325 1e00 8B450C   		movl	12(%ebp), %eax
 4326 1e03 0FAF903C 		imull	1537084(%eax), %edx
 4326      741700
 4327 1e0a 89D0     		movl	%edx, %eax
 4328 1e0c C1E803   		shrl	$3, %eax
 4329 1e0f 0345BC   		addl	-68(%ebp), %eax
 4330 1e12 89C2     		movl	%eax, %edx
 4331 1e14 03558C   		addl	-116(%ebp), %edx
 4332 1e17 8B45E0   		movl	-32(%ebp), %eax
 4333 1e1a 0FAF45DC 		imull	-36(%ebp), %eax
 4334 1e1e 0FAF45C8 		imull	-56(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 103


 4335 1e22 83C00F   		addl	$15, %eax
 4336 1e25 C1E804   		shrl	$4, %eax
 4337 1e28 C1E004   		sall	$4, %eax
 4338 1e2b C1E803   		shrl	$3, %eax
 4339 1e2e 8D0410   		leal	(%eax,%edx), %eax
 4340 1e31 83C00C   		addl	$12, %eax
 4341 1e34 8945B0   		movl	%eax, -80(%ebp)
2350:../../MMI/Resource/ABMLoader.c ****                (color_num - 1) * abm_context->abm_palette_bpp / 8 +      /* palette size */
2351:../../MMI/Resource/ABMLoader.c ****                alpha_color_num +                            /* 8-bit alpha channel */
2352:../../MMI/Resource/ABMLoader.c ****                bitstream_padding_byte +                     /* a padding byte or not */
2353:../../MMI/Resource/ABMLoader.c ****                (bound_box_w * bound_box_h * bpp + 15) / 16 * 16 / 8;    /* pixel data size (2-byte 
2354:../../MMI/Resource/ABMLoader.c **** 
2355:../../MMI/Resource/ABMLoader.c ****     return abm_size;
 4343              	LM488:
 4344 1e37 8B45B0   		movl	-80(%ebp), %eax
 4345 1e3a 89857CFF 		movl	%eax, -132(%ebp)
 4345      FFFF
2356:../../MMI/Resource/ABMLoader.c **** }
 4347              	LM489:
 4348              	L238:
 4349              	LBE28:
 4350 1e40 8B857CFF 		movl	-132(%ebp), %eax
 4350      FFFF
 4351 1e46 81C49400 		addl	$148, %esp
 4351      0000
 4352 1e4c 5B       		popl	%ebx
 4353 1e4d 5D       		popl	%ebp
 4354 1e4e C3       		ret
 4393              	Lscope23:
 4398              	_caculate_abm_size:
2357:../../MMI/Resource/ABMLoader.c **** 
2358:../../MMI/Resource/ABMLoader.c **** 
2359:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2360:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
2361:../../MMI/Resource/ABMLoader.c ****  *  caculate_abm_size
2362:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
2363:../../MMI/Resource/ABMLoader.c ****  *  caculate the image in ABM format size without data encoding.
2364:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
2365:../../MMI/Resource/ABMLoader.c ****  *  width           [IN]    width of image
2366:../../MMI/Resource/ABMLoader.c ****  *  height          [IN]    height of image
2367:../../MMI/Resource/ABMLoader.c ****  *  color_cnt       [IN]    bits per pixel of image
2368:../../MMI/Resource/ABMLoader.c ****  * RETURNS
2369:../../MMI/Resource/ABMLoader.c ****  *  The result size
2370:../../MMI/Resource/ABMLoader.c ****   *****************************************************************************/
2371:../../MMI/Resource/ABMLoader.c **** static U32 caculate_abm_size(ABM_Context * abm_context)
2372:../../MMI/Resource/ABMLoader.c **** {
 4400              	LM490:
 4401 1e4f 55       		pushl	%ebp
 4402 1e50 89E5     		movl	%esp, %ebp
 4403 1e52 83EC28   		subl	$40, %esp
2373:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2374:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
2375:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2376:../../MMI/Resource/ABMLoader.c ****     U32 bound_width, bound_height;
2377:../../MMI/Resource/ABMLoader.c ****     U32 normal_color_cnt, alpha_color_cnt;
2378:../../MMI/Resource/ABMLoader.c ****     U32 color_index_bits;
2379:../../MMI/Resource/ABMLoader.c ****     
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 104


2380:../../MMI/Resource/ABMLoader.c ****     U32 palette_size;
2381:../../MMI/Resource/ABMLoader.c ****     U32 stream_size;
2382:../../MMI/Resource/ABMLoader.c ****     
2383:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2384:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2385:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2386:../../MMI/Resource/ABMLoader.c ****     bound_width         = abm_context->abm_enc.x2 - abm_context->abm_enc.x1 + 1;
 4405              	LM491:
 4406              	LBB31:
 4407 1e55 8B4D08   		movl	8(%ebp), %ecx
 4408 1e58 8B4508   		movl	8(%ebp), %eax
 4409 1e5b 8B901804 		movl	1048(%eax), %edx
 4409      0000
 4410 1e61 8B812004 		movl	1056(%ecx), %eax
 4410      0000
 4411 1e67 29D0     		subl	%edx, %eax
 4412 1e69 40       		incl	%eax
 4413 1e6a 8945FC   		movl	%eax, -4(%ebp)
2387:../../MMI/Resource/ABMLoader.c ****     bound_height        = abm_context->abm_enc.y2 - abm_context->abm_enc.y1 + 1;
 4415              	LM492:
 4416 1e6d 8B4D08   		movl	8(%ebp), %ecx
 4417 1e70 8B4508   		movl	8(%ebp), %eax
 4418 1e73 8B901C04 		movl	1052(%eax), %edx
 4418      0000
 4419 1e79 8B812404 		movl	1060(%ecx), %eax
 4419      0000
 4420 1e7f 29D0     		subl	%edx, %eax
 4421 1e81 40       		incl	%eax
 4422 1e82 8945F8   		movl	%eax, -8(%ebp)
2388:../../MMI/Resource/ABMLoader.c **** 
2389:../../MMI/Resource/ABMLoader.c ****     normal_color_cnt    = get_normal_color_num(abm_context);
 4424              	LM493:
 4425 1e85 8B4508   		movl	8(%ebp), %eax
 4426 1e88 890424   		movl	%eax, (%esp)
 4427 1e8b E87AE4FF 		call	_get_normal_color_num
 4427      FF
 4428 1e90 8945F4   		movl	%eax, -12(%ebp)
2390:../../MMI/Resource/ABMLoader.c ****     alpha_color_cnt     = abm_context->color_idx_tab.color_num - normal_color_cnt;
 4430              	LM494:
 4431 1e93 8B4508   		movl	8(%ebp), %eax
 4432 1e96 8B55F4   		movl	-12(%ebp), %edx
 4433 1e99 8B803474 		movl	1537076(%eax), %eax
 4433      1700
 4434 1e9f 29D0     		subl	%edx, %eax
 4435 1ea1 8945F0   		movl	%eax, -16(%ebp)
2391:../../MMI/Resource/ABMLoader.c ****     
2392:../../MMI/Resource/ABMLoader.c ****     color_index_bits = log2_ceiling(1 + normal_color_cnt + alpha_color_cnt);
 4437              	LM495:
 4438 1ea4 8B45F0   		movl	-16(%ebp), %eax
 4439 1ea7 0345F4   		addl	-12(%ebp), %eax
 4440 1eaa 40       		incl	%eax
 4441 1eab 890424   		movl	%eax, (%esp)
 4442 1eae E83BEFFF 		call	_log2_ceiling
 4442      FF
 4443 1eb3 8945EC   		movl	%eax, -20(%ebp)
2393:../../MMI/Resource/ABMLoader.c ****     
2394:../../MMI/Resource/ABMLoader.c ****     palette_size = 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 105


 4445              	LM496:
 4446 1eb6 8B45F0   		movl	-16(%ebp), %eax
 4447 1eb9 8B55F4   		movl	-12(%ebp), %edx
 4448 1ebc 01C2     		addl	%eax, %edx
 4449 1ebe 8B4508   		movl	8(%ebp), %eax
 4450 1ec1 0FAF903C 		imull	1537084(%eax), %edx
 4450      741700
 4451 1ec8 89D0     		movl	%edx, %eax
 4452 1eca C1E803   		shrl	$3, %eax
 4453 1ecd 0345F0   		addl	-16(%ebp), %eax
 4454 1ed0 8945E8   		movl	%eax, -24(%ebp)
2395:../../MMI/Resource/ABMLoader.c ****         (normal_color_cnt + alpha_color_cnt) * abm_context->abm_palette_bpp / 8 +    /* palette siz
2396:../../MMI/Resource/ABMLoader.c ****         alpha_color_cnt;                                                /* 8-bit alpha channel */
2397:../../MMI/Resource/ABMLoader.c ****     palette_size = (palette_size + 1) & ~0x1;                           /* 2-bytes alignment */
 4456              	LM497:
 4457 1ed3 8B45E8   		movl	-24(%ebp), %eax
 4458 1ed6 40       		incl	%eax
 4459 1ed7 83E0FE   		andl	$-2, %eax
 4460 1eda 8945E8   		movl	%eax, -24(%ebp)
2398:../../MMI/Resource/ABMLoader.c **** 
2399:../../MMI/Resource/ABMLoader.c ****     stream_size = ((bound_width * bound_height * color_index_bits + 7) / 8);
 4462              	LM498:
 4463 1edd 8B45FC   		movl	-4(%ebp), %eax
 4464 1ee0 0FAF45F8 		imull	-8(%ebp), %eax
 4465 1ee4 0FAF45EC 		imull	-20(%ebp), %eax
 4466 1ee8 83C007   		addl	$7, %eax
 4467 1eeb C1E803   		shrl	$3, %eax
 4468 1eee 8945E4   		movl	%eax, -28(%ebp)
2400:../../MMI/Resource/ABMLoader.c ****     stream_size = (stream_size + 1) & ~0x1;                             /* 2-bytes alignment */
 4470              	LM499:
 4471 1ef1 8B45E4   		movl	-28(%ebp), %eax
 4472 1ef4 40       		incl	%eax
 4473 1ef5 83E0FE   		andl	$-2, %eax
 4474 1ef8 8945E4   		movl	%eax, -28(%ebp)
2401:../../MMI/Resource/ABMLoader.c ****     
2402:../../MMI/Resource/ABMLoader.c ****     return ABM_HEADER_SIZE + palette_size + stream_size;
 4476              	LM500:
 4477 1efb 8B45E4   		movl	-28(%ebp), %eax
 4478 1efe 0345E8   		addl	-24(%ebp), %eax
 4479 1f01 83C00C   		addl	$12, %eax
2403:../../MMI/Resource/ABMLoader.c **** }
 4481              	LM501:
 4482 1f04 C9       		leave
 4483 1f05 C3       		ret
 4484              	LBE31:
 4494              	Lscope24:
 4501              	_caculate_pbm_size:
2404:../../MMI/Resource/ABMLoader.c **** 
2405:../../MMI/Resource/ABMLoader.c **** 
2406:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2407:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
2408:../../MMI/Resource/ABMLoader.c ****  *  caculate_pbm_size
2409:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
2410:../../MMI/Resource/ABMLoader.c ****  *  caculate the image in PBM format size without data encoding.
2411:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
2412:../../MMI/Resource/ABMLoader.c ****  *  width           [IN]    width of image
2413:../../MMI/Resource/ABMLoader.c ****  *  height          [IN]    height of image
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 106


2414:../../MMI/Resource/ABMLoader.c ****  *  bpp             [IN]    bits per pixel of image
2415:../../MMI/Resource/ABMLoader.c ****  * RETURNS
2416:../../MMI/Resource/ABMLoader.c ****  *  The result size
2417:../../MMI/Resource/ABMLoader.c ****   *****************************************************************************/
2418:../../MMI/Resource/ABMLoader.c **** static U32 caculate_pbm_size(U32 width, U32 height, U32 bpp)
2419:../../MMI/Resource/ABMLoader.c **** {
 4503              	LM502:
 4504 1f06 55       		pushl	%ebp
 4505 1f07 89E5     		movl	%esp, %ebp
 4506 1f09 83EC04   		subl	$4, %esp
2420:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2421:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
2422:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2423:../../MMI/Resource/ABMLoader.c ****     
2424:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2425:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2426:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2427:../../MMI/Resource/ABMLoader.c **** 
2428:../../MMI/Resource/ABMLoader.c ****     return PBM_HEADER_SIZE + width * height * bpp / 8;
 4508              	LM503:
 4509 1f0c 8B4508   		movl	8(%ebp), %eax
 4510 1f0f 0FAF450C 		imull	12(%ebp), %eax
 4511 1f13 8945FC   		movl	%eax, -4(%ebp)
 4512 1f16 8B45FC   		movl	-4(%ebp), %eax
 4513 1f19 0FAF4510 		imull	16(%ebp), %eax
 4514 1f1d 8945FC   		movl	%eax, -4(%ebp)
 4515 1f20 8B45FC   		movl	-4(%ebp), %eax
 4516 1f23 C1E803   		shrl	$3, %eax
 4517 1f26 83C00D   		addl	$13, %eax
 4518 1f29 8945FC   		movl	%eax, -4(%ebp)
 4519 1f2c 8B45FC   		movl	-4(%ebp), %eax
2429:../../MMI/Resource/ABMLoader.c **** }
 4521              	LM504:
 4522 1f2f C9       		leave
 4523 1f30 C3       		ret
 4524              	Lscope25:
 4528              	.globl _is16BitBMP
 4530              	_is16BitBMP:
2430:../../MMI/Resource/ABMLoader.c **** 
2431:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2432:../../MMI/Resource/ABMLoader.c **** 
2433:../../MMI/Resource/ABMLoader.c **** 
2434:../../MMI/Resource/ABMLoader.c **** *****************************************************************************/
2435:../../MMI/Resource/ABMLoader.c **** 
2436:../../MMI/Resource/ABMLoader.c **** S32 is16BitBMP(U8  *in_bmp_filename)
2437:../../MMI/Resource/ABMLoader.c **** {
 4532              	LM505:
 4533 1f31 55       		pushl	%ebp
 4534 1f32 89E5     		movl	%esp, %ebp
 4535 1f34 83EC38   		subl	$56, %esp
2438:../../MMI/Resource/ABMLoader.c ****     FILE   *fp = NULL;
 4537              	LM506:
 4538              	LBB32:
 4539 1f37 C745FC00 		movl	$0, -4(%ebp)
 4539      000000
2439:../../MMI/Resource/ABMLoader.c ****     S32     file_size = 0;
 4541              	LM507:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 107


 4542 1f3e C745F800 		movl	$0, -8(%ebp)
 4542      000000
2440:../../MMI/Resource/ABMLoader.c ****     U8     *buf;
2441:../../MMI/Resource/ABMLoader.c ****     U32     bmp_bpp, bi_size;
2442:../../MMI/Resource/ABMLoader.c ****     S32     ret = 0;
 4544              	LM508:
 4545 1f45 C745E800 		movl	$0, -24(%ebp)
 4545      000000
2443:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2444:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2445:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2446:../../MMI/Resource/ABMLoader.c **** 
2447:../../MMI/Resource/ABMLoader.c ****     /* open and check the input bitmap file */
2448:../../MMI/Resource/ABMLoader.c ****     fp = fopen(in_bmp_filename, "rb");
 4547              	LM509:
 4548 1f4c C7442404 		movl	$LC21, 4(%esp)
 4548      A9070000 
 4549 1f54 8B4508   		movl	8(%ebp), %eax
 4550 1f57 890424   		movl	%eax, (%esp)
 4551 1f5a E8000000 		call	_fopen
 4551      00
 4552 1f5f 8945FC   		movl	%eax, -4(%ebp)
2449:../../MMI/Resource/ABMLoader.c ****     if (fp == NULL)
 4554              	LM510:
 4555 1f62 837DFC00 		cmpl	$0, -4(%ebp)
 4556 1f66 750B     		jne	L273
2450:../../MMI/Resource/ABMLoader.c ****     {
2451:../../MMI/Resource/ABMLoader.c ****         return ret;
 4558              	LM511:
 4559 1f68 8B45E8   		movl	-24(%ebp), %eax
 4560 1f6b 8945E4   		movl	%eax, -28(%ebp)
 4561 1f6e E9570100 		jmp	L272
 4561      00
 4562              	L273:
2452:../../MMI/Resource/ABMLoader.c ****     }
2453:../../MMI/Resource/ABMLoader.c **** 
2454:../../MMI/Resource/ABMLoader.c ****     /* get the file size of the input BMP file */
2455:../../MMI/Resource/ABMLoader.c ****     file_size = get_file_size(fp);
 4564              	LM512:
 4565 1f73 8B45FC   		movl	-4(%ebp), %eax
 4566 1f76 890424   		movl	%eax, (%esp)
 4567 1f79 E8CEE3FF 		call	_get_file_size
 4567      FF
 4568 1f7e 8945F8   		movl	%eax, -8(%ebp)
2456:../../MMI/Resource/ABMLoader.c **** 
2457:../../MMI/Resource/ABMLoader.c ****     /* make sure the file buffer size is enough */
2458:../../MMI/Resource/ABMLoader.c ****     if (file_size > ABMENC_BMP_FILE_BUFFER_SIZE)
 4570              	LM513:
 4571 1f81 817DF800 		cmpl	$16777216, -8(%ebp)
 4571      000001
 4572 1f88 7E17     		jle	L274
2459:../../MMI/Resource/ABMLoader.c ****     {
2460:../../MMI/Resource/ABMLoader.c ****         fclose(fp);
 4574              	LM514:
 4575 1f8a 8B45FC   		movl	-4(%ebp), %eax
 4576 1f8d 890424   		movl	%eax, (%esp)
 4577 1f90 E8000000 		call	_fclose
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 108


 4577      00
2461:../../MMI/Resource/ABMLoader.c ****         return 0;
 4579              	LM515:
 4580 1f95 C745E400 		movl	$0, -28(%ebp)
 4580      000000
 4581 1f9c E9290100 		jmp	L272
 4581      00
 4582              	L274:
2462:../../MMI/Resource/ABMLoader.c ****     }
2463:../../MMI/Resource/ABMLoader.c **** 
2464:../../MMI/Resource/ABMLoader.c ****     buf = malloc(ABMENC_BMP_FILE_BUFFER_SIZE);
 4584              	LM516:
 4585 1fa1 C7042400 		movl	$16777216, (%esp)
 4585      000001
 4586 1fa8 E8000000 		call	_malloc
 4586      00
 4587 1fad 8945F4   		movl	%eax, -12(%ebp)
2465:../../MMI/Resource/ABMLoader.c ****     /* read the whole file into the memory */
2466:../../MMI/Resource/ABMLoader.c ****     if (fread(buf, file_size, 1, fp) != 1)
 4589              	LM517:
 4590 1fb0 8B45FC   		movl	-4(%ebp), %eax
 4591 1fb3 8944240C 		movl	%eax, 12(%esp)
 4592 1fb7 C7442408 		movl	$1, 8(%esp)
 4592      01000000 
 4593 1fbf 8B45F8   		movl	-8(%ebp), %eax
 4594 1fc2 89442404 		movl	%eax, 4(%esp)
 4595 1fc6 8B45F4   		movl	-12(%ebp), %eax
 4596 1fc9 890424   		movl	%eax, (%esp)
 4597 1fcc E8000000 		call	_fread
 4597      00
 4598 1fd1 83F801   		cmpl	$1, %eax
 4599 1fd4 740C     		je	L275
2467:../../MMI/Resource/ABMLoader.c ****     {
2468:../../MMI/Resource/ABMLoader.c ****         
2469:../../MMI/Resource/ABMLoader.c ****         ret = 0;
 4601              	LM518:
 4602 1fd6 C745E800 		movl	$0, -24(%ebp)
 4602      000000
 4603 1fdd E9CC0000 		jmp	L276
 4603      00
 4604              	L275:
2470:../../MMI/Resource/ABMLoader.c ****     }
2471:../../MMI/Resource/ABMLoader.c ****     else
2472:../../MMI/Resource/ABMLoader.c ****     {
2473:../../MMI/Resource/ABMLoader.c ****         /* check the "BM" magic number */
2474:../../MMI/Resource/ABMLoader.c ****         if ((buf[0] != 'B') || (buf[1] != 'M'))
 4606              	LM519:
 4607 1fe2 8B45F4   		movl	-12(%ebp), %eax
 4608 1fe5 803842   		cmpb	$66, (%eax)
 4609 1fe8 750B     		jne	L278
 4610 1fea 8B45F4   		movl	-12(%ebp), %eax
 4611 1fed 40       		incl	%eax
 4612 1fee 80384D   		cmpb	$77, (%eax)
 4613 1ff1 7502     		jne	L278
 4614 1ff3 EB0C     		jmp	L277
 4615              	L278:
2475:../../MMI/Resource/ABMLoader.c ****         {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 109


2476:../../MMI/Resource/ABMLoader.c ****             ret = 0;
 4617              	LM520:
 4618 1ff5 C745E800 		movl	$0, -24(%ebp)
 4618      000000
 4619 1ffc E9AD0000 		jmp	L276
 4619      00
 4620              	L277:
2477:../../MMI/Resource/ABMLoader.c ****         }
2478:../../MMI/Resource/ABMLoader.c ****         else
2479:../../MMI/Resource/ABMLoader.c ****         {
2480:../../MMI/Resource/ABMLoader.c ****             /* verify the bitmap file size */
2481:../../MMI/Resource/ABMLoader.c ****             if (GET_32(buf + 2) != file_size)
 4622              	LM521:
 4623 2001 8B45F4   		movl	-12(%ebp), %eax
 4624 2004 83C002   		addl	$2, %eax
 4625 2007 0FB610   		movzbl	(%eax), %edx
 4626 200a 8B45F4   		movl	-12(%ebp), %eax
 4627 200d 83C003   		addl	$3, %eax
 4628 2010 0FB600   		movzbl	(%eax), %eax
 4629 2013 C1E008   		sall	$8, %eax
 4630 2016 09C2     		orl	%eax, %edx
 4631 2018 8B45F4   		movl	-12(%ebp), %eax
 4632 201b 83C004   		addl	$4, %eax
 4633 201e 0FB600   		movzbl	(%eax), %eax
 4634 2021 C1E010   		sall	$16, %eax
 4635 2024 09C2     		orl	%eax, %edx
 4636 2026 8B45F4   		movl	-12(%ebp), %eax
 4637 2029 83C005   		addl	$5, %eax
 4638 202c 0FB600   		movzbl	(%eax), %eax
 4639 202f C1E018   		sall	$24, %eax
 4640 2032 09D0     		orl	%edx, %eax
 4641 2034 3B45F8   		cmpl	-8(%ebp), %eax
 4642 2037 7409     		je	L280
2482:../../MMI/Resource/ABMLoader.c ****             {
2483:../../MMI/Resource/ABMLoader.c ****                 ret = 0;
 4644              	LM522:
 4645 2039 C745E800 		movl	$0, -24(%ebp)
 4645      000000
 4646 2040 EB6C     		jmp	L276
 4647              	L280:
2484:../../MMI/Resource/ABMLoader.c ****             }
2485:../../MMI/Resource/ABMLoader.c **** 
2486:../../MMI/Resource/ABMLoader.c ****             else
2487:../../MMI/Resource/ABMLoader.c ****             {
2488:../../MMI/Resource/ABMLoader.c ****                 /* verify the BITMAPINFO HEADER size field */
2489:../../MMI/Resource/ABMLoader.c ****                 bi_size = GET_32(buf + 14);
 4649              	LM523:
 4650 2042 8B45F4   		movl	-12(%ebp), %eax
 4651 2045 83C00E   		addl	$14, %eax
 4652 2048 0FB610   		movzbl	(%eax), %edx
 4653 204b 8B45F4   		movl	-12(%ebp), %eax
 4654 204e 83C00F   		addl	$15, %eax
 4655 2051 0FB600   		movzbl	(%eax), %eax
 4656 2054 C1E008   		sall	$8, %eax
 4657 2057 09C2     		orl	%eax, %edx
 4658 2059 8B45F4   		movl	-12(%ebp), %eax
 4659 205c 83C010   		addl	$16, %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 110


 4660 205f 0FB600   		movzbl	(%eax), %eax
 4661 2062 C1E010   		sall	$16, %eax
 4662 2065 09C2     		orl	%eax, %edx
 4663 2067 8B45F4   		movl	-12(%ebp), %eax
 4664 206a 83C011   		addl	$17, %eax
 4665 206d 0FB600   		movzbl	(%eax), %eax
 4666 2070 C1E018   		sall	$24, %eax
 4667 2073 09D0     		orl	%edx, %eax
 4668 2075 8945EC   		movl	%eax, -20(%ebp)
2490:../../MMI/Resource/ABMLoader.c ****                 if (bi_size < BITMAPINFO_HEADER_SIZE)
 4670              	LM524:
 4671 2078 837DEC27 		cmpl	$39, -20(%ebp)
 4672 207c 7709     		ja	L282
2491:../../MMI/Resource/ABMLoader.c ****                 {
2492:../../MMI/Resource/ABMLoader.c ****                     ret = 0;
 4674              	LM525:
 4675 207e C745E800 		movl	$0, -24(%ebp)
 4675      000000
 4676 2085 EB27     		jmp	L276
 4677              	L282:
2493:../../MMI/Resource/ABMLoader.c ****                 }
2494:../../MMI/Resource/ABMLoader.c ****                 else
2495:../../MMI/Resource/ABMLoader.c ****                 {
2496:../../MMI/Resource/ABMLoader.c ****                     /* get bits per pixel */
2497:../../MMI/Resource/ABMLoader.c ****                     bmp_bpp = GET_16(buf + 28);
 4679              	LM526:
 4680 2087 8B45F4   		movl	-12(%ebp), %eax
 4681 208a 83C01C   		addl	$28, %eax
 4682 208d 0FB610   		movzbl	(%eax), %edx
 4683 2090 8B45F4   		movl	-12(%ebp), %eax
 4684 2093 83C01D   		addl	$29, %eax
 4685 2096 0FB600   		movzbl	(%eax), %eax
 4686 2099 C1E008   		sall	$8, %eax
 4687 209c 09D0     		orl	%edx, %eax
 4688 209e 8945F0   		movl	%eax, -16(%ebp)
2498:../../MMI/Resource/ABMLoader.c ****                     if (bmp_bpp == 16) ret = 1;
 4690              	LM527:
 4691 20a1 837DF010 		cmpl	$16, -16(%ebp)
 4692 20a5 7507     		jne	L276
 4693 20a7 C745E801 		movl	$1, -24(%ebp)
 4693      000000
 4694              	L276:
2499:../../MMI/Resource/ABMLoader.c ****                 }
2500:../../MMI/Resource/ABMLoader.c ****             }
2501:../../MMI/Resource/ABMLoader.c ****         }
2502:../../MMI/Resource/ABMLoader.c ****     }
2503:../../MMI/Resource/ABMLoader.c ****     fclose(fp);
 4696              	LM528:
 4697 20ae 8B45FC   		movl	-4(%ebp), %eax
 4698 20b1 890424   		movl	%eax, (%esp)
 4699 20b4 E8000000 		call	_fclose
 4699      00
2504:../../MMI/Resource/ABMLoader.c ****     free(buf);
 4701              	LM529:
 4702 20b9 8B45F4   		movl	-12(%ebp), %eax
 4703 20bc 890424   		movl	%eax, (%esp)
 4704 20bf E8000000 		call	_free
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 111


 4704      00
2505:../../MMI/Resource/ABMLoader.c ****     return ret;
 4706              	LM530:
 4707 20c4 8B45E8   		movl	-24(%ebp), %eax
 4708 20c7 8945E4   		movl	%eax, -28(%ebp)
2506:../../MMI/Resource/ABMLoader.c **** }
 4710              	LM531:
 4711              	L272:
 4712              	LBE32:
 4713 20ca 8B45E4   		movl	-28(%ebp), %eax
 4714 20cd C9       		leave
 4715 20ce C3       		ret
 4724              	Lscope26:
 4726 20cf 90909090 		.align 32
 4726      90909090 
 4726      90909090 
 4726      90909090 
 4726      90
 4727              	LC27:
 4728 20e0 5B41424D 		.ascii "[ABM enc] Unique color number exceed limitation(384000):%s\0"
 4728      20656E63 
 4728      5D20556E 
 4728      69717565 
 4728      20636F6C 
 4740              	.globl _ABM_load
 4742              	_ABM_load:
2507:../../MMI/Resource/ABMLoader.c **** 
2508:../../MMI/Resource/ABMLoader.c **** 
2509:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2510:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
2511:../../MMI/Resource/ABMLoader.c ****  *  ABM_load
2512:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
2513:../../MMI/Resource/ABMLoader.c ****  *  ABM encoder interface
2514:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
2515:../../MMI/Resource/ABMLoader.c ****  *  in_bmp_filename       [IN]  input bitmap filename
2516:../../MMI/Resource/ABMLoader.c ****  *  dev_bmp_bpp           [IN]  PBM color depth in bits
2517:../../MMI/Resource/ABMLoader.c ****  *  image_type            [IN]  for decision whether to use ABM
2518:../../MMI/Resource/ABMLoader.c ****  *  option                [IN]  select file format can be return
2519:../../MMI/Resource/ABMLoader.c ****  *  data                  [OUT] output memory
2520:../../MMI/Resource/ABMLoader.c ****  *  size                  [OUT] size of ABM image
2521:../../MMI/Resource/ABMLoader.c ****  *  width                 [OUT] width of ABM image
2522:../../MMI/Resource/ABMLoader.c ****  *  height                [OUT] height of ABM image
2523:../../MMI/Resource/ABMLoader.c ****  * RETURNS
2524:../../MMI/Resource/ABMLoader.c ****  *  return code to use ABM or not
2525:../../MMI/Resource/ABMLoader.c ****  *  + ABM_ENC_RETURN_KEEP_ORIGINAL  0   donot use ABM  
2526:../../MMI/Resource/ABMLoader.c ****  *  + ABM_ENC_RETURN_USE_ABM        1   use ABM
2527:../../MMI/Resource/ABMLoader.c ****  *  + ABM_ENC_RETURN_USE_AB2        2   use ABMv2
2528:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
2529:../../MMI/Resource/ABMLoader.c **** S32 ABM_load(
2530:../../MMI/Resource/ABMLoader.c ****         U8  *in_bmp_filename,
2531:../../MMI/Resource/ABMLoader.c ****         S32 dev_bmp_bpp,
2532:../../MMI/Resource/ABMLoader.c ****         U8  image_type,
2533:../../MMI/Resource/ABMLoader.c ****         abm_enc_option_flag_type option,
2534:../../MMI/Resource/ABMLoader.c ****         U8  *data,
2535:../../MMI/Resource/ABMLoader.c ****         S32 *size,
2536:../../MMI/Resource/ABMLoader.c ****         S32 *width,
2537:../../MMI/Resource/ABMLoader.c ****         S32 *height,
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 112


2538:../../MMI/Resource/ABMLoader.c ****         MMI_BOOL is9slice,
2539:../../MMI/Resource/ABMLoader.c ****         SetImageProcessData * processData)
2540:../../MMI/Resource/ABMLoader.c **** {
 4744              	LM532:
 4745 211b 55       		pushl	%ebp
 4746 211c 89E5     		movl	%esp, %ebp
 4747 211e 83EC48   		subl	$72, %esp
 4748 2121 8B4510   		movl	16(%ebp), %eax
 4749 2124 8845FF   		movb	%al, -1(%ebp)
2541:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2542:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
2543:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2544:../../MMI/Resource/ABMLoader.c ****     U32 input_bmp_file_size;
2545:../../MMI/Resource/ABMLoader.c ****     U32 ret = ABM_ENC_RETURN_KEEP_ORIGINAL;
 4751              	LM533:
 4752              	LBB33:
 4753 2127 C745F400 		movl	$0, -12(%ebp)
 4753      000000
2546:../../MMI/Resource/ABMLoader.c ****     U32 ret_size = ABM_ENC_MAX_FILE_SIZE;
 4755              	LM534:
 4756 212e C745F0FF 		movl	$-1, -16(%ebp)
 4756      FFFFFF
2547:../../MMI/Resource/ABMLoader.c ****     ABM_Context * abm_context;
2548:../../MMI/Resource/ABMLoader.c ****     U8 *file_buf;
2549:../../MMI/Resource/ABMLoader.c ****     U32 normal_color_cnt;
2550:../../MMI/Resource/ABMLoader.c ****     U32 alpha_color_cnt;
2551:../../MMI/Resource/ABMLoader.c ****     
2552:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2553:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2554:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2555:../../MMI/Resource/ABMLoader.c ****     /* no file format can be encode, 
2556:../../MMI/Resource/ABMLoader.c ****        do nothing and return the original format */
2557:../../MMI/Resource/ABMLoader.c ****     #if !defined(__OP01_FWPBW__) 
2558:../../MMI/Resource/ABMLoader.c ****     if (option == 0)
 4758              	LM535:
 4759 2135 837D1400 		cmpl	$0, 20(%ebp)
 4760 2139 750C     		jne	L286
2559:../../MMI/Resource/ABMLoader.c ****     #endif
2560:../../MMI/Resource/ABMLoader.c ****     {
2561:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_RETURN_KEEP_ORIGINAL;
 4762              	LM536:
 4763 213b C745D800 		movl	$0, -40(%ebp)
 4763      000000
 4764 2142 E9CA0300 		jmp	L285
 4764      00
 4765              	L286:
2562:../../MMI/Resource/ABMLoader.c ****     }
2563:../../MMI/Resource/ABMLoader.c **** 
2564:../../MMI/Resource/ABMLoader.c ****     /* no support bpps lower than 16-bit,
2565:../../MMI/Resource/ABMLoader.c ****        do nothing and return the original format */
2566:../../MMI/Resource/ABMLoader.c **** #if defined(DRV_MAINLCD_BIT_PER_PIXEL) && (DRV_MAINLCD_BIT_PER_PIXEL < 16)
2567:../../MMI/Resource/ABMLoader.c ****     return ABM_ENC_RETURN_KEEP_ORIGINAL;
2568:../../MMI/Resource/ABMLoader.c **** #endif
2569:../../MMI/Resource/ABMLoader.c **** 
2570:../../MMI/Resource/ABMLoader.c ****     abm_context = malloc(sizeof(ABM_Context));
 4767              	LM537:
 4768 2147 C7042440 		movl	$1537088, (%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 113


 4768      741700
 4769 214e E8000000 		call	_malloc
 4769      00
 4770 2153 8945EC   		movl	%eax, -20(%ebp)
2571:../../MMI/Resource/ABMLoader.c ****     memset(abm_context, 0, sizeof(ABM_Context));
 4772              	LM538:
 4773 2156 C7442408 		movl	$1537088, 8(%esp)
 4773      40741700 
 4774 215e C7442404 		movl	$0, 4(%esp)
 4774      00000000 
 4775 2166 8B45EC   		movl	-20(%ebp), %eax
 4776 2169 890424   		movl	%eax, (%esp)
 4777 216c E8000000 		call	_memset
 4777      00
2572:../../MMI/Resource/ABMLoader.c ****     /* initialize color index table and abm encoder context */
2573:../../MMI/Resource/ABMLoader.c ****     abm_context->color_idx_tab.color_num = 0;
 4779              	LM539:
 4780 2171 8B45EC   		movl	-20(%ebp), %eax
 4781 2174 C7803474 		movl	$0, 1537076(%eax)
 4781      17000000 
 4781      0000
2574:../../MMI/Resource/ABMLoader.c ****     memset(&abm_context->abm_enc, 0, sizeof(abm_enc_struct));
 4783              	LM540:
 4784 217e C7442408 		movl	$1076, 8(%esp)
 4784      34040000 
 4785 2186 C7442404 		movl	$0, 4(%esp)
 4785      00000000 
 4786 218e 8B45EC   		movl	-20(%ebp), %eax
 4787 2191 890424   		movl	%eax, (%esp)
 4788 2194 E8000000 		call	_memset
 4788      00
2575:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_palette_bpp = ABM_PALETTE_BPP;
 4790              	LM541:
 4791 2199 8B45EC   		movl	-20(%ebp), %eax
 4792 219c C7803C74 		movl	$16, 1537084(%eax)
 4792      17001000 
 4792      0000
2576:../../MMI/Resource/ABMLoader.c **** 
2577:../../MMI/Resource/ABMLoader.c ****     abm_context->abm_enc.is_fully_opaque = 1;
 4794              	LM542:
 4795 21a6 8B45EC   		movl	-20(%ebp), %eax
 4796 21a9 C7803004 		movl	$1, 1072(%eax)
 4796      00000100 
 4796      0000
2578:../../MMI/Resource/ABMLoader.c **** 
2579:../../MMI/Resource/ABMLoader.c ****     /* enable source key color only for PBM and BMP */
2580:../../MMI/Resource/ABMLoader.c ****     if ((image_type == IMAGE_TYPE_DEVICE_BITMAP) || (image_type == IMAGE_TYPE_BMP))
 4798              	LM543:
 4799 21b3 807DFF04 		cmpb	$4, -1(%ebp)
 4800 21b7 7408     		je	L288
 4801 21b9 807DFF01 		cmpb	$1, -1(%ebp)
 4802 21bd 7402     		je	L288
 4803 21bf EB0D     		jmp	L287
 4804              	L288:
2581:../../MMI/Resource/ABMLoader.c ****     {
2582:../../MMI/Resource/ABMLoader.c ****        abm_context->abm_enc.src_key_color_enable = 1;
 4806              	LM544:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 114


 4807 21c1 8B45EC   		movl	-20(%ebp), %eax
 4808 21c4 C7802804 		movl	$1, 1064(%eax)
 4808      00000100 
 4808      0000
 4809              	L287:
2583:../../MMI/Resource/ABMLoader.c ****     }
2584:../../MMI/Resource/ABMLoader.c **** 
2585:../../MMI/Resource/ABMLoader.c ****     /* It is necessary to identify PNG to BMP or originally BMP for 32-bit BMP files. */
2586:../../MMI/Resource/ABMLoader.c ****     if (image_type != IMAGE_TYPE_PNG)
 4811              	LM545:
 4812 21ce 807DFF13 		cmpb	$19, -1(%ebp)
 4813 21d2 740D     		je	L289
2587:../../MMI/Resource/ABMLoader.c ****     {
2588:../../MMI/Resource/ABMLoader.c ****        abm_context->abm_enc.is_windows_bmp = 1;
 4815              	LM546:
 4816 21d4 8B45EC   		movl	-20(%ebp), %eax
 4817 21d7 C7802C04 		movl	$1, 1068(%eax)
 4817      00000100 
 4817      0000
 4818              	L289:
2589:../../MMI/Resource/ABMLoader.c ****     }
2590:../../MMI/Resource/ABMLoader.c **** 
2591:../../MMI/Resource/ABMLoader.c **** 
2592:../../MMI/Resource/ABMLoader.c ****     /* load input bitmap file */
2593:../../MMI/Resource/ABMLoader.c ****     file_buf = malloc(ABMENC_BMP_FILE_BUFFER_SIZE);
 4820              	LM547:
 4821 21e1 C7042400 		movl	$16777216, (%esp)
 4821      000001
 4822 21e8 E8000000 		call	_malloc
 4822      00
 4823 21ed 8945E8   		movl	%eax, -24(%ebp)
2594:../../MMI/Resource/ABMLoader.c ****     input_bmp_file_size = load_bmp_file(file_buf, in_bmp_filename, abm_context);
 4825              	LM548:
 4826 21f0 8B45EC   		movl	-20(%ebp), %eax
 4827 21f3 89442408 		movl	%eax, 8(%esp)
 4828 21f7 8B4508   		movl	8(%ebp), %eax
 4829 21fa 89442404 		movl	%eax, 4(%esp)
 4830 21fe 8B45E8   		movl	-24(%ebp), %eax
 4831 2201 890424   		movl	%eax, (%esp)
 4832 2204 E830E6FF 		call	_load_bmp_file
 4832      FF
 4833 2209 8945F8   		movl	%eax, -8(%ebp)
2595:../../MMI/Resource/ABMLoader.c ****     if (input_bmp_file_size == 0)
 4835              	LM549:
 4836 220c 837DF800 		cmpl	$0, -8(%ebp)
 4837 2210 7522     		jne	L290
2596:../../MMI/Resource/ABMLoader.c ****     {
2597:../../MMI/Resource/ABMLoader.c ****         free(file_buf);
 4839              	LM550:
 4840 2212 8B45E8   		movl	-24(%ebp), %eax
 4841 2215 890424   		movl	%eax, (%esp)
 4842 2218 E8000000 		call	_free
 4842      00
2598:../../MMI/Resource/ABMLoader.c ****         free(abm_context);
 4844              	LM551:
 4845 221d 8B45EC   		movl	-20(%ebp), %eax
 4846 2220 890424   		movl	%eax, (%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 115


 4847 2223 E8000000 		call	_free
 4847      00
2599:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_RETURN_KEEP_ORIGINAL;
 4849              	LM552:
 4850 2228 C745D800 		movl	$0, -40(%ebp)
 4850      000000
 4851 222f E9DD0200 		jmp	L285
 4851      00
 4852              	L290:
2600:../../MMI/Resource/ABMLoader.c ****     }
2601:../../MMI/Resource/ABMLoader.c **** 
2602:../../MMI/Resource/ABMLoader.c ****     #if defined(__RESOURCE_GEN_) && defined(__COSMOS_MMI__)
2603:../../MMI/Resource/ABMLoader.c ****     if (is9slice)
2604:../../MMI/Resource/ABMLoader.c ****     {
2605:../../MMI/Resource/ABMLoader.c ****         option &= ~ABM_ENC_OPTION_FLAG_AB2;
2606:../../MMI/Resource/ABMLoader.c ****         option |= ABM_ENC_OPTION_FLAG_24BIT;
2607:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_palette_bpp = 24;
2608:../../MMI/Resource/ABMLoader.c **** 
2609:../../MMI/Resource/ABMLoader.c ****     }
2610:../../MMI/Resource/ABMLoader.c ****     #endif
2611:../../MMI/Resource/ABMLoader.c **** 
2612:../../MMI/Resource/ABMLoader.c ****     /* Prepare image data and color table */
2613:../../MMI/Resource/ABMLoader.c ****     ret = abmenc_build_color_index_table(abm_context);
 4854              	LM553:
 4855 2234 8B45EC   		movl	-20(%ebp), %eax
 4856 2237 890424   		movl	%eax, (%esp)
 4857 223a E8CBE8FF 		call	_abmenc_build_color_index_table
 4857      FF
 4858 223f 8945F4   		movl	%eax, -12(%ebp)
2614:../../MMI/Resource/ABMLoader.c **** 
2615:../../MMI/Resource/ABMLoader.c ****     /* Check whether the normal/alpha color number exceed AB2/ABM design limitation or not. */
2616:../../MMI/Resource/ABMLoader.c ****     /* If so, reduce color depth to 16bits to make sure resource can be genreated. */
2617:../../MMI/Resource/ABMLoader.c ****     normal_color_cnt    = get_normal_color_num(abm_context);
 4860              	LM554:
 4861 2242 8B45EC   		movl	-20(%ebp), %eax
 4862 2245 890424   		movl	%eax, (%esp)
 4863 2248 E8BDE0FF 		call	_get_normal_color_num
 4863      FF
 4864 224d 8945E4   		movl	%eax, -28(%ebp)
2618:../../MMI/Resource/ABMLoader.c ****     alpha_color_cnt     = abm_context->color_idx_tab.color_num - normal_color_cnt;
 4866              	LM555:
 4867 2250 8B45EC   		movl	-20(%ebp), %eax
 4868 2253 8B55E4   		movl	-28(%ebp), %edx
 4869 2256 8B803474 		movl	1537076(%eax), %eax
 4869      1700
 4870 225c 29D0     		subl	%edx, %eax
 4871 225e 8945E0   		movl	%eax, -32(%ebp)
2619:../../MMI/Resource/ABMLoader.c ****     if (normal_color_cnt > 65535 || alpha_color_cnt > 65535)
 4873              	LM556:
 4874 2261 817DE4FF 		cmpl	$65535, -28(%ebp)
 4874      FF0000
 4875 2268 770E     		ja	L292
 4876 226a 817DE0FF 		cmpl	$65535, -32(%ebp)
 4876      FF0000
 4877 2271 7705     		ja	L292
 4878 2273 E9110100 		jmp	L291
 4878      00
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 116


 4879              	L292:
2620:../../MMI/Resource/ABMLoader.c ****     {
2621:../../MMI/Resource/ABMLoader.c ****         free(abm_context);
 4881              	LM557:
 4882 2278 8B45EC   		movl	-20(%ebp), %eax
 4883 227b 890424   		movl	%eax, (%esp)
 4884 227e E8000000 		call	_free
 4884      00
2622:../../MMI/Resource/ABMLoader.c ****         free(file_buf);        
 4886              	LM558:
 4887 2283 8B45E8   		movl	-24(%ebp), %eax
 4888 2286 890424   		movl	%eax, (%esp)
 4889 2289 E8000000 		call	_free
 4889      00
2623:../../MMI/Resource/ABMLoader.c ****         abm_context = malloc(sizeof(ABM_Context));
 4891              	LM559:
 4892 228e C7042440 		movl	$1537088, (%esp)
 4892      741700
 4893 2295 E8000000 		call	_malloc
 4893      00
 4894 229a 8945EC   		movl	%eax, -20(%ebp)
2624:../../MMI/Resource/ABMLoader.c ****         memset(abm_context, 0, sizeof(ABM_Context));
 4896              	LM560:
 4897 229d C7442408 		movl	$1537088, 8(%esp)
 4897      40741700 
 4898 22a5 C7442404 		movl	$0, 4(%esp)
 4898      00000000 
 4899 22ad 8B45EC   		movl	-20(%ebp), %eax
 4900 22b0 890424   		movl	%eax, (%esp)
 4901 22b3 E8000000 		call	_memset
 4901      00
2625:../../MMI/Resource/ABMLoader.c ****         /* initialize color index table and abm encoder context */
2626:../../MMI/Resource/ABMLoader.c ****         abm_context->color_idx_tab.color_num = 0;
 4903              	LM561:
 4904 22b8 8B45EC   		movl	-20(%ebp), %eax
 4905 22bb C7803474 		movl	$0, 1537076(%eax)
 4905      17000000 
 4905      0000
2627:../../MMI/Resource/ABMLoader.c ****         memset(&abm_context->abm_enc, 0, sizeof(abm_enc_struct));
 4907              	LM562:
 4908 22c5 C7442408 		movl	$1076, 8(%esp)
 4908      34040000 
 4909 22cd C7442404 		movl	$0, 4(%esp)
 4909      00000000 
 4910 22d5 8B45EC   		movl	-20(%ebp), %eax
 4911 22d8 890424   		movl	%eax, (%esp)
 4912 22db E8000000 		call	_memset
 4912      00
2628:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_palette_bpp = 16;
 4914              	LM563:
 4915 22e0 8B45EC   		movl	-20(%ebp), %eax
 4916 22e3 C7803C74 		movl	$16, 1537084(%eax)
 4916      17001000 
 4916      0000
2629:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_enc.is_fully_opaque = 1;
 4918              	LM564:
 4919 22ed 8B45EC   		movl	-20(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 117


 4920 22f0 C7803004 		movl	$1, 1072(%eax)
 4920      00000100 
 4920      0000
2630:../../MMI/Resource/ABMLoader.c **** 
2631:../../MMI/Resource/ABMLoader.c ****         /* enable source key color only for PBM and BMP */
2632:../../MMI/Resource/ABMLoader.c ****         if ((image_type == IMAGE_TYPE_DEVICE_BITMAP) || (image_type == IMAGE_TYPE_BMP))
 4922              	LM565:
 4923 22fa 807DFF04 		cmpb	$4, -1(%ebp)
 4924 22fe 7408     		je	L294
 4925 2300 807DFF01 		cmpb	$1, -1(%ebp)
 4926 2304 7402     		je	L294
 4927 2306 EB0D     		jmp	L293
 4928              	L294:
2633:../../MMI/Resource/ABMLoader.c ****         {
2634:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.src_key_color_enable = 1;
 4930              	LM566:
 4931 2308 8B45EC   		movl	-20(%ebp), %eax
 4932 230b C7802804 		movl	$1, 1064(%eax)
 4932      00000100 
 4932      0000
 4933              	L293:
2635:../../MMI/Resource/ABMLoader.c ****         }
2636:../../MMI/Resource/ABMLoader.c **** 
2637:../../MMI/Resource/ABMLoader.c ****         /* It is necessary to identify PNG to BMP or originally BMP for 32-bit BMP files. */
2638:../../MMI/Resource/ABMLoader.c ****         if (image_type != IMAGE_TYPE_PNG)
 4935              	LM567:
 4936 2315 807DFF13 		cmpb	$19, -1(%ebp)
 4937 2319 740D     		je	L295
2639:../../MMI/Resource/ABMLoader.c ****         {
2640:../../MMI/Resource/ABMLoader.c ****             abm_context->abm_enc.is_windows_bmp = 1;
 4939              	LM568:
 4940 231b 8B45EC   		movl	-20(%ebp), %eax
 4941 231e C7802C04 		movl	$1, 1068(%eax)
 4941      00000100 
 4941      0000
 4942              	L295:
2641:../../MMI/Resource/ABMLoader.c ****         }
2642:../../MMI/Resource/ABMLoader.c **** 
2643:../../MMI/Resource/ABMLoader.c ****         /* load input bitmap file */
2644:../../MMI/Resource/ABMLoader.c ****         file_buf = malloc(ABMENC_BMP_FILE_BUFFER_SIZE);
 4944              	LM569:
 4945 2328 C7042400 		movl	$16777216, (%esp)
 4945      000001
 4946 232f E8000000 		call	_malloc
 4946      00
 4947 2334 8945E8   		movl	%eax, -24(%ebp)
2645:../../MMI/Resource/ABMLoader.c ****         input_bmp_file_size = load_bmp_file(file_buf, in_bmp_filename, abm_context);
 4949              	LM570:
 4950 2337 8B45EC   		movl	-20(%ebp), %eax
 4951 233a 89442408 		movl	%eax, 8(%esp)
 4952 233e 8B4508   		movl	8(%ebp), %eax
 4953 2341 89442404 		movl	%eax, 4(%esp)
 4954 2345 8B45E8   		movl	-24(%ebp), %eax
 4955 2348 890424   		movl	%eax, (%esp)
 4956 234b E8E9E4FF 		call	_load_bmp_file
 4956      FF
 4957 2350 8945F8   		movl	%eax, -8(%ebp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 118


2646:../../MMI/Resource/ABMLoader.c ****         if (input_bmp_file_size == 0)
 4959              	LM571:
 4960 2353 837DF800 		cmpl	$0, -8(%ebp)
 4961 2357 7522     		jne	L296
2647:../../MMI/Resource/ABMLoader.c ****         {
2648:../../MMI/Resource/ABMLoader.c ****             free(file_buf);
 4963              	LM572:
 4964 2359 8B45E8   		movl	-24(%ebp), %eax
 4965 235c 890424   		movl	%eax, (%esp)
 4966 235f E8000000 		call	_free
 4966      00
2649:../../MMI/Resource/ABMLoader.c ****             free(abm_context);
 4968              	LM573:
 4969 2364 8B45EC   		movl	-20(%ebp), %eax
 4970 2367 890424   		movl	%eax, (%esp)
 4971 236a E8000000 		call	_free
 4971      00
2650:../../MMI/Resource/ABMLoader.c ****             return ABM_ENC_RETURN_KEEP_ORIGINAL;
 4973              	LM574:
 4974 236f C745D800 		movl	$0, -40(%ebp)
 4974      000000
 4975 2376 E9960100 		jmp	L285
 4975      00
 4976              	L296:
2651:../../MMI/Resource/ABMLoader.c ****         }
2652:../../MMI/Resource/ABMLoader.c **** 
2653:../../MMI/Resource/ABMLoader.c ****         ret = abmenc_build_color_index_table(abm_context);        
 4978              	LM575:
 4979 237b 8B45EC   		movl	-20(%ebp), %eax
 4980 237e 890424   		movl	%eax, (%esp)
 4981 2381 E884E7FF 		call	_abmenc_build_color_index_table
 4981      FF
 4982 2386 8945F4   		movl	%eax, -12(%ebp)
 4983              	L291:
2654:../../MMI/Resource/ABMLoader.c ****     }
2655:../../MMI/Resource/ABMLoader.c ****     
2656:../../MMI/Resource/ABMLoader.c ****     /* Save color number for image information report */
2657:../../MMI/Resource/ABMLoader.c ****     if(processData!=NULL){
 4985              	LM576:
 4986 2389 837D2C00 		cmpl	$0, 44(%ebp)
 4987 238d 7412     		je	L297
2658:../../MMI/Resource/ABMLoader.c ****         processData->color_num = abm_context->color_idx_tab.color_num;
 4989              	LM577:
 4990 238f 8B452C   		movl	44(%ebp), %eax
 4991 2392 8B55EC   		movl	-20(%ebp), %edx
 4992 2395 8B923474 		movl	1537076(%edx), %edx
 4992      1700
 4993 239b 89901802 		movl	%edx, 536(%eax)
 4993      0000
 4994              	L297:
2659:../../MMI/Resource/ABMLoader.c ****     }
2660:../../MMI/Resource/ABMLoader.c ****     
2661:../../MMI/Resource/ABMLoader.c ****     if (ret != ABM_ENC_OK)
 4996              	LM578:
 4997 23a1 837DF403 		cmpl	$3, -12(%ebp)
 4998 23a5 7445     		je	L298
2662:../../MMI/Resource/ABMLoader.c ****     {
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 119


2663:../../MMI/Resource/ABMLoader.c ****         free(file_buf);
 5000              	LM579:
 5001 23a7 8B45E8   		movl	-24(%ebp), %eax
 5002 23aa 890424   		movl	%eax, (%esp)
 5003 23ad E8000000 		call	_free
 5003      00
2664:../../MMI/Resource/ABMLoader.c ****         free(abm_context);
 5005              	LM580:
 5006 23b2 8B45EC   		movl	-20(%ebp), %eax
 5007 23b5 890424   		movl	%eax, (%esp)
 5008 23b8 E8000000 		call	_free
 5008      00
2665:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_E("[ABM enc] Unique color number exceed limitation(384000):%s", in_bmp_filename)
 5010              	LM581:
 5011 23bd 8B4508   		movl	8(%ebp), %eax
 5012 23c0 8944240C 		movl	%eax, 12(%esp)
 5013 23c4 C7442408 		movl	$LC27, 8(%esp)
 5013      E0200000 
 5014 23cc C7442404 		movl	$LC23, 4(%esp)
 5014      C8070000 
 5015 23d4 C7042403 		movl	$3, (%esp)
 5015      000000
 5016 23db E8000000 		call	_reslog_adaptor_log
 5016      00
2666:../../MMI/Resource/ABMLoader.c ****         return  ABM_ENC_INPUT_BITMAP_ERROR;
 5018              	LM582:
 5019 23e0 C745D8FE 		movl	$-2, -40(%ebp)
 5019      FFFFFF
 5020 23e7 E9250100 		jmp	L285
 5020      00
 5021              	L298:
2667:../../MMI/Resource/ABMLoader.c ****     }
2668:../../MMI/Resource/ABMLoader.c ****     *width  = abm_context->abm_enc.bmp_width;
 5023              	LM583:
 5024 23ec 8B5520   		movl	32(%ebp), %edx
 5025 23ef 8B45EC   		movl	-20(%ebp), %eax
 5026 23f2 8B00     		movl	(%eax), %eax
 5027 23f4 8902     		movl	%eax, (%edx)
2669:../../MMI/Resource/ABMLoader.c ****     *height = abm_context->abm_enc.bmp_height;
 5029              	LM584:
 5030 23f6 8B5524   		movl	36(%ebp), %edx
 5031 23f9 8B45EC   		movl	-20(%ebp), %eax
 5032 23fc 8B4004   		movl	4(%eax), %eax
 5033 23ff 8902     		movl	%eax, (%edx)
2670:../../MMI/Resource/ABMLoader.c **** 
2671:../../MMI/Resource/ABMLoader.c **** 
2672:../../MMI/Resource/ABMLoader.c ****     do
2673:../../MMI/Resource/ABMLoader.c ****     {
2674:../../MMI/Resource/ABMLoader.c **** 
2675:../../MMI/Resource/ABMLoader.c ****     #if defined(__COSMOS_MMI__)
2676:../../MMI/Resource/ABMLoader.c ****     if (option & ABM_ENC_OPTION_FLAG_24BIT)
2677:../../MMI/Resource/ABMLoader.c ****     {  
2678:../../MMI/Resource/ABMLoader.c ****         ret_size = abmenc_encode(data, abm_context);
2679:../../MMI/Resource/ABMLoader.c ****         ret = ABM_ENC_RETURN_USE_ABM; 
2680:../../MMI/Resource/ABMLoader.c ****         break;
2681:../../MMI/Resource/ABMLoader.c ****     }  
2682:../../MMI/Resource/ABMLoader.c ****     #endif
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 120


2683:../../MMI/Resource/ABMLoader.c ****     
2684:../../MMI/Resource/ABMLoader.c **** //#if (MAIN_MEDIA_LAYER_BITS_PER_PIXEL != 24)
2685:../../MMI/Resource/ABMLoader.c ****     /* check if AB2 size is smaller */
2686:../../MMI/Resource/ABMLoader.c ****     if (option & ABM_ENC_OPTION_FLAG_AB2)
 5035              	LM585:
 5036 2401 8B4514   		movl	20(%ebp), %eax
 5037 2404 83E004   		andl	$4, %eax
 5038 2407 85C0     		testl	%eax, %eax
 5039 2409 742A     		je	L300
2687:../../MMI/Resource/ABMLoader.c ****     {
2688:../../MMI/Resource/ABMLoader.c ****         U32 ab2_size = ab2enc_encode(data, abm_context);
 5041              	LM586:
 5042              	LBB34:
 5043 240b 8B45EC   		movl	-20(%ebp), %eax
 5044 240e 89442404 		movl	%eax, 4(%esp)
 5045 2412 8B4518   		movl	24(%ebp), %eax
 5046 2415 890424   		movl	%eax, (%esp)
 5047 2418 E86AF4FF 		call	_ab2enc_encode
 5047      FF
 5048 241d 8945DC   		movl	%eax, -36(%ebp)
2689:../../MMI/Resource/ABMLoader.c ****         if (ab2_size < ret_size)
 5050              	LM587:
 5051 2420 8B45DC   		movl	-36(%ebp), %eax
 5052 2423 3B45F0   		cmpl	-16(%ebp), %eax
 5053 2426 730D     		jae	L300
2690:../../MMI/Resource/ABMLoader.c ****         {
2691:../../MMI/Resource/ABMLoader.c ****             ret_size = ab2_size;
 5055              	LM588:
 5056 2428 8B45DC   		movl	-36(%ebp), %eax
 5057 242b 8945F0   		movl	%eax, -16(%ebp)
2692:../../MMI/Resource/ABMLoader.c ****             ret = ABM_ENC_RETURN_USE_AB2; 
 5059              	LM589:
 5060 242e C745F402 		movl	$2, -12(%ebp)
 5060      000000
 5061              	L300:
2693:../../MMI/Resource/ABMLoader.c ****         }
2694:../../MMI/Resource/ABMLoader.c ****     }
2695:../../MMI/Resource/ABMLoader.c **** //#endif
2696:../../MMI/Resource/ABMLoader.c ****     
2697:../../MMI/Resource/ABMLoader.c ****     /* check if ABM size is smaller */
2698:../../MMI/Resource/ABMLoader.c ****     if (option & ABM_ENC_OPTION_FLAG_ABM)
 5063              	LM590:
 5064 2435 8B4514   		movl	20(%ebp), %eax
 5065              	LBE34:
 5066 2438 83E002   		andl	$2, %eax
 5067 243b 85C0     		testl	%eax, %eax
 5068 243d 7432     		je	L302
2699:../../MMI/Resource/ABMLoader.c ****     {
2700:../../MMI/Resource/ABMLoader.c ****         U32 abm_size = caculate_abm_size(abm_context);
 5070              	LM591:
 5071              	LBB35:
 5072 243f 8B45EC   		movl	-20(%ebp), %eax
 5073 2442 890424   		movl	%eax, (%esp)
 5074 2445 E805FAFF 		call	_caculate_abm_size
 5074      FF
 5075 244a 8945DC   		movl	%eax, -36(%ebp)
2701:../../MMI/Resource/ABMLoader.c ****         if (abm_size < ret_size)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 121


 5077              	LM592:
 5078 244d 8B45DC   		movl	-36(%ebp), %eax
 5079 2450 3B45F0   		cmpl	-16(%ebp), %eax
 5080 2453 731C     		jae	L302
2702:../../MMI/Resource/ABMLoader.c ****         {
2703:../../MMI/Resource/ABMLoader.c ****             ret_size = abmenc_encode(data, abm_context);
 5082              	LM593:
 5083 2455 8B45EC   		movl	-20(%ebp), %eax
 5084 2458 89442404 		movl	%eax, 4(%esp)
 5085 245c 8B4518   		movl	24(%ebp), %eax
 5086 245f 890424   		movl	%eax, (%esp)
 5087 2462 E8F2F4FF 		call	_abmenc_encode
 5087      FF
 5088 2467 8945F0   		movl	%eax, -16(%ebp)
2704:../../MMI/Resource/ABMLoader.c ****             ret = ABM_ENC_RETURN_USE_ABM; 
 5090              	LM594:
 5091 246a C745F401 		movl	$1, -12(%ebp)
 5091      000000
 5092              	L302:
2705:../../MMI/Resource/ABMLoader.c ****         }
2706:../../MMI/Resource/ABMLoader.c ****     }
2707:../../MMI/Resource/ABMLoader.c **** 
2708:../../MMI/Resource/ABMLoader.c ****     /* check if original size is smaller */
2709:../../MMI/Resource/ABMLoader.c ****     if (option & ABM_ENC_OPTION_FLAG_ORIGINAL)
 5094              	LM595:
 5095 2471 8B4514   		movl	20(%ebp), %eax
 5096              	LBE35:
 5097 2474 83E001   		andl	$1, %eax
 5098 2477 85C0     		testl	%eax, %eax
 5099 2479 7432     		je	L299
2710:../../MMI/Resource/ABMLoader.c ****     {
2711:../../MMI/Resource/ABMLoader.c ****         switch (image_type)
 5101              	LM596:
 5102 247b 0FB645FF 		movzbl	-1(%ebp), %eax
 5103 247f 8945D4   		movl	%eax, -44(%ebp)
 5104 2482 837DD404 		cmpl	$4, -44(%ebp)
 5105 2486 7425     		je	L299
 5106 2488 837DD404 		cmpl	$4, -44(%ebp)
 5107 248c 7F08     		jg	L312
 5108 248e 837DD401 		cmpl	$1, -44(%ebp)
 5109 2492 7404     		je	L307
 5110 2494 EB17     		jmp	L299
 5111              	L312:
 5112 2496 EB15     		jmp	L299
 5113              	L307:
2712:../../MMI/Resource/ABMLoader.c ****         {
2713:../../MMI/Resource/ABMLoader.c ****             case IMAGE_TYPE_PNG:
2714:../../MMI/Resource/ABMLoader.c ****             {
2715:../../MMI/Resource/ABMLoader.c ****                 /* no information, do nothing */ 
2716:../../MMI/Resource/ABMLoader.c ****                 break;
2717:../../MMI/Resource/ABMLoader.c ****             }
2718:../../MMI/Resource/ABMLoader.c **** 
2719:../../MMI/Resource/ABMLoader.c ****             case IMAGE_TYPE_BMP:
2720:../../MMI/Resource/ABMLoader.c ****             {
2721:../../MMI/Resource/ABMLoader.c ****                 if (input_bmp_file_size < ret_size)
 5115              	LM597:
 5116 2498 8B45F8   		movl	-8(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 122


 5117 249b 3B45F0   		cmpl	-16(%ebp), %eax
 5118 249e 730D     		jae	L299
2722:../../MMI/Resource/ABMLoader.c ****                 {
2723:../../MMI/Resource/ABMLoader.c ****                     ret_size = input_bmp_file_size;
 5120              	LM598:
 5121 24a0 8B45F8   		movl	-8(%ebp), %eax
 5122 24a3 8945F0   		movl	%eax, -16(%ebp)
2724:../../MMI/Resource/ABMLoader.c ****                     ret = ABM_ENC_RETURN_KEEP_ORIGINAL; 
 5124              	LM599:
 5125 24a6 C745F400 		movl	$0, -12(%ebp)
 5125      000000
 5126              	L299:
2725:../../MMI/Resource/ABMLoader.c ****                 }        
2726:../../MMI/Resource/ABMLoader.c ****                 break;
2727:../../MMI/Resource/ABMLoader.c ****             }
2728:../../MMI/Resource/ABMLoader.c ****                 
2729:../../MMI/Resource/ABMLoader.c ****             case IMAGE_TYPE_DEVICE_BITMAP:
2730:../../MMI/Resource/ABMLoader.c ****             {   
2731:../../MMI/Resource/ABMLoader.c ****                 /*
2732:../../MMI/Resource/ABMLoader.c ****                 U32 pbm_size = caculate_pbm_size(*width, *height, dev_bmp_bpp);
2733:../../MMI/Resource/ABMLoader.c ****                 if (pbm_size < ret_size)
2734:../../MMI/Resource/ABMLoader.c ****                 {
2735:../../MMI/Resource/ABMLoader.c ****                     ret_size = pbm_size;
2736:../../MMI/Resource/ABMLoader.c ****                     ret = ABM_ENC_RETURN_KEEP_ORIGINAL; 
2737:../../MMI/Resource/ABMLoader.c ****                 }
2738:../../MMI/Resource/ABMLoader.c ****                 */
2739:../../MMI/Resource/ABMLoader.c ****                 break;           
2740:../../MMI/Resource/ABMLoader.c ****             }
2741:../../MMI/Resource/ABMLoader.c ****                 
2742:../../MMI/Resource/ABMLoader.c ****             default:
2743:../../MMI/Resource/ABMLoader.c ****                 /* not supported, do nothing */
2744:../../MMI/Resource/ABMLoader.c ****                 break;
2745:../../MMI/Resource/ABMLoader.c ****         }
2746:../../MMI/Resource/ABMLoader.c ****     } /* if (option & ABM_ENC_OPTION_FLAG_ORIGINAL) */
2747:../../MMI/Resource/ABMLoader.c **** 
2748:../../MMI/Resource/ABMLoader.c ****     }while(0);
2749:../../MMI/Resource/ABMLoader.c **** 
2750:../../MMI/Resource/ABMLoader.c ****     #if defined(__RESOURCE_GEN_) && defined(__COSMOS_MMI__)
2751:../../MMI/Resource/ABMLoader.c **** 
2752:../../MMI/Resource/ABMLoader.c ****     if (is9slice)
2753:../../MMI/Resource/ABMLoader.c ****     {
2754:../../MMI/Resource/ABMLoader.c ****         abm_context->abm_palette_bpp = ABM_PALETTE_BPP;
2755:../../MMI/Resource/ABMLoader.c **** 
2756:../../MMI/Resource/ABMLoader.c ****     }
2757:../../MMI/Resource/ABMLoader.c ****     #endif
2758:../../MMI/Resource/ABMLoader.c **** 
2759:../../MMI/Resource/ABMLoader.c ****     /* Error handling */
2760:../../MMI/Resource/ABMLoader.c ****     if (ret_size == ABM_ENC_MAX_FILE_SIZE)
 5128              	LM600:
 5129 24ad 837DF0FF 		cmpl	$-1, -16(%ebp)
 5130 24b1 753A     		jne	L313
2761:../../MMI/Resource/ABMLoader.c ****     {
2762:../../MMI/Resource/ABMLoader.c ****         *width = 0;
 5132              	LM601:
 5133 24b3 8B4520   		movl	32(%ebp), %eax
 5134 24b6 C7000000 		movl	$0, (%eax)
 5134      0000
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 123


2763:../../MMI/Resource/ABMLoader.c ****         *height = 0;
 5136              	LM602:
 5137 24bc 8B4524   		movl	36(%ebp), %eax
 5138 24bf C7000000 		movl	$0, (%eax)
 5138      0000
2764:../../MMI/Resource/ABMLoader.c ****         *size = 0;
 5140              	LM603:
 5141 24c5 8B451C   		movl	28(%ebp), %eax
 5142 24c8 C7000000 		movl	$0, (%eax)
 5142      0000
2765:../../MMI/Resource/ABMLoader.c ****         free(file_buf);
 5144              	LM604:
 5145 24ce 8B45E8   		movl	-24(%ebp), %eax
 5146 24d1 890424   		movl	%eax, (%esp)
 5147 24d4 E8000000 		call	_free
 5147      00
2766:../../MMI/Resource/ABMLoader.c ****         free(abm_context);
 5149              	LM605:
 5150 24d9 8B45EC   		movl	-20(%ebp), %eax
 5151 24dc 890424   		movl	%eax, (%esp)
 5152 24df E8000000 		call	_free
 5152      00
2767:../../MMI/Resource/ABMLoader.c ****         return ABM_ENC_RETURN_KEEP_ORIGINAL;
 5154              	LM606:
 5155 24e4 C745D800 		movl	$0, -40(%ebp)
 5155      000000
 5156 24eb EB24     		jmp	L285
 5157              	L313:
2768:../../MMI/Resource/ABMLoader.c ****     }
2769:../../MMI/Resource/ABMLoader.c **** 
2770:../../MMI/Resource/ABMLoader.c ****     *size = (S32)ret_size;
 5159              	LM607:
 5160 24ed 8B551C   		movl	28(%ebp), %edx
 5161 24f0 8B45F0   		movl	-16(%ebp), %eax
 5162 24f3 8902     		movl	%eax, (%edx)
2771:../../MMI/Resource/ABMLoader.c **** 
2772:../../MMI/Resource/ABMLoader.c ****     free(file_buf);
 5164              	LM608:
 5165 24f5 8B45E8   		movl	-24(%ebp), %eax
 5166 24f8 890424   		movl	%eax, (%esp)
 5167 24fb E8000000 		call	_free
 5167      00
2773:../../MMI/Resource/ABMLoader.c ****     free(abm_context);
 5169              	LM609:
 5170 2500 8B45EC   		movl	-20(%ebp), %eax
 5171 2503 890424   		movl	%eax, (%esp)
 5172 2506 E8000000 		call	_free
 5172      00
2774:../../MMI/Resource/ABMLoader.c ****     return ret;
 5174              	LM610:
 5175 250b 8B45F4   		movl	-12(%ebp), %eax
 5176 250e 8945D8   		movl	%eax, -40(%ebp)
2775:../../MMI/Resource/ABMLoader.c **** }
 5178              	LM611:
 5179              	L285:
 5180              	LBE33:
 5181 2511 8B45D8   		movl	-40(%ebp), %eax
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 124


 5182 2514 C9       		leave
 5183 2515 C3       		ret
 5200              	Lscope27:
 5202              	LC28:
 5203 2516 41424D4C 		.ascii "ABMLoader: trying to load %s\0"
 5203      6F616465 
 5203      723A2074 
 5203      7279696E 
 5203      6720746F 
 5204              	LC29:
 5205 2533 5B41424D 		.ascii "[ABMLoader][%s] quality = %d\12\0"
 5205      4C6F6164 
 5205      65725D5B 
 5205      25735D20 
 5205      7175616C 
 5206              	LC30:
 5207 2551 696D6167 		.ascii "image is too big:%s\12\0"
 5207      65206973 
 5207      20746F6F 
 5207      20626967 
 5207      3A25730A 
 5208              	LC31:
 5209 2566 77622B00 		.ascii "wb+\0"
 5210              	LC32:
 5211 256a 0A457272 		.ascii "\12Error creating %s\0"
 5211      6F722063 
 5211      72656174 
 5211      696E6720 
 5211      257300
 5212              	LC33:
 5213 257d 256300   		.ascii "%c\0"
 5214              	LC34:
 5215 2580 25632563 		.ascii "%c%c%c\0"
 5215      256300
 5216              	LC35:
 5217 2587 7B0A0900 		.ascii "{\12\11\0"
 5218              	LC36:
 5219 258b 30782530 		.ascii "0x%02X, \0"
 5219      32582C20 
 5219      00
 5220 2594 8DB60000 		.align 32
 5220      00008DBF 
 5220      00000000 
 5221              	LC37:
 5222 25a0 30782530 		.ascii "0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X,\0"
 5222      32582C20 
 5222      30782530 
 5222      32582C20 
 5222      30782530 
 5223              	LC38:
 5224 25d0 0A0900   		.ascii "\12\11\0"
 5225              	LC39:
 5226 25d3 0A7D3B00 		.ascii "\12};\0"
 5234              	.globl _ABMLoader
 5236              	_ABMLoader:
2776:../../MMI/Resource/ABMLoader.c **** 
2777:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 125


2778:../../MMI/Resource/ABMLoader.c **** /* 
2779:../../MMI/Resource/ABMLoader.c ****  * RESOURCE GENERATOR ONLY FUNCTIONS
2780:../../MMI/Resource/ABMLoader.c ****  */
2781:../../MMI/Resource/ABMLoader.c **** #if defined(__RESOURCE_GEN_)
2782:../../MMI/Resource/ABMLoader.c **** 
2783:../../MMI/Resource/ABMLoader.c **** #ifdef ABM_ENC_UNIT_TEST
2784:../../MMI/Resource/ABMLoader.c **** #include <time.h>
2785:../../MMI/Resource/ABMLoader.c **** /* 
2786:../../MMI/Resource/ABMLoader.c ****  * unit test for abm encoder
2787:../../MMI/Resource/ABMLoader.c ****  *
2788:../../MMI/Resource/ABMLoader.c ****  * return 0: successful, otherwise: failed
2789:../../MMI/Resource/ABMLoader.c ****  */
2790:../../MMI/Resource/ABMLoader.c **** S32 abmenc_unit_test(void)
2791:../../MMI/Resource/ABMLoader.c **** {
2792:../../MMI/Resource/ABMLoader.c ****     S32 si, i;
2793:../../MMI/Resource/ABMLoader.c **** 
2794:../../MMI/Resource/ABMLoader.c ****     abm_context->color_idx_tab.color_num = 0;
2795:../../MMI/Resource/ABMLoader.c ****     srand((unsigned)time(NULL));
2796:../../MMI/Resource/ABMLoader.c **** 
2797:../../MMI/Resource/ABMLoader.c ****     si = search_color(ARGB(255, 255, 255, 255));
2798:../../MMI/Resource/ABMLoader.c ****     add_color_if_new(ARGB(255, 255, 255, 255));
2799:../../MMI/Resource/ABMLoader.c ****     si = search_color(ARGB(255, 255, 255, 255));
2800:../../MMI/Resource/ABMLoader.c ****     add_color_if_new(ARGB(255, 255, 255, 254));
2801:../../MMI/Resource/ABMLoader.c ****     si = search_color(ARGB(255, 255, 255, 0));
2802:../../MMI/Resource/ABMLoader.c ****     add_color_if_new(ARGB(0, 255, 255, 254));
2803:../../MMI/Resource/ABMLoader.c ****     si = search_color(ARGB(255, 255, 255, 254));
2804:../../MMI/Resource/ABMLoader.c **** 
2805:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < 1000; i++)
2806:../../MMI/Resource/ABMLoader.c ****     {
2807:../../MMI/Resource/ABMLoader.c ****         add_color_if_new(rand());
2808:../../MMI/Resource/ABMLoader.c ****     }
2809:../../MMI/Resource/ABMLoader.c **** 
2810:../../MMI/Resource/ABMLoader.c ****     /* make sure the color table is descending */        
2811:../../MMI/Resource/ABMLoader.c ****     for (i = 0; i < abm_context->color_idx_tab.color_num - 1; i++)
2812:../../MMI/Resource/ABMLoader.c ****     {        
2813:../../MMI/Resource/ABMLoader.c ****         if (abm_context->color_idx_tab.color_table[i + 1] > abm_context->color_idx_tab.color_table[
2814:../../MMI/Resource/ABMLoader.c ****         {
2815:../../MMI/Resource/ABMLoader.c ****             return ABMENC_UNIT_TEST_FAILED;
2816:../../MMI/Resource/ABMLoader.c ****         }
2817:../../MMI/Resource/ABMLoader.c ****     }
2818:../../MMI/Resource/ABMLoader.c **** 
2819:../../MMI/Resource/ABMLoader.c ****     return ABMENC_UNIT_TEST_SUCCESSFUL;
2820:../../MMI/Resource/ABMLoader.c **** }
2821:../../MMI/Resource/ABMLoader.c **** #endif /* ABM_ENC_UNIT_TEST */
2822:../../MMI/Resource/ABMLoader.c **** 
2823:../../MMI/Resource/ABMLoader.c **** #if defined(__MMI_RESOURCE_IMAGE_COMPRESS__)
2824:../../MMI/Resource/ABMLoader.c **** extern U8* mmi_rg_compress_image(U8 *buffer, S32 org_size, S32 *dest_size, S32 image_type, U32 widt
2825:../../MMI/Resource/ABMLoader.c **** extern U8* mmi_rg_output_compressed_image(U8 *dest_buf, S32 dest_size,  FILE *outfile);
2826:../../MMI/Resource/ABMLoader.c **** #endif /* __MMI_RESOURCE_IMAGE_COMPRESS__ */
2827:../../MMI/Resource/ABMLoader.c **** 
2828:../../MMI/Resource/ABMLoader.c **** /*****************************************************************************
2829:../../MMI/Resource/ABMLoader.c ****  * FUNCTION
2830:../../MMI/Resource/ABMLoader.c ****  *  ABMLoader
2831:../../MMI/Resource/ABMLoader.c ****  * DESCRIPTION
2832:../../MMI/Resource/ABMLoader.c ****  *  ABM loader
2833:../../MMI/Resource/ABMLoader.c ****  * PARAMETERS
2834:../../MMI/Resource/ABMLoader.c ****  *  in_filename     [IN] input filename
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 126


2835:../../MMI/Resource/ABMLoader.c ****  *  out_filename    [IN] output filename
2836:../../MMI/Resource/ABMLoader.c ****  *  encode_option   [IN] encode options
2837:../../MMI/Resource/ABMLoader.c ****  * RETURNS
2838:../../MMI/Resource/ABMLoader.c ****  *  return value
2839:../../MMI/Resource/ABMLoader.c ****  *****************************************************************************/
2840:../../MMI/Resource/ABMLoader.c **** S32 ABMLoader(U8 *in_filename, U8 *out_filename, S32 encode_option, MMI_BOOL is9slice, U8* _9slice_
2841:../../MMI/Resource/ABMLoader.c **** {
 5238              	LM612:
 5239 25d7 55       		pushl	%ebp
 5240 25d8 89E5     		movl	%esp, %ebp
 5241 25da 83EC78   		subl	$120, %esp
2842:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2843:../../MMI/Resource/ABMLoader.c ****     /* Local Variables                                                */
2844:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2845:../../MMI/Resource/ABMLoader.c ****     U8 *buffer = NULL/*[ABMENC_BMP_FILE_BUFFER_SIZE]*/;
 5243              	LM613:
 5244              	LBB36:
 5245 25dd C745FC00 		movl	$0, -4(%ebp)
 5245      000000
2846:../../MMI/Resource/ABMLoader.c ****     S32 width, height, size, ret, i;
2847:../../MMI/Resource/ABMLoader.c ****     U32 width_height;
2848:../../MMI/Resource/ABMLoader.c ****     FILE *outfile;
2849:../../MMI/Resource/ABMLoader.c ****     U8 image_type = 0;
 5247              	LM614:
 5248 25e4 C645DF00 		movb	$0, -33(%ebp)
2850:../../MMI/Resource/ABMLoader.c **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
2851:../../MMI/Resource/ABMLoader.c ****     U32 enfb_width, enfb_height;
2852:../../MMI/Resource/ABMLoader.c ****     S32 enfb_ret;
2853:../../MMI/Resource/ABMLoader.c **** #endif
2854:../../MMI/Resource/ABMLoader.c ****     S32 data_size;
2855:../../MMI/Resource/ABMLoader.c ****     // The quality may be OFFLINE_IMAGE_PARAM_QUALITY_HIGH, OFFLINE_IMAGE_PARAM_QUALITY_MEDIUM or O
2856:../../MMI/Resource/ABMLoader.c ****     S32 quality = OFFLINE_IMAGE_PARAM_QUALITY_MEDIUM;
 5250              	LM615:
 5251 25e8 C745D401 		movl	$1, -44(%ebp)
 5251      000000
2857:../../MMI/Resource/ABMLoader.c **** 
2858:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2859:../../MMI/Resource/ABMLoader.c ****     /* Code Body                                                      */
2860:../../MMI/Resource/ABMLoader.c ****     /*----------------------------------------------------------------*/
2861:../../MMI/Resource/ABMLoader.c ****     if(in_filename != NULL)
 5253              	LM616:
 5254 25ef 837D0800 		cmpl	$0, 8(%ebp)
 5255 25f3 7423     		je	L315
2862:../../MMI/Resource/ABMLoader.c ****     {
2863:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_V("ABMLoader: trying to load %s", in_filename);
 5257              	LM617:
 5258 25f5 8B4508   		movl	8(%ebp), %eax
 5259 25f8 8944240C 		movl	%eax, 12(%esp)
 5260 25fc C7442408 		movl	$LC28, 8(%esp)
 5260      16250000 
 5261 2604 C7442404 		movl	$LC23, 4(%esp)
 5261      C8070000 
 5262 260c C7042401 		movl	$1, (%esp)
 5262      000000
 5263 2613 E8000000 		call	_reslog_adaptor_log
 5263      00
 5264              	L315:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 127


2864:../../MMI/Resource/ABMLoader.c ****     }
2865:../../MMI/Resource/ABMLoader.c ****     
2866:../../MMI/Resource/ABMLoader.c ****     /* reduce call stack size and avoid the risk of ABMENC_BMP_FILE_BUFFER_SIZE increase */
2867:../../MMI/Resource/ABMLoader.c ****     buffer = malloc(ABMENC_BMP_FILE_BUFFER_SIZE);
 5266              	LM618:
 5267 2618 C7042400 		movl	$16777216, (%esp)
 5267      000001
 5268 261f E8000000 		call	_malloc
 5268      00
 5269 2624 8945FC   		movl	%eax, -4(%ebp)
2868:../../MMI/Resource/ABMLoader.c ****     memset(buffer, 0, ABMENC_BMP_FILE_BUFFER_SIZE);
 5271              	LM619:
 5272 2627 C7442408 		movl	$16777216, 8(%esp)
 5272      00000001 
 5273 262f C7442404 		movl	$0, 4(%esp)
 5273      00000000 
 5274 2637 8B45FC   		movl	-4(%ebp), %eax
 5275 263a 890424   		movl	%eax, (%esp)
 5276 263d E8000000 		call	_memset
 5276      00
2869:../../MMI/Resource/ABMLoader.c **** 
2870:../../MMI/Resource/ABMLoader.c ****     /* Retrive quality passed from Resgen*/
2871:../../MMI/Resource/ABMLoader.c ****     quality = processData->quality;
 5278              	LM620:
 5279 2642 8B451C   		movl	28(%ebp), %eax
 5280 2645 8B801402 		movl	532(%eax), %eax
 5280      0000
 5281 264b 8945D4   		movl	%eax, -44(%ebp)
2872:../../MMI/Resource/ABMLoader.c ****     ABMLDR_LOG_D("[ABMLoader][%s] quality = %d\n",in_filename, quality);
 5283              	LM621:
 5284 264e 8B45D4   		movl	-44(%ebp), %eax
 5285 2651 89442410 		movl	%eax, 16(%esp)
 5286 2655 8B4508   		movl	8(%ebp), %eax
 5287 2658 8944240C 		movl	%eax, 12(%esp)
 5288 265c C7442408 		movl	$LC29, 8(%esp)
 5288      33250000 
 5289 2664 C7442404 		movl	$LC23, 4(%esp)
 5289      C8070000 
 5290 266c C7042400 		movl	$0, (%esp)
 5290      000000
 5291 2673 E8000000 		call	_reslog_adaptor_log
 5291      00
2873:../../MMI/Resource/ABMLoader.c **** 
2874:../../MMI/Resource/ABMLoader.c ****     /* temp solution:
2875:../../MMI/Resource/ABMLoader.c ****      * check whether the input file is PBM */
2876:../../MMI/Resource/ABMLoader.c ****     {
2877:../../MMI/Resource/ABMLoader.c ****         int l;
2878:../../MMI/Resource/ABMLoader.c ****         
2879:../../MMI/Resource/ABMLoader.c ****         l = strlen(in_filename);
 5293              	LM622:
 5294              	LBB37:
 5295 2678 8B4508   		movl	8(%ebp), %eax
 5296 267b 890424   		movl	%eax, (%esp)
 5297 267e E8000000 		call	_strlen
 5297      00
 5298 2683 8945D0   		movl	%eax, -48(%ebp)
2880:../../MMI/Resource/ABMLoader.c ****         if ((in_filename[l - 1] == 'M') &&
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 128


 5300              	LM623:
 5301 2686 8B45D0   		movl	-48(%ebp), %eax
 5302 2689 034508   		addl	8(%ebp), %eax
 5303 268c 48       		decl	%eax
 5304 268d 80384D   		cmpb	$77, (%eax)
 5305 2690 7522     		jne	L316
 5306 2692 8B45D0   		movl	-48(%ebp), %eax
 5307 2695 034508   		addl	8(%ebp), %eax
 5308 2698 83E802   		subl	$2, %eax
 5309 269b 803842   		cmpb	$66, (%eax)
 5310 269e 7514     		jne	L316
 5311 26a0 8B45D0   		movl	-48(%ebp), %eax
 5312 26a3 034508   		addl	8(%ebp), %eax
 5313 26a6 83E803   		subl	$3, %eax
 5314 26a9 803850   		cmpb	$80, (%eax)
 5315 26ac 7506     		jne	L316
2881:../../MMI/Resource/ABMLoader.c ****             (in_filename[l - 2] == 'B') &&
2882:../../MMI/Resource/ABMLoader.c ****             (in_filename[l - 3] == 'P'))
2883:../../MMI/Resource/ABMLoader.c ****         { 
2884:../../MMI/Resource/ABMLoader.c ****             image_type = IMAGE_TYPE_DEVICE_BITMAP;
 5317              	LM624:
 5318 26ae C645DF04 		movb	$4, -33(%ebp)
 5319 26b2 EB68     		jmp	L317
 5320              	L316:
2885:../../MMI/Resource/ABMLoader.c ****         }
2886:../../MMI/Resource/ABMLoader.c ****         else if ((in_filename[l - 1] == 'P') &&
 5322              	LM625:
 5323 26b4 8B45D0   		movl	-48(%ebp), %eax
 5324 26b7 034508   		addl	8(%ebp), %eax
 5325 26ba 48       		decl	%eax
 5326 26bb 803850   		cmpb	$80, (%eax)
 5327 26be 7522     		jne	L318
 5328 26c0 8B45D0   		movl	-48(%ebp), %eax
 5329 26c3 034508   		addl	8(%ebp), %eax
 5330 26c6 83E802   		subl	$2, %eax
 5331 26c9 80384D   		cmpb	$77, (%eax)
 5332 26cc 7514     		jne	L318
 5333 26ce 8B45D0   		movl	-48(%ebp), %eax
 5334 26d1 034508   		addl	8(%ebp), %eax
 5335 26d4 83E803   		subl	$3, %eax
 5336 26d7 803842   		cmpb	$66, (%eax)
 5337 26da 7506     		jne	L318
2887:../../MMI/Resource/ABMLoader.c ****                  (in_filename[l - 2] == 'M') &&
2888:../../MMI/Resource/ABMLoader.c ****                  (in_filename[l - 3] == 'B'))
2889:../../MMI/Resource/ABMLoader.c ****         {
2890:../../MMI/Resource/ABMLoader.c ****             image_type = IMAGE_TYPE_BMP;
 5339              	LM626:
 5340 26dc C645DF01 		movb	$1, -33(%ebp)
 5341 26e0 EB3A     		jmp	L317
 5342              	L318:
2891:../../MMI/Resource/ABMLoader.c ****         }
2892:../../MMI/Resource/ABMLoader.c ****         else if ((in_filename[l - 1] == 'A') &&
 5344              	LM627:
 5345 26e2 8B45D0   		movl	-48(%ebp), %eax
 5346 26e5 034508   		addl	8(%ebp), %eax
 5347 26e8 48       		decl	%eax
 5348 26e9 803841   		cmpb	$65, (%eax)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 129


 5349 26ec 752E     		jne	L317
 5350 26ee 8B45D0   		movl	-48(%ebp), %eax
 5351 26f1 034508   		addl	8(%ebp), %eax
 5352 26f4 83E802   		subl	$2, %eax
 5353 26f7 803850   		cmpb	$80, (%eax)
 5354 26fa 7520     		jne	L317
 5355 26fc 8B45D0   		movl	-48(%ebp), %eax
 5356 26ff 034508   		addl	8(%ebp), %eax
 5357 2702 83E803   		subl	$3, %eax
 5358 2705 80384D   		cmpb	$77, (%eax)
 5359 2708 7512     		jne	L317
 5360 270a 8B45D0   		movl	-48(%ebp), %eax
 5361 270d 034508   		addl	8(%ebp), %eax
 5362 2710 83E804   		subl	$4, %eax
 5363 2713 803842   		cmpb	$66, (%eax)
 5364 2716 7504     		jne	L317
2893:../../MMI/Resource/ABMLoader.c ****                  (in_filename[l - 2] == 'P') &&
2894:../../MMI/Resource/ABMLoader.c ****                  (in_filename[l - 3] == 'M') &&
2895:../../MMI/Resource/ABMLoader.c ****                  (in_filename[l - 4] == 'B'))
2896:../../MMI/Resource/ABMLoader.c ****         {
2897:../../MMI/Resource/ABMLoader.c ****             image_type = IMAGE_TYPE_PNG;
 5366              	LM628:
 5367 2718 C645DF13 		movb	$19, -33(%ebp)
 5368              	L317:
2898:../../MMI/Resource/ABMLoader.c ****         }
2899:../../MMI/Resource/ABMLoader.c ****     }
2900:../../MMI/Resource/ABMLoader.c **** 
2901:../../MMI/Resource/ABMLoader.c ****     /* 
2902:../../MMI/Resource/ABMLoader.c ****      * After we tested on the porject with hardware PNG, the PNG is larger
2903:../../MMI/Resource/ABMLoader.c ****      * and slower than ABM/ABMv2. So we disable this checking.
2904:../../MMI/Resource/ABMLoader.c ****      */
2905:../../MMI/Resource/ABMLoader.c **** #if 0
2906:../../MMI/Resource/ABMLoader.c **** #ifdef GDI_USING_HW_PNG
2907:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2908:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2909:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2910:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2911:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2912:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2913:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2914:../../MMI/Resource/ABMLoader.c **** /* under construction !*/
2915:../../MMI/Resource/ABMLoader.c **** #endif /* GDI_USING_HW_PNG */
2916:../../MMI/Resource/ABMLoader.c **** #endif
2917:../../MMI/Resource/ABMLoader.c **** 
2918:../../MMI/Resource/ABMLoader.c ****     ret = ABM_load(
 5370              	LM629:
 5371              	LBE37:
 5372 271c 8B451C   		movl	28(%ebp), %eax
 5373 271f 89442424 		movl	%eax, 36(%esp)
 5374 2723 8B4514   		movl	20(%ebp), %eax
 5375 2726 89442420 		movl	%eax, 32(%esp)
 5376 272a 8D45F4   		leal	-12(%ebp), %eax
 5377 272d 8944241C 		movl	%eax, 28(%esp)
 5378 2731 8D45F8   		leal	-8(%ebp), %eax
 5379 2734 89442418 		movl	%eax, 24(%esp)
 5380 2738 8D45F0   		leal	-16(%ebp), %eax
 5381 273b 89442414 		movl	%eax, 20(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 130


 5382 273f 8B45FC   		movl	-4(%ebp), %eax
 5383 2742 89442410 		movl	%eax, 16(%esp)
 5384 2746 8B4510   		movl	16(%ebp), %eax
 5385 2749 8944240C 		movl	%eax, 12(%esp)
 5386 274d 0FB645DF 		movzbl	-33(%ebp), %eax
 5387 2751 89442408 		movl	%eax, 8(%esp)
 5388 2755 C7442404 		movl	$16, 4(%esp)
 5388      10000000 
 5389 275d 8B4508   		movl	8(%ebp), %eax
 5390 2760 890424   		movl	%eax, (%esp)
 5391 2763 E8B3F9FF 		call	_ABM_load
 5391      FF
 5392 2768 8945EC   		movl	%eax, -20(%ebp)
2919:../../MMI/Resource/ABMLoader.c ****             in_filename,
2920:../../MMI/Resource/ABMLoader.c ****             __MMI_DEVICE_BMP_FORMAT__,
2921:../../MMI/Resource/ABMLoader.c ****             image_type,
2922:../../MMI/Resource/ABMLoader.c ****             encode_option,
2923:../../MMI/Resource/ABMLoader.c ****             buffer,
2924:../../MMI/Resource/ABMLoader.c ****             &size,
2925:../../MMI/Resource/ABMLoader.c ****             &width,
2926:../../MMI/Resource/ABMLoader.c ****             &height,
2927:../../MMI/Resource/ABMLoader.c ****             is9slice,
2928:../../MMI/Resource/ABMLoader.c ****             processData);
2929:../../MMI/Resource/ABMLoader.c ****     switch(ret)
 5394              	LM630:
 5395 276b 8B45EC   		movl	-20(%ebp), %eax
 5396 276e 8945BC   		movl	%eax, -68(%ebp)
 5397 2771 837DBC01 		cmpl	$1, -68(%ebp)
 5398 2775 7408     		je	L322
 5399 2777 837DBC02 		cmpl	$2, -68(%ebp)
 5400 277b 7408     		je	L323
 5401 277d EB0C     		jmp	L324
 5402              	L322:
2930:../../MMI/Resource/ABMLoader.c ****     {
2931:../../MMI/Resource/ABMLoader.c ****         case ABM_ENC_RETURN_USE_ABM:
2932:../../MMI/Resource/ABMLoader.c ****             image_type = IMAGE_TYPE_ABM;
 5404              	LM631:
 5405 277f C645DF28 		movb	$40, -33(%ebp)
2933:../../MMI/Resource/ABMLoader.c ****             break;
 5407              	LM632:
 5408 2783 EB1C     		jmp	L321
 5409              	L323:
2934:../../MMI/Resource/ABMLoader.c **** 
2935:../../MMI/Resource/ABMLoader.c ****         case ABM_ENC_RETURN_USE_AB2:
2936:../../MMI/Resource/ABMLoader.c ****             image_type = IMAGE_TYPE_AB2;
 5411              	LM633:
 5412 2785 C645DF34 		movb	$52, -33(%ebp)
2937:../../MMI/Resource/ABMLoader.c ****             break;
 5414              	LM634:
 5415 2789 EB16     		jmp	L321
 5416              	L324:
2938:../../MMI/Resource/ABMLoader.c **** 
2939:../../MMI/Resource/ABMLoader.c ****         default:
2940:../../MMI/Resource/ABMLoader.c ****             free(buffer);
 5418              	LM635:
 5419 278b 8B45FC   		movl	-4(%ebp), %eax
 5420 278e 890424   		movl	%eax, (%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 131


 5421 2791 E8000000 		call	_free
 5421      00
2941:../../MMI/Resource/ABMLoader.c ****             return ret;
 5423              	LM636:
 5424 2796 8B45EC   		movl	-20(%ebp), %eax
 5425 2799 8945C0   		movl	%eax, -64(%ebp)
 5426 279c E9E80300 		jmp	L314
 5426      00
 5427              	L321:
2942:../../MMI/Resource/ABMLoader.c ****     }
2943:../../MMI/Resource/ABMLoader.c **** 
2944:../../MMI/Resource/ABMLoader.c ****     if ((size >> 24) > 0)
 5429              	LM637:
 5430 27a1 8B45F0   		movl	-16(%ebp), %eax
 5431 27a4 C1F818   		sarl	$24, %eax
 5432 27a7 85C0     		testl	%eax, %eax
 5433 27a9 7E23     		jle	L326
2945:../../MMI/Resource/ABMLoader.c ****     {
2946:../../MMI/Resource/ABMLoader.c ****         ABMLDR_LOG_E("image is too big:%s\n", in_filename);
 5435              	LM638:
 5436 27ab 8B4508   		movl	8(%ebp), %eax
 5437 27ae 8944240C 		movl	%eax, 12(%esp)
 5438 27b2 C7442408 		movl	$LC30, 8(%esp)
 5438      51250000 
 5439 27ba C7442404 		movl	$LC23, 4(%esp)
 5439      C8070000 
 5440 27c2 C7042403 		movl	$3, (%esp)
 5440      000000
 5441 27c9 E8000000 		call	_reslog_adaptor_log
 5441      00
 5442              	L326:
2947:../../MMI/Resource/ABMLoader.c ****     }
2948:../../MMI/Resource/ABMLoader.c ****     processData->res_size = size + 8;
 5444              	LM639:
 5445 27ce 8B551C   		movl	28(%ebp), %edx
 5446 27d1 8B45F0   		movl	-16(%ebp), %eax
 5447 27d4 83C008   		addl	$8, %eax
 5448 27d7 89820002 		movl	%eax, 512(%edx)
 5448      0000
2949:../../MMI/Resource/ABMLoader.c ****     width_height = (((U32)width & 0XFFF) << 12) | ((U32)height & 0XFFF);
 5450              	LM640:
 5451 27dd 8B45F8   		movl	-8(%ebp), %eax
 5452 27e0 25FF0F00 		andl	$4095, %eax
 5452      00
 5453 27e5 89C2     		movl	%eax, %edx
 5454 27e7 C1E20C   		sall	$12, %edx
 5455 27ea 8B45F4   		movl	-12(%ebp), %eax
 5456 27ed 25FF0F00 		andl	$4095, %eax
 5456      00
 5457 27f2 09D0     		orl	%edx, %eax
 5458 27f4 8945E4   		movl	%eax, -28(%ebp)
2950:../../MMI/Resource/ABMLoader.c **** 
2951:../../MMI/Resource/ABMLoader.c **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
2952:../../MMI/Resource/ABMLoader.c ****     enfb_ret = Image_Test(in_filename, &enfb_width, &enfb_height, processData->disable_enfb);
2953:../../MMI/Resource/ABMLoader.c ****     if (enfb_ret != ENFB_IMAGE_NONE)
2954:../../MMI/Resource/ABMLoader.c ****     {
2955:../../MMI/Resource/ABMLoader.c ****         processData->enfb_flag = 1;
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 132


2956:../../MMI/Resource/ABMLoader.c ****         if (enfb_ret == ENFB_IMAGE_ASSOCIATE)
2957:../../MMI/Resource/ABMLoader.c ****         {
2958:../../MMI/Resource/ABMLoader.c ****             ENFBAssociatedIDAdded = MMI_TRUE;
2959:../../MMI/Resource/ABMLoader.c ****         }
2960:../../MMI/Resource/ABMLoader.c ****     }
2961:../../MMI/Resource/ABMLoader.c **** #endif /* __MMI_RESOURCE_ENFB_SUPPORT__ */
2962:../../MMI/Resource/ABMLoader.c **** 
2963:../../MMI/Resource/ABMLoader.c ****     if (toolFlag != 1)
 5460              	LM641:
 5461 27f7 833D0000 		cmpl	$1, _toolFlag
 5461      000001
 5462 27fe 7456     		je	L327
2964:../../MMI/Resource/ABMLoader.c ****     {
2965:../../MMI/Resource/ABMLoader.c ****         /* open output file */
2966:../../MMI/Resource/ABMLoader.c ****         outfile = fopen(out_filename, "wb+");
 5464              	LM642:
 5465 2800 C7442404 		movl	$LC31, 4(%esp)
 5465      66250000 
 5466 2808 8B450C   		movl	12(%ebp), %eax
 5467 280b 890424   		movl	%eax, (%esp)
 5468 280e E8000000 		call	_fopen
 5468      00
 5469 2813 8945E0   		movl	%eax, -32(%ebp)
2967:../../MMI/Resource/ABMLoader.c ****         if (outfile == NULL)
 5471              	LM643:
 5472 2816 837DE000 		cmpl	$0, -32(%ebp)
 5473 281a 753A     		jne	L327
2968:../../MMI/Resource/ABMLoader.c ****         {
2969:../../MMI/Resource/ABMLoader.c ****             ABMLDR_LOG_E("\nError creating %s", out_filename);
 5475              	LM644:
 5476 281c 8B450C   		movl	12(%ebp), %eax
 5477 281f 8944240C 		movl	%eax, 12(%esp)
 5478 2823 C7442408 		movl	$LC32, 8(%esp)
 5478      6A250000 
 5479 282b C7442404 		movl	$LC23, 4(%esp)
 5479      C8070000 
 5480 2833 C7042403 		movl	$3, (%esp)
 5480      000000
 5481 283a E8000000 		call	_reslog_adaptor_log
 5481      00
2970:../../MMI/Resource/ABMLoader.c ****             free(buffer);
 5483              	LM645:
 5484 283f 8B45FC   		movl	-4(%ebp), %eax
 5485 2842 890424   		movl	%eax, (%esp)
 5486 2845 E8000000 		call	_free
 5486      00
2971:../../MMI/Resource/ABMLoader.c ****             return 0;
 5488              	LM646:
 5489 284a C745C000 		movl	$0, -64(%ebp)
 5489      000000
 5490 2851 E9330300 		jmp	L314
 5490      00
 5491              	L327:
2972:../../MMI/Resource/ABMLoader.c ****         }
2973:../../MMI/Resource/ABMLoader.c ****     }
2974:../../MMI/Resource/ABMLoader.c **** 
2975:../../MMI/Resource/ABMLoader.c ****     data_size = size;
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 133


 5493              	LM647:
 5494 2856 8B45F0   		movl	-16(%ebp), %eax
 5495 2859 8945D8   		movl	%eax, -40(%ebp)
2976:../../MMI/Resource/ABMLoader.c ****     if (is9slice)
 5497              	LM648:
 5498 285c 837D1400 		cmpl	$0, 20(%ebp)
 5499 2860 7406     		je	L329
2977:../../MMI/Resource/ABMLoader.c ****     {
2978:../../MMI/Resource/ABMLoader.c ****         data_size += 20;
 5501              	LM649:
 5502 2862 8D45D8   		leal	-40(%ebp), %eax
 5503 2865 830014   		addl	$20, (%eax)
 5504              	L329:
2979:../../MMI/Resource/ABMLoader.c ****     }
2980:../../MMI/Resource/ABMLoader.c **** 
2981:../../MMI/Resource/ABMLoader.c ****     /* write to CustPack */
2982:../../MMI/Resource/ABMLoader.c ****     if (toolFlag == 1)
 5506              	LM650:
 5507 2868 833D0000 		cmpl	$1, _toolFlag
 5507      000001
 5508 286f 0F856401 		jne	L330
 5508      0000
2983:../../MMI/Resource/ABMLoader.c ****     {
2984:../../MMI/Resource/ABMLoader.c ****         /* resource header */
2985:../../MMI/Resource/ABMLoader.c ****         if (is9slice)
 5510              	LM651:
 5511 2875 837D1400 		cmpl	$0, 20(%ebp)
 5512 2879 741F     		je	L331
2986:../../MMI/Resource/ABMLoader.c ****             fprintf(dest_file, "%c", IMAGE_TYPE_9SLICE);
 5514              	LM652:
 5515 287b C7442408 		movl	$62, 8(%esp)
 5515      3E000000 
 5516 2883 C7442404 		movl	$LC33, 4(%esp)
 5516      7D250000 
 5517 288b A1000000 		movl	_dest_file, %eax
 5517      00
 5518 2890 890424   		movl	%eax, (%esp)
 5519 2893 E8000000 		call	_fprintf
 5519      00
 5520 2898 EB1D     		jmp	L332
 5521              	L331:
2987:../../MMI/Resource/ABMLoader.c ****         else
2988:../../MMI/Resource/ABMLoader.c ****             fprintf(dest_file, "%c", image_type);
 5523              	LM653:
 5524 289a 0FB645DF 		movzbl	-33(%ebp), %eax
 5525 289e 89442408 		movl	%eax, 8(%esp)
 5526 28a2 C7442404 		movl	$LC33, 4(%esp)
 5526      7D250000 
 5527 28aa A1000000 		movl	_dest_file, %eax
 5527      00
 5528 28af 890424   		movl	%eax, (%esp)
 5529 28b2 E8000000 		call	_fprintf
 5529      00
 5530              	L332:
2989:../../MMI/Resource/ABMLoader.c ****         fprintf(dest_file, "%c", 0x01);
 5532              	LM654:
 5533 28b7 C7442408 		movl	$1, 8(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 134


 5533      01000000 
 5534 28bf C7442404 		movl	$LC33, 4(%esp)
 5534      7D250000 
 5535 28c7 A1000000 		movl	_dest_file, %eax
 5535      00
 5536 28cc 890424   		movl	%eax, (%esp)
 5537 28cf E8000000 		call	_fprintf
 5537      00
2990:../../MMI/Resource/ABMLoader.c ****         fprintf(dest_file, "%c%c%c",
 5539              	LM655:
 5540 28d4 8B45D8   		movl	-40(%ebp), %eax
 5541 28d7 250000FF 		andl	$16711680, %eax
 5541      00
 5542 28dc C1F810   		sarl	$16, %eax
 5543 28df 89442410 		movl	%eax, 16(%esp)
 5544 28e3 8B45D8   		movl	-40(%ebp), %eax
 5545 28e6 2500FF00 		andl	$65280, %eax
 5545      00
 5546 28eb C1F808   		sarl	$8, %eax
 5547 28ee 8944240C 		movl	%eax, 12(%esp)
 5548 28f2 0FB645D8 		movzbl	-40(%ebp),%eax
 5549 28f6 89442408 		movl	%eax, 8(%esp)
 5550 28fa C7442404 		movl	$LC34, 4(%esp)
 5550      80250000 
 5551 2902 A1000000 		movl	_dest_file, %eax
 5551      00
 5552 2907 890424   		movl	%eax, (%esp)
 5553 290a E8000000 		call	_fprintf
 5553      00
2991:../../MMI/Resource/ABMLoader.c ****                 (data_size & 0x000000ff),
2992:../../MMI/Resource/ABMLoader.c ****                 (data_size & 0x0000ff00) >> 8,
2993:../../MMI/Resource/ABMLoader.c ****                 (data_size & 0x00ff0000) >> 16);
2994:../../MMI/Resource/ABMLoader.c ****         fprintf(dest_file, "%c%c%c",
 5555              	LM656:
 5556 290f 8B45E4   		movl	-28(%ebp), %eax
 5557 2912 250000FF 		andl	$16711680, %eax
 5557      00
 5558 2917 C1E810   		shrl	$16, %eax
 5559 291a 89442410 		movl	%eax, 16(%esp)
 5560 291e 8B45E4   		movl	-28(%ebp), %eax
 5561 2921 2500FF00 		andl	$65280, %eax
 5561      00
 5562 2926 C1E808   		shrl	$8, %eax
 5563 2929 8944240C 		movl	%eax, 12(%esp)
 5564 292d 0FB645E4 		movzbl	-28(%ebp),%eax
 5565 2931 89442408 		movl	%eax, 8(%esp)
 5566 2935 C7442404 		movl	$LC34, 4(%esp)
 5566      80250000 
 5567 293d A1000000 		movl	_dest_file, %eax
 5567      00
 5568 2942 890424   		movl	%eax, (%esp)
 5569 2945 E8000000 		call	_fprintf
 5569      00
2995:../../MMI/Resource/ABMLoader.c ****                 (width_height & 0x000000ff),
2996:../../MMI/Resource/ABMLoader.c ****                 (width_height & 0x0000ff00) >> 8,
2997:../../MMI/Resource/ABMLoader.c ****                 (width_height & 0x00ff0000) >> 16);
2998:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 135


2999:../../MMI/Resource/ABMLoader.c ****         if (is9slice)
 5571              	LM657:
 5572 294a 837D1400 		cmpl	$0, 20(%ebp)
 5573 294e 744C     		je	L333
3000:../../MMI/Resource/ABMLoader.c ****         {
3001:../../MMI/Resource/ABMLoader.c ****             /* Write 9slice file header */
3002:../../MMI/Resource/ABMLoader.c ****             ResgenImageOutStream * outstream;
3003:../../MMI/Resource/ABMLoader.c ****             ImageOutStreamInit(&outstream);
 5575              	LM658:
 5576              	LBB38:
 5577 2950 8D45D0   		leal	-48(%ebp), %eax
 5578 2953 890424   		movl	%eax, (%esp)
 5579 2956 E8000000 		call	_ImageOutStreamInit
 5579      00
3004:../../MMI/Resource/ABMLoader.c ****             mmi_rg_write_9slice_header(image_type, _9slice_filename, outstream, MMI_TRUE);
 5581              	LM659:
 5582 295b C744240C 		movl	$1, 12(%esp)
 5582      01000000 
 5583 2963 8B45D0   		movl	-48(%ebp), %eax
 5584 2966 89442408 		movl	%eax, 8(%esp)
 5585 296a 8B4518   		movl	24(%ebp), %eax
 5586 296d 89442404 		movl	%eax, 4(%esp)
 5587 2971 0FB645DF 		movzbl	-33(%ebp), %eax
 5588 2975 890424   		movl	%eax, (%esp)
 5589 2978 E8000000 		call	_mmi_rg_write_9slice_header
 5589      00
3005:../../MMI/Resource/ABMLoader.c ****             ImageOutStreamOutputFile(outstream, dest_file);
 5591              	LM660:
 5592 297d A1000000 		movl	_dest_file, %eax
 5592      00
 5593 2982 89442404 		movl	%eax, 4(%esp)
 5594 2986 8B45D0   		movl	-48(%ebp), %eax
 5595 2989 890424   		movl	%eax, (%esp)
 5596 298c E8000000 		call	_ImageOutStreamOutputFile
 5596      00
3006:../../MMI/Resource/ABMLoader.c ****             ImageOutStreamDeinit(&outstream);
 5598              	LM661:
 5599 2991 8D45D0   		leal	-48(%ebp), %eax
 5600 2994 890424   		movl	%eax, (%esp)
 5601 2997 E8000000 		call	_ImageOutStreamDeinit
 5601      00
 5602              	L333:
3007:../../MMI/Resource/ABMLoader.c ****         }
3008:../../MMI/Resource/ABMLoader.c ****         
3009:../../MMI/Resource/ABMLoader.c ****         /* ABM raw data */
3010:../../MMI/Resource/ABMLoader.c ****         for (i = 0; i < size; i++)
 5604              	LM662:
 5605              	LBE38:
 5606 299c C745E800 		movl	$0, -24(%ebp)
 5606      000000
 5607              	L334:
 5608 29a3 8B45E8   		movl	-24(%ebp), %eax
 5609 29a6 3B45F0   		cmpl	-16(%ebp), %eax
 5610 29a9 7C05     		jl	L337
 5611 29ab E9B30100 		jmp	L338
 5611      00
 5612              	L337:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 136


3011:../../MMI/Resource/ABMLoader.c ****         {
3012:../../MMI/Resource/ABMLoader.c ****             fprintf(dest_file, "%c", buffer[i]);
 5614              	LM663:
 5615 29b0 8B45E8   		movl	-24(%ebp), %eax
 5616 29b3 0345FC   		addl	-4(%ebp), %eax
 5617 29b6 0FB600   		movzbl	(%eax), %eax
 5618 29b9 89442408 		movl	%eax, 8(%esp)
 5619 29bd C7442404 		movl	$LC33, 4(%esp)
 5619      7D250000 
 5620 29c5 A1000000 		movl	_dest_file, %eax
 5620      00
 5621 29ca 890424   		movl	%eax, (%esp)
 5622 29cd E8000000 		call	_fprintf
 5622      00
 5624              	LM664:
 5625 29d2 8D45E8   		leal	-24(%ebp), %eax
 5626 29d5 FF00     		incl	(%eax)
 5627 29d7 EBCA     		jmp	L334
 5628              	L330:
3013:../../MMI/Resource/ABMLoader.c ****         }
3014:../../MMI/Resource/ABMLoader.c ****     }
3015:../../MMI/Resource/ABMLoader.c ****     
3016:../../MMI/Resource/ABMLoader.c **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
3017:../../MMI/Resource/ABMLoader.c ****     /* write ENFB header to CustImgDataxxx.h and
3018:../../MMI/Resource/ABMLoader.c ****      * image header/data to ENFB image data file */
3019:../../MMI/Resource/ABMLoader.c ****     else if (processData->enfb_flag == 1) 
3020:../../MMI/Resource/ABMLoader.c ****     {
3021:../../MMI/Resource/ABMLoader.c ****         enfb_size = 8 + data_size;
3022:../../MMI/Resource/ABMLoader.c ****         
3023:../../MMI/Resource/ABMLoader.c ****         /* write ENFB header to CustImgDataxxx.h */
3024:../../MMI/Resource/ABMLoader.c ****         fprintf(outfile,
3025:../../MMI/Resource/ABMLoader.c ****                 "\n{\t0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02
3026:../../MMI/Resource/ABMLoader.c ****                 (U8) 255,                       //type
3027:../../MMI/Resource/ABMLoader.c ****                 (U8) ENFBAssociatedIDAdded,     //associated id
3028:../../MMI/Resource/ABMLoader.c ****                 (U8) 0,                         //reserved
3029:../../MMI/Resource/ABMLoader.c ****                 (U8) 0,                         //reserved
3030:../../MMI/Resource/ABMLoader.c ****                 (U8) (enfb_offset & 0xff),
3031:../../MMI/Resource/ABMLoader.c ****                 (U8) ((enfb_offset >> 8) & 0xff),
3032:../../MMI/Resource/ABMLoader.c ****                 (U8) ((enfb_offset >> 16) & 0xff),
3033:../../MMI/Resource/ABMLoader.c ****                 (U8) ((enfb_offset >> 24) & 0xff),
3034:../../MMI/Resource/ABMLoader.c ****                 (U8) (enfb_size & 0xff),
3035:../../MMI/Resource/ABMLoader.c ****                 (U8) ((enfb_size >> 8) & 0xff),
3036:../../MMI/Resource/ABMLoader.c ****                 (U8) ((enfb_size >> 16) & 0xff),
3037:../../MMI/Resource/ABMLoader.c ****                 (U8) ((enfb_size >> 24) & 0xff));
3038:../../MMI/Resource/ABMLoader.c ****         
3039:../../MMI/Resource/ABMLoader.c ****         /* image header/data to ENFB image data file */
3040:../../MMI/Resource/ABMLoader.c ****         /* resource header */
3041:../../MMI/Resource/ABMLoader.c ****         if (is9slice)
3042:../../MMI/Resource/ABMLoader.c ****             fprintf(enfb_img_data_file, "%c", IMAGE_TYPE_9SLICE);
3043:../../MMI/Resource/ABMLoader.c ****         else
3044:../../MMI/Resource/ABMLoader.c ****             fprintf(enfb_img_data_file, "%c", image_type);
3045:../../MMI/Resource/ABMLoader.c ****         fprintf(enfb_img_data_file, "%c", 0x01);
3046:../../MMI/Resource/ABMLoader.c ****         fprintf(enfb_img_data_file,
3047:../../MMI/Resource/ABMLoader.c ****                 "%c%c%c",
3048:../../MMI/Resource/ABMLoader.c ****                 (data_size & 0x000000ff),
3049:../../MMI/Resource/ABMLoader.c ****                 (data_size & 0x0000ff00) >> 8,
3050:../../MMI/Resource/ABMLoader.c ****                 (data_size & 0x00ff0000) >> 16);
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 137


3051:../../MMI/Resource/ABMLoader.c ****         fprintf(enfb_img_data_file,
3052:../../MMI/Resource/ABMLoader.c ****                 "%c%c%c",
3053:../../MMI/Resource/ABMLoader.c ****                 (width_height & 0x000000ff),
3054:../../MMI/Resource/ABMLoader.c ****                 (width_height & 0x0000ff00) >> 8,
3055:../../MMI/Resource/ABMLoader.c ****                 (width_height & 0x00ff0000) >> 16);
3056:../../MMI/Resource/ABMLoader.c **** 
3057:../../MMI/Resource/ABMLoader.c ****         if (is9slice)
3058:../../MMI/Resource/ABMLoader.c ****         {
3059:../../MMI/Resource/ABMLoader.c ****             /* Write 9slice file header */
3060:../../MMI/Resource/ABMLoader.c ****             mmi_rg_write_9slice_header(image_type, _9slice_filename, enfb_img_data_file, MMI_TRUE);
3061:../../MMI/Resource/ABMLoader.c ****         }
3062:../../MMI/Resource/ABMLoader.c ****         
3063:../../MMI/Resource/ABMLoader.c ****         for (i = 0; i < size; i++)
3064:../../MMI/Resource/ABMLoader.c ****         {
3065:../../MMI/Resource/ABMLoader.c ****             fprintf(enfb_img_data_file, "%c", buffer[i]);
3066:../../MMI/Resource/ABMLoader.c ****         }
3067:../../MMI/Resource/ABMLoader.c **** 
3068:../../MMI/Resource/ABMLoader.c ****         enfb_offset += enfb_size;
3069:../../MMI/Resource/ABMLoader.c ****         processData->enfb_flag = 0;
3070:../../MMI/Resource/ABMLoader.c ****     }
3071:../../MMI/Resource/ABMLoader.c **** #endif /* __MMI_RESOURCE_ENFB_SUPPORT__ */
3072:../../MMI/Resource/ABMLoader.c **** 
3073:../../MMI/Resource/ABMLoader.c ****     else
3074:../../MMI/Resource/ABMLoader.c ****     {
3075:../../MMI/Resource/ABMLoader.c ****         U8 *dest_buf;
3076:../../MMI/Resource/ABMLoader.c ****         S32 dest_size = 0;
 5630              	LM665:
 5631              	LBB39:
 5632 29d9 C745C800 		movl	$0, -56(%ebp)
 5632      000000
3077:../../MMI/Resource/ABMLoader.c ****         
3078:../../MMI/Resource/ABMLoader.c ****         fprintf(outfile, "{\n\t");
 5634              	LM666:
 5635 29e0 C7442404 		movl	$LC35, 4(%esp)
 5635      87250000 
 5636 29e8 8B45E0   		movl	-32(%ebp), %eax
 5637 29eb 890424   		movl	%eax, (%esp)
 5638 29ee E8000000 		call	_fprintf
 5638      00
3079:../../MMI/Resource/ABMLoader.c **** 
3080:../../MMI/Resource/ABMLoader.c **** #if defined(__MMI_RESOURCE_IMAGE_COMPRESS__)
3081:../../MMI/Resource/ABMLoader.c ****         dest_buf = mmi_rg_compress_image(buffer, size, &dest_size, image_type, width_height, in_fil
3082:../../MMI/Resource/ABMLoader.c ****         if (dest_buf != NULL)
3083:../../MMI/Resource/ABMLoader.c ****         {
3084:../../MMI/Resource/ABMLoader.c ****             mmi_rg_output_compressed_image(dest_buf, dest_size, outfile);
3085:../../MMI/Resource/ABMLoader.c ****         }
3086:../../MMI/Resource/ABMLoader.c ****         else
3087:../../MMI/Resource/ABMLoader.c **** #endif /* __MMI_RESOURCE_IMAGE_COMPRESS__ */
3088:../../MMI/Resource/ABMLoader.c ****         {
3089:../../MMI/Resource/ABMLoader.c ****             /* resource header */
3090:../../MMI/Resource/ABMLoader.c ****             if (is9slice)
 5640              	LM667:
 5641 29f3 837D1400 		cmpl	$0, 20(%ebp)
 5642 29f7 741D     		je	L339
3091:../../MMI/Resource/ABMLoader.c ****                 fprintf(outfile, "0x%02X, ", IMAGE_TYPE_9SLICE);
 5644              	LM668:
 5645 29f9 C7442408 		movl	$62, 8(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 138


 5645      3E000000 
 5646 2a01 C7442404 		movl	$LC36, 4(%esp)
 5646      8B250000 
 5647 2a09 8B45E0   		movl	-32(%ebp), %eax
 5648 2a0c 890424   		movl	%eax, (%esp)
 5649 2a0f E8000000 		call	_fprintf
 5649      00
 5650 2a14 EB1B     		jmp	L340
 5651              	L339:
3092:../../MMI/Resource/ABMLoader.c ****             else
3093:../../MMI/Resource/ABMLoader.c ****                 fprintf(outfile, "0x%02X, ", image_type);
 5653              	LM669:
 5654 2a16 0FB645DF 		movzbl	-33(%ebp), %eax
 5655 2a1a 89442408 		movl	%eax, 8(%esp)
 5656 2a1e C7442404 		movl	$LC36, 4(%esp)
 5656      8B250000 
 5657 2a26 8B45E0   		movl	-32(%ebp), %eax
 5658 2a29 890424   		movl	%eax, (%esp)
 5659 2a2c E8000000 		call	_fprintf
 5659      00
 5660              	L340:
3094:../../MMI/Resource/ABMLoader.c ****             fprintf(outfile, "0x%02X, ", 0x01);
 5662              	LM670:
 5663 2a31 C7442408 		movl	$1, 8(%esp)
 5663      01000000 
 5664 2a39 C7442404 		movl	$LC36, 4(%esp)
 5664      8B250000 
 5665 2a41 8B45E0   		movl	-32(%ebp), %eax
 5666 2a44 890424   		movl	%eax, (%esp)
 5667 2a47 E8000000 		call	_fprintf
 5667      00
3095:../../MMI/Resource/ABMLoader.c ****             fprintf(outfile,
 5669              	LM671:
 5670 2a4c 8B45E4   		movl	-28(%ebp), %eax
 5671 2a4f 250000FF 		andl	$16711680, %eax
 5671      00
 5672 2a54 C1E810   		shrl	$16, %eax
 5673 2a57 8944241C 		movl	%eax, 28(%esp)
 5674 2a5b 8B45E4   		movl	-28(%ebp), %eax
 5675 2a5e 2500FF00 		andl	$65280, %eax
 5675      00
 5676 2a63 C1E808   		shrl	$8, %eax
 5677 2a66 89442418 		movl	%eax, 24(%esp)
 5678 2a6a 0FB645E4 		movzbl	-28(%ebp),%eax
 5679 2a6e 89442414 		movl	%eax, 20(%esp)
 5680 2a72 8B45D8   		movl	-40(%ebp), %eax
 5681 2a75 250000FF 		andl	$16711680, %eax
 5681      00
 5682 2a7a C1F810   		sarl	$16, %eax
 5683 2a7d 89442410 		movl	%eax, 16(%esp)
 5684 2a81 8B45D8   		movl	-40(%ebp), %eax
 5685 2a84 2500FF00 		andl	$65280, %eax
 5685      00
 5686 2a89 C1F808   		sarl	$8, %eax
 5687 2a8c 8944240C 		movl	%eax, 12(%esp)
 5688 2a90 0FB645D8 		movzbl	-40(%ebp),%eax
 5689 2a94 89442408 		movl	%eax, 8(%esp)
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 139


 5690 2a98 C7442404 		movl	$LC37, 4(%esp)
 5690      A0250000 
 5691 2aa0 8B45E0   		movl	-32(%ebp), %eax
 5692 2aa3 890424   		movl	%eax, (%esp)
 5693 2aa6 E8000000 		call	_fprintf
 5693      00
3096:../../MMI/Resource/ABMLoader.c ****                     "0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X,",
3097:../../MMI/Resource/ABMLoader.c ****                     (data_size & 0x000000ff),
3098:../../MMI/Resource/ABMLoader.c ****                     (data_size & 0x0000ff00) >> 8,
3099:../../MMI/Resource/ABMLoader.c ****                     (data_size & 0x00ff0000) >> 16,
3100:../../MMI/Resource/ABMLoader.c ****                     (width_height & 0x000000ff),
3101:../../MMI/Resource/ABMLoader.c ****                     (width_height & 0x0000ff00) >> 8,
3102:../../MMI/Resource/ABMLoader.c ****                     (width_height & 0x00ff0000) >> 16);
3103:../../MMI/Resource/ABMLoader.c **** 
3104:../../MMI/Resource/ABMLoader.c ****             if (is9slice)
 5695              	LM672:
 5696 2aab 837D1400 		cmpl	$0, 20(%ebp)
 5697 2aaf 744A     		je	L341
3105:../../MMI/Resource/ABMLoader.c ****             {
3106:../../MMI/Resource/ABMLoader.c ****                 /* Write 9slice file header */
3107:../../MMI/Resource/ABMLoader.c ****                 ResgenImageOutStream * outstream;
3108:../../MMI/Resource/ABMLoader.c ****                 ImageOutStreamInit(&outstream);
 5699              	LM673:
 5700              	LBB40:
 5701 2ab1 8D45C4   		leal	-60(%ebp), %eax
 5702 2ab4 890424   		movl	%eax, (%esp)
 5703 2ab7 E8000000 		call	_ImageOutStreamInit
 5703      00
3109:../../MMI/Resource/ABMLoader.c ****                 mmi_rg_write_9slice_header(image_type, _9slice_filename, outstream, MMI_FALSE);
 5705              	LM674:
 5706 2abc C744240C 		movl	$0, 12(%esp)
 5706      00000000 
 5707 2ac4 8B45C4   		movl	-60(%ebp), %eax
 5708 2ac7 89442408 		movl	%eax, 8(%esp)
 5709 2acb 8B4518   		movl	24(%ebp), %eax
 5710 2ace 89442404 		movl	%eax, 4(%esp)
 5711 2ad2 0FB645DF 		movzbl	-33(%ebp), %eax
 5712 2ad6 890424   		movl	%eax, (%esp)
 5713 2ad9 E8000000 		call	_mmi_rg_write_9slice_header
 5713      00
3110:../../MMI/Resource/ABMLoader.c ****                 ImageOutStreamOutputFile(outstream, outfile);
 5715              	LM675:
 5716 2ade 8B45E0   		movl	-32(%ebp), %eax
 5717 2ae1 89442404 		movl	%eax, 4(%esp)
 5718 2ae5 8B45C4   		movl	-60(%ebp), %eax
 5719 2ae8 890424   		movl	%eax, (%esp)
 5720 2aeb E8000000 		call	_ImageOutStreamOutputFile
 5720      00
3111:../../MMI/Resource/ABMLoader.c ****                 ImageOutStreamDeinit(&outstream);
 5722              	LM676:
 5723 2af0 8D45C4   		leal	-60(%ebp), %eax
 5724 2af3 890424   		movl	%eax, (%esp)
 5725 2af6 E8000000 		call	_ImageOutStreamDeinit
 5725      00
 5726              	L341:
3112:../../MMI/Resource/ABMLoader.c ****             }
3113:../../MMI/Resource/ABMLoader.c **** 
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 140


3114:../../MMI/Resource/ABMLoader.c ****             for (i = 0; i < size; i++)
 5728              	LM677:
 5729              	LBE40:
 5730 2afb C745E800 		movl	$0, -24(%ebp)
 5730      000000
 5731              	L342:
 5732 2b02 8B45E8   		movl	-24(%ebp), %eax
 5733 2b05 3B45F0   		cmpl	-16(%ebp), %eax
 5734 2b08 7C02     		jl	L345
 5735 2b0a EB44     		jmp	L343
 5736              	L345:
3115:../../MMI/Resource/ABMLoader.c ****             {
3116:../../MMI/Resource/ABMLoader.c ****                 if ((i % 16) == 0)
 5738              	LM678:
 5739 2b0c 8B45E8   		movl	-24(%ebp), %eax
 5740 2b0f 83E00F   		andl	$15, %eax
 5741 2b12 85C0     		testl	%eax, %eax
 5742 2b14 7513     		jne	L346
3117:../../MMI/Resource/ABMLoader.c ****                 {
3118:../../MMI/Resource/ABMLoader.c ****                     fprintf(outfile, "\n\t");
 5744              	LM679:
 5745 2b16 C7442404 		movl	$LC38, 4(%esp)
 5745      D0250000 
 5746 2b1e 8B45E0   		movl	-32(%ebp), %eax
 5747 2b21 890424   		movl	%eax, (%esp)
 5748 2b24 E8000000 		call	_fprintf
 5748      00
 5749              	L346:
3119:../../MMI/Resource/ABMLoader.c ****                 }
3120:../../MMI/Resource/ABMLoader.c ****                 fprintf(outfile, "0x%02X, ", buffer[i]);
 5751              	LM680:
 5752 2b29 8B45E8   		movl	-24(%ebp), %eax
 5753 2b2c 0345FC   		addl	-4(%ebp), %eax
 5754 2b2f 0FB600   		movzbl	(%eax), %eax
 5755 2b32 89442408 		movl	%eax, 8(%esp)
 5756 2b36 C7442404 		movl	$LC36, 4(%esp)
 5756      8B250000 
 5757 2b3e 8B45E0   		movl	-32(%ebp), %eax
 5758 2b41 890424   		movl	%eax, (%esp)
 5759 2b44 E8000000 		call	_fprintf
 5759      00
 5761              	LM681:
 5762 2b49 8D45E8   		leal	-24(%ebp), %eax
 5763 2b4c FF00     		incl	(%eax)
 5764 2b4e EBB2     		jmp	L342
 5765              	L343:
3121:../../MMI/Resource/ABMLoader.c ****             }
3122:../../MMI/Resource/ABMLoader.c ****         }
3123:../../MMI/Resource/ABMLoader.c **** 
3124:../../MMI/Resource/ABMLoader.c ****         fprintf(outfile, "\n};");
 5767              	LM682:
 5768 2b50 C7442404 		movl	$LC39, 4(%esp)
 5768      D3250000 
 5769 2b58 8B45E0   		movl	-32(%ebp), %eax
 5770 2b5b 890424   		movl	%eax, (%esp)
 5771 2b5e E8000000 		call	_fprintf
 5771      00
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 141


 5772              	L338:
3125:../../MMI/Resource/ABMLoader.c ****     }
3126:../../MMI/Resource/ABMLoader.c **** 
3127:../../MMI/Resource/ABMLoader.c ****     if (toolFlag != 1)
 5774              	LM683:
 5775              	LBE39:
 5776 2b63 833D0000 		cmpl	$1, _toolFlag
 5776      000001
 5777 2b6a 740B     		je	L347
3128:../../MMI/Resource/ABMLoader.c ****     {
3129:../../MMI/Resource/ABMLoader.c ****         fclose(outfile);
 5779              	LM684:
 5780 2b6c 8B45E0   		movl	-32(%ebp), %eax
 5781 2b6f 890424   		movl	%eax, (%esp)
 5782 2b72 E8000000 		call	_fclose
 5782      00
 5783              	L347:
3130:../../MMI/Resource/ABMLoader.c ****     }
3131:../../MMI/Resource/ABMLoader.c **** 
3132:../../MMI/Resource/ABMLoader.c ****     // TODO: Fix the return code
3133:../../MMI/Resource/ABMLoader.c ****     free(buffer);
 5785              	LM685:
 5786 2b77 8B45FC   		movl	-4(%ebp), %eax
 5787 2b7a 890424   		movl	%eax, (%esp)
 5788 2b7d E8000000 		call	_free
 5788      00
3134:../../MMI/Resource/ABMLoader.c ****     return ABM_ENC_RETURN_USE_ABM;
 5790              	LM686:
 5791 2b82 C745C001 		movl	$1, -64(%ebp)
 5791      000000
3135:../../MMI/Resource/ABMLoader.c **** }
 5793              	LM687:
 5794              	L314:
 5795              	LBE36:
 5796 2b89 8B45C0   		movl	-64(%ebp), %eax
 5797 2b8c C9       		leave
 5798 2b8d C3       		ret
 5825              	Lscope28:
 5831              	_ab2_bs_init:
 5833              	LM688:
 5834 2b8e 55       		pushl	%ebp
 5835 2b8f 89E5     		movl	%esp, %ebp
 5837              	LM689:
 5838 2b91 8B5508   		movl	8(%ebp), %edx
 5839 2b94 8B450C   		movl	12(%ebp), %eax
 5840 2b97 8902     		movl	%eax, (%edx)
 5842              	LM690:
 5843 2b99 8B4508   		movl	8(%ebp), %eax
 5844 2b9c C7400400 		movl	$0, 4(%eax)
 5844      000000
 5846              	LM691:
 5847 2ba3 8B4508   		movl	8(%ebp), %eax
 5848 2ba6 C7400800 		movl	$0, 8(%eax)
 5848      000000
 5850              	LM692:
 5851 2bad 5D       		popl	%ebp
 5852 2bae C3       		ret
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 142


 5853              	Lscope29:
 5860              	_ab2_bs_write:
 5862              	LM693:
 5863 2baf 55       		pushl	%ebp
 5864 2bb0 89E5     		movl	%esp, %ebp
 5865 2bb2 53       		pushl	%ebx
 5867              	LM694:
 5868 2bb3 8B5D08   		movl	8(%ebp), %ebx
 5869 2bb6 8B5508   		movl	8(%ebp), %edx
 5870 2bb9 8B4508   		movl	8(%ebp), %eax
 5871 2bbc 0FB64808 		movzbl	8(%eax), %ecx
 5872 2bc0 8B450C   		movl	12(%ebp), %eax
 5873 2bc3 D3E0     		sall	%cl, %eax
 5874 2bc5 0B4204   		orl	4(%edx), %eax
 5875 2bc8 894304   		movl	%eax, 4(%ebx)
 5877              	LM695:
 5878 2bcb 8B4D08   		movl	8(%ebp), %ecx
 5879 2bce 8B5508   		movl	8(%ebp), %edx
 5880 2bd1 8B4510   		movl	16(%ebp), %eax
 5881 2bd4 034208   		addl	8(%edx), %eax
 5882 2bd7 894108   		movl	%eax, 8(%ecx)
 5884              	LM696:
 5885 2bda 8B4508   		movl	8(%ebp), %eax
 5886 2bdd 8378080F 		cmpl	$15, 8(%eax)
 5887 2be1 763A     		jbe	L135
 5889              	LM697:
 5890 2be3 8B4508   		movl	8(%ebp), %eax
 5891 2be6 8B10     		movl	(%eax), %edx
 5892 2be8 8B4508   		movl	8(%ebp), %eax
 5893 2beb 0FB74004 		movzwl	4(%eax), %eax
 5894 2bef 668902   		movw	%ax, (%edx)
 5896              	LM698:
 5897 2bf2 8B5508   		movl	8(%ebp), %edx
 5898 2bf5 8B4508   		movl	8(%ebp), %eax
 5899 2bf8 8B4004   		movl	4(%eax), %eax
 5900 2bfb C1E810   		shrl	$16, %eax
 5901 2bfe 894204   		movl	%eax, 4(%edx)
 5903              	LM699:
 5904 2c01 8B5508   		movl	8(%ebp), %edx
 5905 2c04 8B4508   		movl	8(%ebp), %eax
 5906 2c07 8B4008   		movl	8(%eax), %eax
 5907 2c0a 83E810   		subl	$16, %eax
 5908 2c0d 894208   		movl	%eax, 8(%edx)
 5910              	LM700:
 5911 2c10 8B5508   		movl	8(%ebp), %edx
 5912 2c13 8B4508   		movl	8(%ebp), %eax
 5913 2c16 8B00     		movl	(%eax), %eax
 5914 2c18 83C002   		addl	$2, %eax
 5915 2c1b 8902     		movl	%eax, (%edx)
 5917              	LM701:
 5918              	L135:
 5919 2c1d 5B       		popl	%ebx
 5920 2c1e 5D       		popl	%ebp
 5921 2c1f C3       		ret
 5922              	Lscope30:
 5928              	_ab2_bs_offset:
 5930              	LM702:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 143


 5931 2c20 55       		pushl	%ebp
 5932 2c21 89E5     		movl	%esp, %ebp
 5934              	LM703:
 5935 2c23 8B4508   		movl	8(%ebp), %eax
 5936 2c26 8B550C   		movl	12(%ebp), %edx
 5937 2c29 8B00     		movl	(%eax), %eax
 5938 2c2b 29D0     		subl	%edx, %eax
 5940              	LM704:
 5941 2c2d 5D       		popl	%ebp
 5942 2c2e C3       		ret
 5943              	Lscope31:
 5950              	_ab2enc_get_img_color_idx:
 5952              	LM705:
 5953 2c2f 55       		pushl	%ebp
 5954 2c30 89E5     		movl	%esp, %ebp
 5955 2c32 83EC38   		subl	$56, %esp
 5957              	LM706:
 5958              	LBB41:
 5959 2c35 8B4510   		movl	16(%ebp), %eax
 5960 2c38 8B4008   		movl	8(%eax), %eax
 5961 2c3b 8945E0   		movl	%eax, -32(%ebp)
 5962 2c3e 837DE000 		cmpl	$0, -32(%ebp)
 5963 2c42 7904     		jns	L155
 5964 2c44 8345E007 		addl	$7, -32(%ebp)
 5965              	L155:
 5966 2c48 8B45E0   		movl	-32(%ebp), %eax
 5967 2c4b C1F803   		sarl	$3, %eax
 5968 2c4e 8945FC   		movl	%eax, -4(%ebp)
 5970              	LM707:
 5971 2c51 8B5510   		movl	16(%ebp), %edx
 5972 2c54 8B45FC   		movl	-4(%ebp), %eax
 5973 2c57 0FAF02   		imull	(%edx), %eax
 5974 2c5a 89C2     		movl	%eax, %edx
 5975 2c5c 8B4510   		movl	16(%ebp), %eax
 5976 2c5f 8B881404 		movl	1044(%eax), %ecx
 5976      0000
 5977 2c65 8D0411   		leal	(%ecx,%edx), %eax
 5978 2c68 8945F8   		movl	%eax, -8(%ebp)
 5980              	LM708:
 5981 2c6b 8B4510   		movl	16(%ebp), %eax
 5982 2c6e 83780804 		cmpl	$4, 8(%eax)
 5983 2c72 755D     		jne	L156
 5985              	LM709:
 5986 2c74 8B4510   		movl	16(%ebp), %eax
 5987 2c77 8B00     		movl	(%eax), %eax
 5988 2c79 83C007   		addl	$7, %eax
 5989 2c7c 8945DC   		movl	%eax, -36(%ebp)
 5990 2c7f 837DDC00 		cmpl	$0, -36(%ebp)
 5991 2c83 7904     		jns	L157
 5992 2c85 8345DC07 		addl	$7, -36(%ebp)
 5993              	L157:
 5994 2c89 8B45DC   		movl	-36(%ebp), %eax
 5995 2c8c C1F803   		sarl	$3, %eax
 5996 2c8f C1E002   		sall	$2, %eax
 5997 2c92 8945EC   		movl	%eax, -20(%ebp)
 5999              	LM710:
 6000 2c95 8B4D10   		movl	16(%ebp), %ecx
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 144


 6001 2c98 8B4510   		movl	16(%ebp), %eax
 6002 2c9b 8B550C   		movl	12(%ebp), %edx
 6003 2c9e 8B4004   		movl	4(%eax), %eax
 6004 2ca1 29D0     		subl	%edx, %eax
 6005 2ca3 48       		decl	%eax
 6006 2ca4 0FAF45EC 		imull	-20(%ebp), %eax
 6007 2ca8 8B911004 		movl	1040(%ecx), %edx
 6007      0000
 6008 2cae 8D0C02   		leal	(%edx,%eax), %ecx
 6009 2cb1 8B4508   		movl	8(%ebp), %eax
 6010 2cb4 89C2     		movl	%eax, %edx
 6011 2cb6 83E201   		andl	$1, %edx
 6012 2cb9 8B4508   		movl	8(%ebp), %eax
 6013 2cbc 29D0     		subl	%edx, %eax
 6014 2cbe D1E8     		shrl	%eax
 6015 2cc0 8D0408   		leal	(%eax,%ecx), %eax
 6016 2cc3 8945F4   		movl	%eax, -12(%ebp)
 6018              	LM711:
 6019 2cc6 8B4508   		movl	8(%ebp), %eax
 6020 2cc9 83E001   		andl	$1, %eax
 6021 2ccc 8845F2   		movb	%al, -14(%ebp)
 6022 2ccf EB2A     		jmp	L158
 6023              	L156:
 6025              	LM712:
 6026 2cd1 8B4510   		movl	16(%ebp), %eax
 6027 2cd4 8B550C   		movl	12(%ebp), %edx
 6028 2cd7 8B4004   		movl	4(%eax), %eax
 6029 2cda 29D0     		subl	%edx, %eax
 6030 2cdc 48       		decl	%eax
 6031 2cdd 89C2     		movl	%eax, %edx
 6032 2cdf 0FAF55F8 		imull	-8(%ebp), %edx
 6033 2ce3 8B45FC   		movl	-4(%ebp), %eax
 6034 2ce6 0FAF4508 		imull	8(%ebp), %eax
 6035 2cea 01C2     		addl	%eax, %edx
 6036 2cec 8B4510   		movl	16(%ebp), %eax
 6037 2cef 8B881004 		movl	1040(%eax), %ecx
 6037      0000
 6038 2cf5 8D0411   		leal	(%ecx,%edx), %eax
 6039 2cf8 8945F4   		movl	%eax, -12(%ebp)
 6040              	L158:
 6042              	LM713:
 6043 2cfb 8B4510   		movl	16(%ebp), %eax
 6044 2cfe 83780820 		cmpl	$32, 8(%eax)
 6045 2d02 756F     		jne	L159
 6047              	LM714:
 6048 2d04 8B45F4   		movl	-12(%ebp), %eax
 6049 2d07 0FB610   		movzbl	(%eax), %edx
 6050 2d0a 8B45F4   		movl	-12(%ebp), %eax
 6051 2d0d 40       		incl	%eax
 6052 2d0e 0FB600   		movzbl	(%eax), %eax
 6053 2d11 C1E008   		sall	$8, %eax
 6054 2d14 09C2     		orl	%eax, %edx
 6055 2d16 8B45F4   		movl	-12(%ebp), %eax
 6056 2d19 83C002   		addl	$2, %eax
 6057 2d1c 0FB600   		movzbl	(%eax), %eax
 6058 2d1f C1E010   		sall	$16, %eax
 6059 2d22 09C2     		orl	%eax, %edx
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 145


 6060 2d24 8B45F4   		movl	-12(%ebp), %eax
 6061 2d27 83C003   		addl	$3, %eax
 6062 2d2a 0FB600   		movzbl	(%eax), %eax
 6063 2d2d C1E018   		sall	$24, %eax
 6064 2d30 09D0     		orl	%edx, %eax
 6065 2d32 8945E8   		movl	%eax, -24(%ebp)
 6067              	LM715:
 6068 2d35 8B4510   		movl	16(%ebp), %eax
 6069 2d38 83B82C04 		cmpl	$0, 1068(%eax)
 6069      000000
 6070 2d3f 7409     		je	L160
 6072              	LM716:
 6073 2d41 8D45E8   		leal	-24(%ebp), %eax
 6074 2d44 81080000 		orl	$-16777216, (%eax)
 6074      00FF
 6075              	L160:
 6077              	LM717:
 6078 2d4a 8B4510   		movl	16(%ebp), %eax
 6079 2d4d 83B82804 		cmpl	$0, 1064(%eax)
 6079      000000
 6080 2d54 0F84CA00 		je	L162
 6080      0000
 6081 2d5a 817DE80C 		cmpl	$-16119028, -24(%ebp)
 6081      0B0AFF
 6082 2d61 0F85BD00 		jne	L162
 6082      0000
 6084              	LM718:
 6085 2d67 C745E800 		movl	$0, -24(%ebp)
 6085      000000
 6086 2d6e E9B10000 		jmp	L162
 6086      00
 6087              	L159:
 6089              	LM719:
 6090 2d73 8B4510   		movl	16(%ebp), %eax
 6091 2d76 83780818 		cmpl	$24, 8(%eax)
 6092 2d7a 754C     		jne	L163
 6094              	LM720:
 6095 2d7c 8B45F4   		movl	-12(%ebp), %eax
 6096 2d7f 0FB610   		movzbl	(%eax), %edx
 6097 2d82 8B45F4   		movl	-12(%ebp), %eax
 6098 2d85 40       		incl	%eax
 6099 2d86 0FB600   		movzbl	(%eax), %eax
 6100 2d89 C1E008   		sall	$8, %eax
 6101 2d8c 09C2     		orl	%eax, %edx
 6102 2d8e 8B45F4   		movl	-12(%ebp), %eax
 6103 2d91 83C002   		addl	$2, %eax
 6104 2d94 0FB600   		movzbl	(%eax), %eax
 6105 2d97 C1E010   		sall	$16, %eax
 6106 2d9a 09D0     		orl	%edx, %eax
 6107 2d9c 8945E8   		movl	%eax, -24(%ebp)
 6109              	LM721:
 6110 2d9f 8B4510   		movl	16(%ebp), %eax
 6111 2da2 83B82804 		cmpl	$0, 1064(%eax)
 6111      000000
 6112 2da9 7412     		je	L164
 6113 2dab 817DE80C 		cmpl	$658188, -24(%ebp)
 6113      0B0A00
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 146


 6114 2db2 7509     		jne	L164
 6116              	LM722:
 6117 2db4 C745E800 		movl	$0, -24(%ebp)
 6117      000000
 6118 2dbb EB67     		jmp	L162
 6119              	L164:
 6121              	LM723:
 6122 2dbd 8D45E8   		leal	-24(%ebp), %eax
 6123 2dc0 81080000 		orl	$-16777216, (%eax)
 6123      00FF
 6124 2dc6 EB5C     		jmp	L162
 6125              	L163:
 6127              	LM724:
 6128 2dc8 8B4510   		movl	16(%ebp), %eax
 6129 2dcb 83780808 		cmpl	$8, 8(%eax)
 6130 2dcf 7512     		jne	L167
 6132              	LM725:
 6133 2dd1 8B5510   		movl	16(%ebp), %edx
 6134 2dd4 8B45F4   		movl	-12(%ebp), %eax
 6135 2dd7 0FB600   		movzbl	(%eax), %eax
 6136 2dda 8B448210 		movl	16(%edx,%eax,4), %eax
 6137 2dde 8945E8   		movl	%eax, -24(%ebp)
 6138 2de1 EB41     		jmp	L162
 6139              	L167:
 6141              	LM726:
 6142 2de3 8B4510   		movl	16(%ebp), %eax
 6143 2de6 83780804 		cmpl	$4, 8(%eax)
 6144 2dea 752F     		jne	L169
 6146              	LM727:
 6147 2dec 807DF200 		cmpb	$0, -14(%ebp)
 6148 2df0 750E     		jne	L170
 6150              	LM728:
 6151 2df2 8B45F4   		movl	-12(%ebp), %eax
 6152 2df5 0FB600   		movzbl	(%eax), %eax
 6153 2df8 C0E804   		shrb	$4, %al
 6154 2dfb 8845F3   		movb	%al, -13(%ebp)
 6155 2dfe EB0B     		jmp	L171
 6156              	L170:
 6158              	LM729:
 6159 2e00 8B45F4   		movl	-12(%ebp), %eax
 6160 2e03 0FB600   		movzbl	(%eax), %eax
 6161 2e06 240F     		andb	$15, %al
 6162 2e08 8845F3   		movb	%al, -13(%ebp)
 6163              	L171:
 6165              	LM730:
 6166 2e0b 8B4510   		movl	16(%ebp), %eax
 6167 2e0e 0FB655F3 		movzbl	-13(%ebp), %edx
 6168 2e12 8B449010 		movl	16(%eax,%edx,4), %eax
 6169 2e16 8945E8   		movl	%eax, -24(%ebp)
 6170 2e19 EB09     		jmp	L162
 6171              	L169:
 6173              	LM731:
 6174 2e1b C745E4FF 		movl	$65535, -28(%ebp)
 6174      FF0000
 6175 2e22 EB3A     		jmp	L154
 6176              	L162:
 6178              	LM732:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 147


 6179 2e24 8B45E8   		movl	-24(%ebp), %eax
 6180 2e27 C1E818   		shrl	$24, %eax
 6181 2e2a 85C0     		testl	%eax, %eax
 6182 2e2c 7509     		jne	L173
 6184              	LM733:
 6185 2e2e C745E400 		movl	$0, -28(%ebp)
 6185      000000
 6186 2e35 EB27     		jmp	L154
 6187              	L173:
 6189              	LM734:
 6190 2e37 8B4510   		movl	16(%ebp), %eax
 6191 2e3a 89442404 		movl	%eax, 4(%esp)
 6192 2e3e 8B45E8   		movl	-24(%ebp), %eax
 6193 2e41 890424   		movl	%eax, (%esp)
 6194 2e44 E828D3FF 		call	_COLOR_REDUCE
 6194      FF
 6195 2e49 89C2     		movl	%eax, %edx
 6196 2e4b 8B4510   		movl	16(%ebp), %eax
 6197 2e4e 89442404 		movl	%eax, 4(%esp)
 6198 2e52 891424   		movl	%edx, (%esp)
 6199 2e55 E844D3FF 		call	_search_color
 6199      FF
 6200 2e5a 40       		incl	%eax
 6201 2e5b 8945E4   		movl	%eax, -28(%ebp)
 6203              	LM735:
 6204              	L154:
 6205              	LBE41:
 6206 2e5e 8B45E4   		movl	-28(%ebp), %eax
 6207 2e61 C9       		leave
 6208 2e62 C3       		ret
 6218              	Lscope32:
 6222              		.text
 6224              	Letext:
GAS LISTING d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s 			page 148


DEFINED SYMBOLS
                            *ABS*:00000000 ABMLoader.c
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:482    .text:00000060 _image_resource_info
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:639    .text:00000108 _log2_table
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:659    .text:00000126 _COLOR_REDUCE_24_TO_16
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:699    .text:00000164 _COLOR_REDUCE_24_TO_18
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:718    .text:00000171 _COLOR_REDUCE
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:749    .text:0000019e _search_color
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:848    .text:0000022c _insert_color_at
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:917    .text:00000295 _add_color_if_new
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:985    .text:0000030a _get_normal_color_num
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:1036   .text:0000034c _get_file_size
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:1089   .text:000003a8 _parse_bitmap
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:1560   .text:00000839 _load_bmp_file
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:1711   .text:000009b1 _update_image_bounding_box
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:1814   .text:00000a51 _limit_image_bounding_box
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:1915   .text:00000b0a _abmenc_build_color_index_table
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2280   .text:00000dee _log2_ceiling
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2328   .text:00000e22 _ab2_bs_flush
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2371   .text:00000e60 _ab2enc_color_preprocess
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2512   .text:00000f62 _ab2enc_get_pixel_format
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2607   .text:00001002 _ab2_encode_rle_repeat_code
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2691   .text:00001093 _ab2_encode_rle_discount_code
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:2881   .text:000011e2 _ab2enc_encode_header
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:3037   .text:0000135a _ab2enc_rle_encode_header
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:3319   .text:000015ec _ab2enc_rle_encode_body
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:3661   .text:00001887 _ab2enc_encode
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:3782   .text:00001959 _abmenc_encode
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:4398   .text:00001e4f _caculate_abm_size
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:4501   .text:00001f06 _caculate_pbm_size
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:4530   .text:00001f31 _is16BitBMP
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:4742   .text:0000211b _ABM_load
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:5236   .text:000025d7 _ABMLoader
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:5831   .text:00002b8e _ab2_bs_init
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:5860   .text:00002baf _ab2_bs_write
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:5928   .text:00002c20 _ab2_bs_offset
d:/github/AIOT_WORKSHOP/AIoT_MT2503AVE_SDK/11CW1418SP4_03_CORETEK03AE_11C_V1_GPRS_MMI/plutommi/Customer/ResGenerator/gcctmp/cc0cfaaa.s:5950   .text:00002c2f _ab2enc_get_img_color_idx

UNDEFINED SYMBOLS
_toolFlag
_dest_file
_ImageOutStreamDeinit
_ImageOutStreamOutputFile
_mmi_rg_write_9slice_header
_ImageOutStreamInit
_fprintf
_strlen
_memset
_free
_malloc
_fread
_fclose
_reslog_adaptor_log
_fopen
_fseek
_ftell
